// This file is generated by CodeSmith. Do not edit. All edits to this file will be lost. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Dynamic;
using System.Linq.Expressions;
using System.Reflection;
using System.Xml.Serialization;

//using Indico.BusinessObjects.Util;
//using Indico.BusinessObjects;
using Indico.DAL;


namespace Indico.BusinessObjects
{
    /// <summary>
    /// ReturnPatternDetailsViewBO provides the business logic for maintaining Indico.DAL.ReturnPatternDetailsView records in the data store.
    /// </summary>
    /// <remarks>
    /// ReturnPatternDetailsViewBO provides the business logic for maintaining Indico.DAL.ReturnPatternDetailsView records in the data store. 
    /// By default it provides basic Search methods for retrieving Indico.DAL.ReturnPatternDetailsView
    /// records using the ReturnPatternDetailsView DAL class. Other methods implement atomic chunks of Business Logic according to
    /// the business rules.
    /// </remarks>
    public partial class ReturnPatternDetailsViewBO : BusinessObject, IComparable
    {
        #region fields
        private int? _pattern;
        private string _item;
        private string _subItem;
        private string _gender;
        private string _ageGroup;
        private string _sizeSet;
        private string _coreCategory;
        private string _printerType;
        private string _number;
        private string _originRef;
        private string _nickName;
        private string _keywords;
        private string _corePattern;
        private string _factoryDescription;
        private string _consumption;
        private decimal? _convertionFactor;
        private string _specialAttributes;
        private string _patternNotes;
        private string _priceRemarks;
        private bool? _isActive;
        private int? _creator;
        private DateTime? _createdDate;
        private int? _modifier;
        private DateTime? _modifiedDate;
        private string _remarks;
        private bool? _isTemplate;
        private int? _parent;
        private string _garmentSpecStatus;
        private bool? _isActiveWS;
        private bool? _isCoreRange;
        private string _hTSCode;
        private decimal? _sMV;
        private string _marketingDescription;
        private bool? _patternParent;
        private bool? _reservation;
        private bool? _price;
        private bool? _patternTemplateImage;
        private bool? _product;
        private bool? _orderDetail;
        private bool? _visualLayout;
        #endregion
        
        #region Properties
        /// <summary></summary>
        public int? Pattern
        {   get {return _pattern;}
            set 
            {
                _pattern = value;
            }
        }
        /// <summary></summary>
        public string Item
        {   get {return _item;}
            set 
            {
                _item = value;
            }
        }
        /// <summary></summary>
        public string SubItem
        {   get {return _subItem;}
            set 
            {
                _subItem = value;
            }
        }
        /// <summary></summary>
        public string Gender
        {   get {return _gender;}
            set 
            {
                _gender = value;
            }
        }
        /// <summary></summary>
        public string AgeGroup
        {   get {return _ageGroup;}
            set 
            {
                _ageGroup = value;
            }
        }
        /// <summary></summary>
        public string SizeSet
        {   get {return _sizeSet;}
            set 
            {
                _sizeSet = value;
            }
        }
        /// <summary></summary>
        public string CoreCategory
        {   get {return _coreCategory;}
            set 
            {
                _coreCategory = value;
            }
        }
        /// <summary></summary>
        public string PrinterType
        {   get {return _printerType;}
            set 
            {
                _printerType = value;
            }
        }
        /// <summary></summary>
        public string Number
        {   get {return _number;}
            set 
            {
                _number = value;
            }
        }
        /// <summary></summary>
        public string OriginRef
        {   get {return _originRef;}
            set 
            {
                _originRef = value;
            }
        }
        /// <summary></summary>
        public string NickName
        {   get {return _nickName;}
            set 
            {
                _nickName = value;
            }
        }
        /// <summary></summary>
        public string Keywords
        {   get {return _keywords;}
            set 
            {
                _keywords = value;
            }
        }
        /// <summary></summary>
        public string CorePattern
        {   get {return _corePattern;}
            set 
            {
                _corePattern = value;
            }
        }
        /// <summary></summary>
        public string FactoryDescription
        {   get {return _factoryDescription;}
            set 
            {
                _factoryDescription = value;
            }
        }
        /// <summary></summary>
        public string Consumption
        {   get {return _consumption;}
            set 
            {
                _consumption = value;
            }
        }
        /// <summary></summary>
        public decimal? ConvertionFactor
        {   get {return _convertionFactor;}
            set 
            {
                _convertionFactor = value;
            }
        }
        /// <summary></summary>
        public string SpecialAttributes
        {   get {return _specialAttributes;}
            set 
            {
                _specialAttributes = value;
            }
        }
        /// <summary></summary>
        public string PatternNotes
        {   get {return _patternNotes;}
            set 
            {
                _patternNotes = value;
            }
        }
        /// <summary></summary>
        public string PriceRemarks
        {   get {return _priceRemarks;}
            set 
            {
                _priceRemarks = value;
            }
        }
        /// <summary></summary>
        public bool? IsActive
        {   get {return _isActive;}
            set 
            {
                _isActive = value;
            }
        }
        /// <summary></summary>
        public int? Creator
        {   get {return _creator;}
            set 
            {
                _creator = value;
            }
        }
        /// <summary></summary>
        public DateTime? CreatedDate
        {   get {return _createdDate;}
            set 
            {
                _createdDate = value;
            }
        }
        /// <summary></summary>
        public int? Modifier
        {   get {return _modifier;}
            set 
            {
                _modifier = value;
            }
        }
        /// <summary></summary>
        public DateTime? ModifiedDate
        {   get {return _modifiedDate;}
            set 
            {
                _modifiedDate = value;
            }
        }
        /// <summary></summary>
        public string Remarks
        {   get {return _remarks;}
            set 
            {
                _remarks = value;
            }
        }
        /// <summary></summary>
        public bool? IsTemplate
        {   get {return _isTemplate;}
            set 
            {
                _isTemplate = value;
            }
        }
        /// <summary></summary>
        public int? Parent
        {   get {return _parent;}
            set 
            {
                _parent = value;
            }
        }
        /// <summary></summary>
        public string GarmentSpecStatus
        {   get {return _garmentSpecStatus;}
            set 
            {
                _garmentSpecStatus = value;
            }
        }
        /// <summary></summary>
        public bool? IsActiveWS
        {   get {return _isActiveWS;}
            set 
            {
                _isActiveWS = value;
            }
        }
        /// <summary></summary>
        public bool? IsCoreRange
        {   get {return _isCoreRange;}
            set 
            {
                _isCoreRange = value;
            }
        }
        /// <summary></summary>
        public string HTSCode
        {   get {return _hTSCode;}
            set 
            {
                _hTSCode = value;
            }
        }
        /// <summary></summary>
        public decimal? SMV
        {   get {return _sMV;}
            set 
            {
                _sMV = value;
            }
        }
        /// <summary></summary>
        public string MarketingDescription
        {   get {return _marketingDescription;}
            set 
            {
                _marketingDescription = value;
            }
        }
        /// <summary></summary>
        public bool? PatternParent
        {   get {return _patternParent;}
            set 
            {
                _patternParent = value;
            }
        }
        /// <summary></summary>
        public bool? Reservation
        {   get {return _reservation;}
            set 
            {
                _reservation = value;
            }
        }
        /// <summary></summary>
        public bool? Price
        {   get {return _price;}
            set 
            {
                _price = value;
            }
        }
        /// <summary></summary>
        public bool? PatternTemplateImage
        {   get {return _patternTemplateImage;}
            set 
            {
                _patternTemplateImage = value;
            }
        }
        /// <summary></summary>
        public bool? Product
        {   get {return _product;}
            set 
            {
                _product = value;
            }
        }
        /// <summary></summary>
        public bool? OrderDetail
        {   get {return _orderDetail;}
            set 
            {
                _orderDetail = value;
            }
        }
        /// <summary></summary>
        public bool? VisualLayout
        {   get {return _visualLayout;}
            set 
            {
                _visualLayout = value;
            }
        }
        #endregion
        
        #region Internal Constructors
        /// <summary>
        /// Creates an instance of the ReturnPatternDetailsViewBO class using the supplied Indico.DAL.ReturnPatternDetailsView. 
        /// </summary>
        /// <param name="obj">a Indico.DAL.ReturnPatternDetailsView whose properties will be used to initialise the ReturnPatternDetailsViewBO</param>
        internal ReturnPatternDetailsViewBO(Indico.DAL.ReturnPatternDetailsView obj)
        {
            // set the properties from the Indico.DAL.ReturnPatternDetailsView 
            this.Pattern = obj.Pattern;
            this.Item = obj.Item;
            this.SubItem = obj.SubItem;
            this.Gender = obj.Gender;
            this.AgeGroup = obj.AgeGroup;
            this.SizeSet = obj.SizeSet;
            this.CoreCategory = obj.CoreCategory;
            this.PrinterType = obj.PrinterType;
            this.Number = obj.Number;
            this.OriginRef = obj.OriginRef;
            this.NickName = obj.NickName;
            this.Keywords = obj.Keywords;
            this.CorePattern = obj.CorePattern;
            this.FactoryDescription = obj.FactoryDescription;
            this.Consumption = obj.Consumption;
            this.ConvertionFactor = obj.ConvertionFactor;
            this.SpecialAttributes = obj.SpecialAttributes;
            this.PatternNotes = obj.PatternNotes;
            this.PriceRemarks = obj.PriceRemarks;
            this.IsActive = obj.IsActive;
            this.Creator = obj.Creator;
            this.CreatedDate = obj.CreatedDate;
            this.Modifier = obj.Modifier;
            this.ModifiedDate = obj.ModifiedDate;
            this.Remarks = obj.Remarks;
            this.IsTemplate = obj.IsTemplate;
            this.Parent = obj.Parent;
            this.GarmentSpecStatus = obj.GarmentSpecStatus;
            this.IsActiveWS = obj.IsActiveWS;
            this.IsCoreRange = obj.IsCoreRange;
            this.HTSCode = obj.HTSCode;
            this.SMV = obj.SMV;
            this.MarketingDescription = obj.MarketingDescription;
            this.PatternParent = obj.PatternParent;
            this.Reservation = obj.Reservation;
            this.Price = obj.Price;
            this.PatternTemplateImage = obj.PatternTemplateImage;
            this.Product = obj.Product;
            this.OrderDetail = obj.OrderDetail;
            this.VisualLayout = obj.VisualLayout;
        }
        #endregion
        
        #region Internal utility methods
        internal void SetDAL(Indico.DAL.ReturnPatternDetailsView obj, IndicoEntities context)
        {
            // set the Indico.DAL.ReturnPatternDetailsView properties
            obj.Pattern = Convert.ToInt32(Pattern);
            obj.Item = Item;
            obj.SubItem = SubItem;
            obj.Gender = Gender;
            obj.AgeGroup = AgeGroup;
            obj.SizeSet = SizeSet;
            obj.CoreCategory = CoreCategory;
            obj.PrinterType = PrinterType;
            obj.Number = Number;
            obj.OriginRef = OriginRef;
            obj.NickName = NickName;
            obj.Keywords = Keywords;
            obj.CorePattern = CorePattern;
            obj.FactoryDescription = FactoryDescription;
            obj.Consumption = Consumption;
            obj.ConvertionFactor = Convert.ToDecimal(ConvertionFactor);
            obj.SpecialAttributes = SpecialAttributes;
            obj.PatternNotes = PatternNotes;
            obj.PriceRemarks = PriceRemarks;
            obj.IsActive = Convert.ToBoolean(IsActive);
            obj.Creator = Convert.ToInt32(Creator);
            obj.CreatedDate = Convert.ToDateTime(CreatedDate);
            obj.Modifier = Convert.ToInt32(Modifier);
            obj.ModifiedDate = Convert.ToDateTime(ModifiedDate);
            obj.Remarks = Remarks;
            obj.IsTemplate = Convert.ToBoolean(IsTemplate);
            obj.Parent = Convert.ToInt32(Parent);
            obj.GarmentSpecStatus = GarmentSpecStatus;
            obj.IsActiveWS = Convert.ToBoolean(IsActiveWS);
            obj.IsCoreRange = Convert.ToBoolean(IsCoreRange);
            obj.HTSCode = HTSCode;
            obj.SMV = Convert.ToDecimal(SMV);
            obj.MarketingDescription = MarketingDescription;
            obj.PatternParent = Convert.ToBoolean(PatternParent);
            obj.Reservation = Convert.ToBoolean(Reservation);
            obj.Price = Convert.ToBoolean(Price);
            obj.PatternTemplateImage = Convert.ToBoolean(PatternTemplateImage);
            obj.Product = Convert.ToBoolean(Product);
            obj.OrderDetail = Convert.ToBoolean(OrderDetail);
            obj.VisualLayout = Convert.ToBoolean(VisualLayout);
        }
        
        internal void SetBO(Indico.DAL.ReturnPatternDetailsView obj)
        {
            // set the Indico.BusinessObjects.ReturnPatternDetailsViewBO properties    
            this.Pattern = obj.Pattern;
            this.Item = obj.Item;
            this.SubItem = obj.SubItem;
            this.Gender = obj.Gender;
            this.AgeGroup = obj.AgeGroup;
            this.SizeSet = obj.SizeSet;
            this.CoreCategory = obj.CoreCategory;
            this.PrinterType = obj.PrinterType;
            this.Number = obj.Number;
            this.OriginRef = obj.OriginRef;
            this.NickName = obj.NickName;
            this.Keywords = obj.Keywords;
            this.CorePattern = obj.CorePattern;
            this.FactoryDescription = obj.FactoryDescription;
            this.Consumption = obj.Consumption;
            this.ConvertionFactor = obj.ConvertionFactor;
            this.SpecialAttributes = obj.SpecialAttributes;
            this.PatternNotes = obj.PatternNotes;
            this.PriceRemarks = obj.PriceRemarks;
            this.IsActive = obj.IsActive;
            this.Creator = obj.Creator;
            this.CreatedDate = obj.CreatedDate;
            this.Modifier = obj.Modifier;
            this.ModifiedDate = obj.ModifiedDate;
            this.Remarks = obj.Remarks;
            this.IsTemplate = obj.IsTemplate;
            this.Parent = obj.Parent;
            this.GarmentSpecStatus = obj.GarmentSpecStatus;
            this.IsActiveWS = obj.IsActiveWS;
            this.IsCoreRange = obj.IsCoreRange;
            this.HTSCode = obj.HTSCode;
            this.SMV = obj.SMV;
            this.MarketingDescription = obj.MarketingDescription;
            this.PatternParent = obj.PatternParent;
            this.Reservation = obj.Reservation;
            this.Price = obj.Price;
            this.PatternTemplateImage = obj.PatternTemplateImage;
            this.Product = obj.Product;
            this.OrderDetail = obj.OrderDetail;
            this.VisualLayout = obj.VisualLayout;
        }
        
        internal void SetBO(Indico.BusinessObjects.ReturnPatternDetailsViewBO obj)
        {
            // set this Indico.BusinessObjects.ReturnPatternDetailsViewBO properties
            this.Pattern = obj.Pattern;
            this.Item = obj.Item;
            this.SubItem = obj.SubItem;
            this.Gender = obj.Gender;
            this.AgeGroup = obj.AgeGroup;
            this.SizeSet = obj.SizeSet;
            this.CoreCategory = obj.CoreCategory;
            this.PrinterType = obj.PrinterType;
            this.Number = obj.Number;
            this.OriginRef = obj.OriginRef;
            this.NickName = obj.NickName;
            this.Keywords = obj.Keywords;
            this.CorePattern = obj.CorePattern;
            this.FactoryDescription = obj.FactoryDescription;
            this.Consumption = obj.Consumption;
            this.ConvertionFactor = obj.ConvertionFactor;
            this.SpecialAttributes = obj.SpecialAttributes;
            this.PatternNotes = obj.PatternNotes;
            this.PriceRemarks = obj.PriceRemarks;
            this.IsActive = obj.IsActive;
            this.Creator = obj.Creator;
            this.CreatedDate = obj.CreatedDate;
            this.Modifier = obj.Modifier;
            this.ModifiedDate = obj.ModifiedDate;
            this.Remarks = obj.Remarks;
            this.IsTemplate = obj.IsTemplate;
            this.Parent = obj.Parent;
            this.GarmentSpecStatus = obj.GarmentSpecStatus;
            this.IsActiveWS = obj.IsActiveWS;
            this.IsCoreRange = obj.IsCoreRange;
            this.HTSCode = obj.HTSCode;
            this.SMV = obj.SMV;
            this.MarketingDescription = obj.MarketingDescription;
            this.PatternParent = obj.PatternParent;
            this.Reservation = obj.Reservation;
            this.Price = obj.Price;
            this.PatternTemplateImage = obj.PatternTemplateImage;
            this.Product = obj.Product;
            this.OrderDetail = obj.OrderDetail;
            this.VisualLayout = obj.VisualLayout;
        }
        
        private static List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> IQueryableToList(IQueryable<Indico.DAL.ReturnPatternDetailsView> oQuery)
        {
            List<Indico.DAL.ReturnPatternDetailsView> oList = oQuery.ToList();
            List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> rList = new List<Indico.BusinessObjects.ReturnPatternDetailsViewBO>(oList.Count);
            foreach (Indico.DAL.ReturnPatternDetailsView o in oList)
            {
                Indico.BusinessObjects.ReturnPatternDetailsViewBO obj = new Indico.BusinessObjects.ReturnPatternDetailsViewBO(o);
                rList.Add(obj);
            }
            return rList;
        }
        #endregion
        
        #region BusinessObject methods
        
        #region GetAllObject
        public static List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> GetAllObject()
        {
            return GetAllObject(0, 0);
        }
        public static List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> GetAllObject(int maximumRows)
        {
            return GetAllObject(maximumRows, 0);
        }
        public static List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> GetAllObject(int maximumRows, int startIndex)
        {
            return GetAllObject(maximumRows, startIndex, null, false);
        }
        public static List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> GetAllObject(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = new IndicoEntities();
            IQueryable<Indico.DAL.ReturnPatternDetailsView> oQuery =
                (from o in context.ReturnPatternDetailsView
                 orderby o.Pattern
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.Pattern).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> returnpatterndetailsviews = IQueryableToList(oQuery);
            context.Dispose();
            return returnpatterndetailsviews;
        }
        #endregion
        
        #region SearchObjects
        public List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> SearchObjects()
        {
            return SearchObjects(0,0);
        }
        public List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> SearchObjects(int maximumRows)
        {
            return SearchObjects(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> SearchObjects(int maximumRows, int startIndex)
        {
            return SearchObjects(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> SearchObjects(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = new IndicoEntities();
            IQueryable<Indico.DAL.ReturnPatternDetailsView> oQuery =
                (from o in context.ReturnPatternDetailsView
                 where
                    (this.Pattern == null || this.Pattern == o.Pattern) &&
                    (this.Item == null || this.Item == o.Item) &&
                    (this.SubItem == null || this.SubItem == o.SubItem) &&
                    (this.Gender == null || this.Gender == o.Gender) &&
                    (this.AgeGroup == null || this.AgeGroup == o.AgeGroup) &&
                    (this.SizeSet == null || this.SizeSet == o.SizeSet) &&
                    (this.CoreCategory == null || this.CoreCategory == o.CoreCategory) &&
                    (this.PrinterType == null || this.PrinterType == o.PrinterType) &&
                    (this.Number == null || this.Number == o.Number) &&
                    (this.OriginRef == null || this.OriginRef == o.OriginRef) &&
                    (this.NickName == null || this.NickName == o.NickName) &&
                    (this.Keywords == null || this.Keywords == o.Keywords) &&
                    (this.CorePattern == null || this.CorePattern == o.CorePattern) &&
                    (this.FactoryDescription == null || this.FactoryDescription == o.FactoryDescription) &&
                    (this.Consumption == null || this.Consumption == o.Consumption) &&
                    (this.ConvertionFactor == null || this.ConvertionFactor == o.ConvertionFactor) &&
                    (this.SpecialAttributes == null || this.SpecialAttributes == o.SpecialAttributes) &&
                    (this.PatternNotes == null || this.PatternNotes == o.PatternNotes) &&
                    (this.PriceRemarks == null || this.PriceRemarks == o.PriceRemarks) &&
                    (this.IsActive == null || this.IsActive == o.IsActive) &&
                    (this.Creator == null || this.Creator == o.Creator) &&
                    (this.CreatedDate == null || this.CreatedDate == o.CreatedDate) &&
                    (this.Modifier == null || this.Modifier == o.Modifier) &&
                    (this.ModifiedDate == null || this.ModifiedDate == o.ModifiedDate) &&
                    (this.Remarks == null || this.Remarks == o.Remarks) &&
                    (this.IsTemplate == null || this.IsTemplate == o.IsTemplate) &&
                    (this.Parent == null || this.Parent == o.Parent) &&
                    (this.GarmentSpecStatus == null || this.GarmentSpecStatus == o.GarmentSpecStatus) &&
                    (this.IsActiveWS == null || this.IsActiveWS == o.IsActiveWS) &&
                    (this.IsCoreRange == null || this.IsCoreRange == o.IsCoreRange) &&
                    (this.HTSCode == null || this.HTSCode == o.HTSCode) &&
                    (this.SMV == null || this.SMV == o.SMV) &&
                    (this.MarketingDescription == null || this.MarketingDescription == o.MarketingDescription) &&
                    (this.PatternParent == null || this.PatternParent == o.PatternParent) &&
                    (this.Reservation == null || this.Reservation == o.Reservation) &&
                    (this.Price == null || this.Price == o.Price) &&
                    (this.PatternTemplateImage == null || this.PatternTemplateImage == o.PatternTemplateImage) &&
                    (this.Product == null || this.Product == o.Product) &&
                    (this.OrderDetail == null || this.OrderDetail == o.OrderDetail) &&
                    (this.VisualLayout == null || this.VisualLayout == o.VisualLayout) 
                 orderby o.Pattern
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.Pattern).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> returnpatterndetailsviews = IQueryableToList(oQuery);
            context.Dispose();
            return returnpatterndetailsviews;
        }
        
        public int SearchObjectsCount()
        {
            IndicoEntities context = new IndicoEntities();
            return (from o in context.ReturnPatternDetailsView
                 where
                    (this.Pattern == null || this.Pattern == o.Pattern) &&
                    (this.Item == null || this.Item == o.Item) &&
                    (this.SubItem == null || this.SubItem == o.SubItem) &&
                    (this.Gender == null || this.Gender == o.Gender) &&
                    (this.AgeGroup == null || this.AgeGroup == o.AgeGroup) &&
                    (this.SizeSet == null || this.SizeSet == o.SizeSet) &&
                    (this.CoreCategory == null || this.CoreCategory == o.CoreCategory) &&
                    (this.PrinterType == null || this.PrinterType == o.PrinterType) &&
                    (this.Number == null || this.Number == o.Number) &&
                    (this.OriginRef == null || this.OriginRef == o.OriginRef) &&
                    (this.NickName == null || this.NickName == o.NickName) &&
                    (this.Keywords == null || this.Keywords == o.Keywords) &&
                    (this.CorePattern == null || this.CorePattern == o.CorePattern) &&
                    (this.FactoryDescription == null || this.FactoryDescription == o.FactoryDescription) &&
                    (this.Consumption == null || this.Consumption == o.Consumption) &&
                    (this.ConvertionFactor == null || this.ConvertionFactor == o.ConvertionFactor) &&
                    (this.SpecialAttributes == null || this.SpecialAttributes == o.SpecialAttributes) &&
                    (this.PatternNotes == null || this.PatternNotes == o.PatternNotes) &&
                    (this.PriceRemarks == null || this.PriceRemarks == o.PriceRemarks) &&
                    (this.IsActive == null || this.IsActive == o.IsActive) &&
                    (this.Creator == null || this.Creator == o.Creator) &&
                    (this.CreatedDate == null || this.CreatedDate == o.CreatedDate) &&
                    (this.Modifier == null || this.Modifier == o.Modifier) &&
                    (this.ModifiedDate == null || this.ModifiedDate == o.ModifiedDate) &&
                    (this.Remarks == null || this.Remarks == o.Remarks) &&
                    (this.IsTemplate == null || this.IsTemplate == o.IsTemplate) &&
                    (this.Parent == null || this.Parent == o.Parent) &&
                    (this.GarmentSpecStatus == null || this.GarmentSpecStatus == o.GarmentSpecStatus) &&
                    (this.IsActiveWS == null || this.IsActiveWS == o.IsActiveWS) &&
                    (this.IsCoreRange == null || this.IsCoreRange == o.IsCoreRange) &&
                    (this.HTSCode == null || this.HTSCode == o.HTSCode) &&
                    (this.SMV == null || this.SMV == o.SMV) &&
                    (this.MarketingDescription == null || this.MarketingDescription == o.MarketingDescription) &&
                    (this.PatternParent == null || this.PatternParent == o.PatternParent) &&
                    (this.Reservation == null || this.Reservation == o.Reservation) &&
                    (this.Price == null || this.Price == o.Price) &&
                    (this.PatternTemplateImage == null || this.PatternTemplateImage == o.PatternTemplateImage) &&
                    (this.Product == null || this.Product == o.Product) &&
                    (this.OrderDetail == null || this.OrderDetail == o.OrderDetail) &&
                    (this.VisualLayout == null || this.VisualLayout == o.VisualLayout) 
                 orderby o.Pattern
                 select o).Count();
        }
        #endregion
        
        #region SearchObjectsLikeAnd
        public List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> SearchLikeAndObjects()
        {
            return SearchLikeAndObjects(0);
        }
        public List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> SearchLikeAndObjects(int maximumRows)
        {
            return SearchLikeAndObjects(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> SearchLikeAndObjects(int maximumRows, int startIndex)
        {
            return SearchLikeAndObjects(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> SearchLikeAndObjects(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = new IndicoEntities();
            IQueryable<Indico.DAL.ReturnPatternDetailsView> oQuery =
                (from o in context.ReturnPatternDetailsView
                 where
                    (this.Pattern == null || o.Pattern == this.Pattern) &&
                    (this.Item == null || o.Item.Contains(this.Item)) &&
                    (this.SubItem == null || o.SubItem.Contains(this.SubItem)) &&
                    (this.Gender == null || o.Gender.Contains(this.Gender)) &&
                    (this.AgeGroup == null || o.AgeGroup.Contains(this.AgeGroup)) &&
                    (this.SizeSet == null || o.SizeSet.Contains(this.SizeSet)) &&
                    (this.CoreCategory == null || o.CoreCategory.Contains(this.CoreCategory)) &&
                    (this.PrinterType == null || o.PrinterType.Contains(this.PrinterType)) &&
                    (this.Number == null || o.Number.Contains(this.Number)) &&
                    (this.OriginRef == null || o.OriginRef.Contains(this.OriginRef)) &&
                    (this.NickName == null || o.NickName.Contains(this.NickName)) &&
                    (this.Keywords == null || o.Keywords.Contains(this.Keywords)) &&
                    (this.CorePattern == null || o.CorePattern.Contains(this.CorePattern)) &&
                    (this.FactoryDescription == null || o.FactoryDescription.Contains(this.FactoryDescription)) &&
                    (this.Consumption == null || o.Consumption.Contains(this.Consumption)) &&
                    (this.ConvertionFactor == null || o.ConvertionFactor == this.ConvertionFactor) &&
                    (this.SpecialAttributes == null || o.SpecialAttributes.Contains(this.SpecialAttributes)) &&
                    (this.PatternNotes == null || o.PatternNotes.Contains(this.PatternNotes)) &&
                    (this.PriceRemarks == null || o.PriceRemarks.Contains(this.PriceRemarks)) &&
                    (this.IsActive == null || o.IsActive == this.IsActive) &&
                    (this.Creator == null || o.Creator == this.Creator) &&
                    (this.CreatedDate == null || o.CreatedDate == this.CreatedDate) &&
                    (this.Modifier == null || o.Modifier == this.Modifier) &&
                    (this.ModifiedDate == null || o.ModifiedDate == this.ModifiedDate) &&
                    (this.Remarks == null || o.Remarks.Contains(this.Remarks)) &&
                    (this.IsTemplate == null || o.IsTemplate == this.IsTemplate) &&
                    (this.Parent == null || o.Parent == this.Parent) &&
                    (this.GarmentSpecStatus == null || o.GarmentSpecStatus.Contains(this.GarmentSpecStatus)) &&
                    (this.IsActiveWS == null || o.IsActiveWS == this.IsActiveWS) &&
                    (this.IsCoreRange == null || o.IsCoreRange == this.IsCoreRange) &&
                    (this.HTSCode == null || o.HTSCode.Contains(this.HTSCode)) &&
                    (this.SMV == null || o.SMV == this.SMV) &&
                    (this.MarketingDescription == null || o.MarketingDescription.Contains(this.MarketingDescription)) &&
                    (this.PatternParent == null || o.PatternParent == this.PatternParent) &&
                    (this.Reservation == null || o.Reservation == this.Reservation) &&
                    (this.Price == null || o.Price == this.Price) &&
                    (this.PatternTemplateImage == null || o.PatternTemplateImage == this.PatternTemplateImage) &&
                    (this.Product == null || o.Product == this.Product) &&
                    (this.OrderDetail == null || o.OrderDetail == this.OrderDetail) &&
                    (this.VisualLayout == null || o.VisualLayout == this.VisualLayout) 
                 orderby o.Pattern
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.Pattern).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> returnpatterndetailsviews = IQueryableToList(oQuery);
            context.Dispose();
            return returnpatterndetailsviews;
        }
        
        public int SearchLikeAndObjectsCount()
        {
            IndicoEntities context = new IndicoEntities();
            return (from o in context.ReturnPatternDetailsView
                 where
                    (this.Pattern == null || o.Pattern == this.Pattern) &&
                    (this.Item == null || o.Item.Contains(this.Item)) &&
                    (this.SubItem == null || o.SubItem.Contains(this.SubItem)) &&
                    (this.Gender == null || o.Gender.Contains(this.Gender)) &&
                    (this.AgeGroup == null || o.AgeGroup.Contains(this.AgeGroup)) &&
                    (this.SizeSet == null || o.SizeSet.Contains(this.SizeSet)) &&
                    (this.CoreCategory == null || o.CoreCategory.Contains(this.CoreCategory)) &&
                    (this.PrinterType == null || o.PrinterType.Contains(this.PrinterType)) &&
                    (this.Number == null || o.Number.Contains(this.Number)) &&
                    (this.OriginRef == null || o.OriginRef.Contains(this.OriginRef)) &&
                    (this.NickName == null || o.NickName.Contains(this.NickName)) &&
                    (this.Keywords == null || o.Keywords.Contains(this.Keywords)) &&
                    (this.CorePattern == null || o.CorePattern.Contains(this.CorePattern)) &&
                    (this.FactoryDescription == null || o.FactoryDescription.Contains(this.FactoryDescription)) &&
                    (this.Consumption == null || o.Consumption.Contains(this.Consumption)) &&
                    (this.ConvertionFactor == null || o.ConvertionFactor == this.ConvertionFactor) &&
                    (this.SpecialAttributes == null || o.SpecialAttributes.Contains(this.SpecialAttributes)) &&
                    (this.PatternNotes == null || o.PatternNotes.Contains(this.PatternNotes)) &&
                    (this.PriceRemarks == null || o.PriceRemarks.Contains(this.PriceRemarks)) &&
                    (this.IsActive == null || o.IsActive == this.IsActive) &&
                    (this.Creator == null || o.Creator == this.Creator) &&
                    (this.CreatedDate == null || o.CreatedDate == this.CreatedDate) &&
                    (this.Modifier == null || o.Modifier == this.Modifier) &&
                    (this.ModifiedDate == null || o.ModifiedDate == this.ModifiedDate) &&
                    (this.Remarks == null || o.Remarks.Contains(this.Remarks)) &&
                    (this.IsTemplate == null || o.IsTemplate == this.IsTemplate) &&
                    (this.Parent == null || o.Parent == this.Parent) &&
                    (this.GarmentSpecStatus == null || o.GarmentSpecStatus.Contains(this.GarmentSpecStatus)) &&
                    (this.IsActiveWS == null || o.IsActiveWS == this.IsActiveWS) &&
                    (this.IsCoreRange == null || o.IsCoreRange == this.IsCoreRange) &&
                    (this.HTSCode == null || o.HTSCode.Contains(this.HTSCode)) &&
                    (this.SMV == null || o.SMV == this.SMV) &&
                    (this.MarketingDescription == null || o.MarketingDescription.Contains(this.MarketingDescription)) &&
                    (this.PatternParent == null || o.PatternParent == this.PatternParent) &&
                    (this.Reservation == null || o.Reservation == this.Reservation) &&
                    (this.Price == null || o.Price == this.Price) &&
                    (this.PatternTemplateImage == null || o.PatternTemplateImage == this.PatternTemplateImage) &&
                    (this.Product == null || o.Product == this.Product) &&
                    (this.OrderDetail == null || o.OrderDetail == this.OrderDetail) &&
                    (this.VisualLayout == null || o.VisualLayout == this.VisualLayout) 
                 orderby o.Pattern
                 select o).Count();
            
        }
        
        #endregion
        
        #region SearchObjectsLikeOr
        public List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> SearchLikeOrObjects()
        {
            return SearchLikeOrObjects(0);
        }
        public List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> SearchLikeOrObjects(int maximumRows)
        {
            return SearchLikeOrObjects(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> SearchLikeOrObjects(int maximumRows, int startIndex)
        {
            return SearchLikeOrObjects(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> SearchLikeOrObjects(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = new IndicoEntities();
            IQueryable<Indico.DAL.ReturnPatternDetailsView> oQuery =
                (from o in context.ReturnPatternDetailsView
                 where
                    (this.Pattern == null || this.Pattern == o.Pattern) && 
                    (this.ConvertionFactor == null || this.ConvertionFactor == o.ConvertionFactor) && 
                    (this.IsActive == null || this.IsActive == o.IsActive) && 
                    (this.Creator == null || this.Creator == o.Creator) && 
                    (this.CreatedDate == null || this.CreatedDate == o.CreatedDate) && 
                    (this.Modifier == null || this.Modifier == o.Modifier) && 
                    (this.ModifiedDate == null || this.ModifiedDate == o.ModifiedDate) && 
                    (this.IsTemplate == null || this.IsTemplate == o.IsTemplate) && 
                    (this.Parent == null || this.Parent == o.Parent) && 
                    (this.IsActiveWS == null || this.IsActiveWS == o.IsActiveWS) && 
                    (this.IsCoreRange == null || this.IsCoreRange == o.IsCoreRange) && 
                    (this.SMV == null || this.SMV == o.SMV) && 
                    (this.PatternParent == null || this.PatternParent == o.PatternParent) && 
                    (this.Reservation == null || this.Reservation == o.Reservation) && 
                    (this.Price == null || this.Price == o.Price) && 
                    (this.PatternTemplateImage == null || this.PatternTemplateImage == o.PatternTemplateImage) && 
                    (this.Product == null || this.Product == o.Product) && 
                    (this.OrderDetail == null || this.OrderDetail == o.OrderDetail) && 
                    (this.VisualLayout == null || this.VisualLayout == o.VisualLayout) && 
                    ((o.Item.Contains(this.Item)) ||
                    (o.SubItem.Contains(this.SubItem)) ||
                    (o.Gender.Contains(this.Gender)) ||
                    (o.AgeGroup.Contains(this.AgeGroup)) ||
                    (o.SizeSet.Contains(this.SizeSet)) ||
                    (o.CoreCategory.Contains(this.CoreCategory)) ||
                    (o.PrinterType.Contains(this.PrinterType)) ||
                    (o.Number.Contains(this.Number)) ||
                    (o.OriginRef.Contains(this.OriginRef)) ||
                    (o.NickName.Contains(this.NickName)) ||
                    (o.Keywords.Contains(this.Keywords)) ||
                    (o.CorePattern.Contains(this.CorePattern)) ||
                    (o.FactoryDescription.Contains(this.FactoryDescription)) ||
                    (o.Consumption.Contains(this.Consumption)) ||
                    (o.SpecialAttributes.Contains(this.SpecialAttributes)) ||
                    (o.PatternNotes.Contains(this.PatternNotes)) ||
                    (o.PriceRemarks.Contains(this.PriceRemarks)) ||
                    (o.Remarks.Contains(this.Remarks)) ||
                    (o.GarmentSpecStatus.Contains(this.GarmentSpecStatus)) ||
                    (o.HTSCode.Contains(this.HTSCode)) ||
                    (o.MarketingDescription.Contains(this.MarketingDescription)) ||
                    (this.Item == null && this.SubItem == null && this.Gender == null && this.AgeGroup == null && this.SizeSet == null && this.CoreCategory == null && this.PrinterType == null && this.Number == null && this.OriginRef == null && this.NickName == null && this.Keywords == null && this.CorePattern == null && this.FactoryDescription == null && this.Consumption == null && this.SpecialAttributes == null && this.PatternNotes == null && this.PriceRemarks == null && this.Remarks == null && this.GarmentSpecStatus == null && this.HTSCode == null && this.MarketingDescription == null ))
                 orderby o.Pattern
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.Pattern).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.ReturnPatternDetailsViewBO> returnpatterndetailsviews = IQueryableToList(oQuery);
            context.Dispose();
            return returnpatterndetailsviews;
        }
        
        public int SearchLikeOrObjectsCount()
        {
            IndicoEntities context = new IndicoEntities();
            return (from o in context.ReturnPatternDetailsView
                 where
                    (this.Pattern == null || this.Pattern == o.Pattern) && 
                    (this.ConvertionFactor == null || this.ConvertionFactor == o.ConvertionFactor) && 
                    (this.IsActive == null || this.IsActive == o.IsActive) && 
                    (this.Creator == null || this.Creator == o.Creator) && 
                    (this.CreatedDate == null || this.CreatedDate == o.CreatedDate) && 
                    (this.Modifier == null || this.Modifier == o.Modifier) && 
                    (this.ModifiedDate == null || this.ModifiedDate == o.ModifiedDate) && 
                    (this.IsTemplate == null || this.IsTemplate == o.IsTemplate) && 
                    (this.Parent == null || this.Parent == o.Parent) && 
                    (this.IsActiveWS == null || this.IsActiveWS == o.IsActiveWS) && 
                    (this.IsCoreRange == null || this.IsCoreRange == o.IsCoreRange) && 
                    (this.SMV == null || this.SMV == o.SMV) && 
                    (this.PatternParent == null || this.PatternParent == o.PatternParent) && 
                    (this.Reservation == null || this.Reservation == o.Reservation) && 
                    (this.Price == null || this.Price == o.Price) && 
                    (this.PatternTemplateImage == null || this.PatternTemplateImage == o.PatternTemplateImage) && 
                    (this.Product == null || this.Product == o.Product) && 
                    (this.OrderDetail == null || this.OrderDetail == o.OrderDetail) && 
                    (this.VisualLayout == null || this.VisualLayout == o.VisualLayout) && 
                    ((o.Item.Contains(this.Item)) ||
                    (o.SubItem.Contains(this.SubItem)) ||
                    (o.Gender.Contains(this.Gender)) ||
                    (o.AgeGroup.Contains(this.AgeGroup)) ||
                    (o.SizeSet.Contains(this.SizeSet)) ||
                    (o.CoreCategory.Contains(this.CoreCategory)) ||
                    (o.PrinterType.Contains(this.PrinterType)) ||
                    (o.Number.Contains(this.Number)) ||
                    (o.OriginRef.Contains(this.OriginRef)) ||
                    (o.NickName.Contains(this.NickName)) ||
                    (o.Keywords.Contains(this.Keywords)) ||
                    (o.CorePattern.Contains(this.CorePattern)) ||
                    (o.FactoryDescription.Contains(this.FactoryDescription)) ||
                    (o.Consumption.Contains(this.Consumption)) ||
                    (o.SpecialAttributes.Contains(this.SpecialAttributes)) ||
                    (o.PatternNotes.Contains(this.PatternNotes)) ||
                    (o.PriceRemarks.Contains(this.PriceRemarks)) ||
                    (o.Remarks.Contains(this.Remarks)) ||
                    (o.GarmentSpecStatus.Contains(this.GarmentSpecStatus)) ||
                    (o.HTSCode.Contains(this.HTSCode)) ||
                    (o.MarketingDescription.Contains(this.MarketingDescription)) ||
                    (this.Item == null && this.SubItem == null && this.Gender == null && this.AgeGroup == null && this.SizeSet == null && this.CoreCategory == null && this.PrinterType == null && this.Number == null && this.OriginRef == null && this.NickName == null && this.Keywords == null && this.CorePattern == null && this.FactoryDescription == null && this.Consumption == null && this.SpecialAttributes == null && this.PatternNotes == null && this.PriceRemarks == null && this.Remarks == null && this.GarmentSpecStatus == null && this.HTSCode == null && this.MarketingDescription == null ))
                 orderby o.Pattern
                 select o).Count();
            
        }
        #endregion
        
        #region Serialization methods
        /// <summary>
        /// Serializes the Indico.BusinessObjects.ReturnPatternDetailsViewBO to an XML representation
        /// </summary>
        /// <returns>a XML string serialized representation</returns>
        public string SerializeObject()
        {
            string strReturn = "";

            System.IO.MemoryStream objStream = new System.IO.MemoryStream();

            System.Xml.Serialization.XmlSerializer x = new System.Xml.Serialization.XmlSerializer(this.GetType());

            x.Serialize(objStream, this);

            System.Text.Encoding encoding = System.Text.Encoding.UTF8;
            // Read string from binary file with UTF8 encoding
            strReturn = encoding.GetString(objStream.GetBuffer());

            objStream.Close();
            return strReturn;

        }

        /// <summary>
        /// Deserializes Indico.BusinessObjects.ReturnPatternDetailsViewBO object from an XML representation
        /// </summary>
        /// <param name="strXML">a XML string serialized representation</param>
        public Indico.BusinessObjects.ReturnPatternDetailsViewBO DeserializeObject(string strXML)
        {
            Indico.BusinessObjects.ReturnPatternDetailsViewBO objTemp = null;
            System.Xml.XmlDocument objXML = new System.Xml.XmlDocument();

            objXML.LoadXml(strXML);
            System.Text.Encoding encoding = System.Text.Encoding.UTF8;

            System.IO.MemoryStream objStream = new System.IO.MemoryStream();
            byte[] b = encoding.GetBytes(objXML.OuterXml);

            objStream.Write(b, 0, (int)b.Length);
            objStream.Position = 0;
            System.Xml.Serialization.XmlSerializer x = new System.Xml.Serialization.XmlSerializer(this.GetType());

            objTemp = (Indico.BusinessObjects.ReturnPatternDetailsViewBO)x.Deserialize(objStream);
            objStream.Close();
            return objTemp;
        }

        /// <summary>
        /// Returns a simple XML representation of Indico.BusinessObjects.ReturnPatternDetailsViewBO object in an XmlElement
        /// </summary>
        /// <returns>An XML snippet representing the object</returns>
        public string ToXmlString()
        {
            // MW TODO - implement this better.
            return SerializeObject();
        }
        #endregion
        
        #region IComparable Members

        public int CompareTo(object obj)
        {
            if (!(obj is Indico.BusinessObjects.ReturnPatternDetailsViewBO))
                return 1;
            Indico.BusinessObjects.ReturnPatternDetailsViewBOComparer c = new Indico.BusinessObjects.ReturnPatternDetailsViewBOComparer();
            return c.Compare(this, obj as Indico.BusinessObjects.ReturnPatternDetailsViewBO);
        }

        #endregion
        #endregion
    }
    
    #region ReturnPatternDetailsViewBOComparer
    public class ReturnPatternDetailsViewBOComparer : IComparer<Indico.BusinessObjects.ReturnPatternDetailsViewBO>
    {
        private string propertyToCompareName;
        public ReturnPatternDetailsViewBOComparer(string propertyToCompare)
        {
            PropertyInfo p = typeof(Indico.BusinessObjects.ReturnPatternDetailsViewBO).GetProperty(propertyToCompare);
            if (p == null)
                throw new ArgumentException("is not a public property of Indico.BusinessObjects.ReturnPatternDetailsViewBO", "propertyToCompare");
            this.propertyToCompareName = propertyToCompare;
        }
        
        public ReturnPatternDetailsViewBOComparer()
        {
        
        }

        #region IComparer<Indico.BusinessObjects.ReturnPatternDetailsViewBO> Members
        public int Compare(Indico.BusinessObjects.ReturnPatternDetailsViewBO x, Indico.BusinessObjects.ReturnPatternDetailsViewBO y)
        {
            if (propertyToCompareName != null)
            {
                PropertyInfo p = typeof(Indico.BusinessObjects.ReturnPatternDetailsViewBO).GetProperty(propertyToCompareName);
                return compare(p, x, y);
            }
            else
            {
                PropertyInfo[] arrP = typeof(Indico.BusinessObjects.ReturnPatternDetailsViewBO).GetProperties();
                foreach (PropertyInfo p in arrP)
                {
                    int v = compare(p, x, y);
                    if (v != 0)
                        return v;
                }
                return 0;
            }
        }

        private int compare(PropertyInfo p, Indico.BusinessObjects.ReturnPatternDetailsViewBO x, Indico.BusinessObjects.ReturnPatternDetailsViewBO y)
        {
            object xVal = p.GetValue(x, null);
            object yVal = p.GetValue(y, null);

            if (xVal == null)
            {
                if (yVal == null)
                    return 0;
                else
                    return -1; // x is null, y is not, y is greater
            }
            else
            {
                if (y == null)
                    return 1; // x non null, y is null, x is greater
                else if (xVal is string)
                {
                    return StringComparer.OrdinalIgnoreCase.Compare(xVal, yVal);
                }
                else if (xVal is IComparable)
                {
                    return ((IComparable)xVal).CompareTo((IComparable)yVal);
                }
                else
                    throw new ArgumentException
                        ("is not string or valuetype that implements IComparable", "propertyToCompare");

            }
        }

        #endregion
    }
    #endregion
}
