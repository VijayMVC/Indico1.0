// This file is generated by CodeSmith. Do not edit. All edits to this file will be lost. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Dynamic;
using System.Linq.Expressions;
using System.Reflection;
using System.Xml.Serialization;

//using Indico.BusinessObjects.Util;
//using Indico.BusinessObjects;
using Indico.DAL;


namespace Indico.BusinessObjects
{
    /// <summary>
    /// ReturnInvoiceOrderDetailViewBO provides the business logic for maintaining Indico.DAL.ReturnInvoiceOrderDetailView records in the data store.
    /// </summary>
    /// <remarks>
    /// ReturnInvoiceOrderDetailViewBO provides the business logic for maintaining Indico.DAL.ReturnInvoiceOrderDetailView records in the data store. 
    /// By default it provides basic Search methods for retrieving Indico.DAL.ReturnInvoiceOrderDetailView
    /// records using the ReturnInvoiceOrderDetailView DAL class. Other methods implement atomic chunks of Business Logic according to
    /// the business rules.
    /// </remarks>
    public partial class ReturnInvoiceOrderDetailViewBO : BusinessObject, IComparable
    {
        #region fields
        private int? _orderDetail;
        private string _orderType;
        private string _visualLayout;
        private int? _visualLayoutID;
        private int? _patternID;
        private string _pattern;
        private int? _fabricID;
        private string _fabric;
        private int? _order;
        private int? _quantity;
        private string _purONo;
        private string _distributor;
        private string _coordinator;
        private string _client;
        private decimal? _factoryRate;
        private int? _qty;
        private string _gender;
        private string _ageGroup;
        private decimal? _indimanRate;
        private int? _invoiceOrder;
        private string _shipmentAddress;
        private string _shipmentMode;
        private string _destinationPort;
        private string _shipmentTerm;
        private int? _costSheet;
        #endregion
        
        #region Properties
        /// <summary></summary>
        public int? OrderDetail
        {   get {return _orderDetail;}
            set 
            {
                _orderDetail = value;
            }
        }
        /// <summary></summary>
        public string OrderType
        {   get {return _orderType;}
            set 
            {
                _orderType = value;
            }
        }
        /// <summary></summary>
        public string VisualLayout
        {   get {return _visualLayout;}
            set 
            {
                _visualLayout = value;
            }
        }
        /// <summary></summary>
        public int? VisualLayoutID
        {   get {return _visualLayoutID;}
            set 
            {
                _visualLayoutID = value;
            }
        }
        /// <summary></summary>
        public int? PatternID
        {   get {return _patternID;}
            set 
            {
                _patternID = value;
            }
        }
        /// <summary></summary>
        public string Pattern
        {   get {return _pattern;}
            set 
            {
                _pattern = value;
            }
        }
        /// <summary></summary>
        public int? FabricID
        {   get {return _fabricID;}
            set 
            {
                _fabricID = value;
            }
        }
        /// <summary></summary>
        public string Fabric
        {   get {return _fabric;}
            set 
            {
                _fabric = value;
            }
        }
        /// <summary></summary>
        public int? Order
        {   get {return _order;}
            set 
            {
                _order = value;
            }
        }
        /// <summary></summary>
        public int? Quantity
        {   get {return _quantity;}
            set 
            {
                _quantity = value;
            }
        }
        /// <summary></summary>
        public string PurONo
        {   get {return _purONo;}
            set 
            {
                _purONo = value;
            }
        }
        /// <summary></summary>
        public string Distributor
        {   get {return _distributor;}
            set 
            {
                _distributor = value;
            }
        }
        /// <summary></summary>
        public string Coordinator
        {   get {return _coordinator;}
            set 
            {
                _coordinator = value;
            }
        }
        /// <summary></summary>
        public string Client
        {   get {return _client;}
            set 
            {
                _client = value;
            }
        }
        /// <summary></summary>
        public decimal? FactoryRate
        {   get {return _factoryRate;}
            set 
            {
                _factoryRate = value;
            }
        }
        /// <summary></summary>
        public int? Qty
        {   get {return _qty;}
            set 
            {
                _qty = value;
            }
        }
        /// <summary></summary>
        public string Gender
        {   get {return _gender;}
            set 
            {
                _gender = value;
            }
        }
        /// <summary></summary>
        public string AgeGroup
        {   get {return _ageGroup;}
            set 
            {
                _ageGroup = value;
            }
        }
        /// <summary></summary>
        public decimal? IndimanRate
        {   get {return _indimanRate;}
            set 
            {
                _indimanRate = value;
            }
        }
        /// <summary></summary>
        public int? InvoiceOrder
        {   get {return _invoiceOrder;}
            set 
            {
                _invoiceOrder = value;
            }
        }
        /// <summary></summary>
        public string ShipmentAddress
        {   get {return _shipmentAddress;}
            set 
            {
                _shipmentAddress = value;
            }
        }
        /// <summary></summary>
        public string ShipmentMode
        {   get {return _shipmentMode;}
            set 
            {
                _shipmentMode = value;
            }
        }
        /// <summary></summary>
        public string DestinationPort
        {   get {return _destinationPort;}
            set 
            {
                _destinationPort = value;
            }
        }
        /// <summary></summary>
        public string ShipmentTerm
        {   get {return _shipmentTerm;}
            set 
            {
                _shipmentTerm = value;
            }
        }
        /// <summary></summary>
        public int? CostSheet
        {   get {return _costSheet;}
            set 
            {
                _costSheet = value;
            }
        }
        #endregion
        
        #region Internal Constructors
        /// <summary>
        /// Creates an instance of the ReturnInvoiceOrderDetailViewBO class using the supplied Indico.DAL.ReturnInvoiceOrderDetailView. 
        /// </summary>
        /// <param name="obj">a Indico.DAL.ReturnInvoiceOrderDetailView whose properties will be used to initialise the ReturnInvoiceOrderDetailViewBO</param>
        internal ReturnInvoiceOrderDetailViewBO(Indico.DAL.ReturnInvoiceOrderDetailView obj)
        {
            // set the properties from the Indico.DAL.ReturnInvoiceOrderDetailView 
            this.OrderDetail = obj.OrderDetail;
            this.OrderType = obj.OrderType;
            this.VisualLayout = obj.VisualLayout;
            this.VisualLayoutID = obj.VisualLayoutID;
            this.PatternID = obj.PatternID;
            this.Pattern = obj.Pattern;
            this.FabricID = obj.FabricID;
            this.Fabric = obj.Fabric;
            this.Order = obj.Order;
            this.Quantity = obj.Quantity;
            this.PurONo = obj.PurONo;
            this.Distributor = obj.Distributor;
            this.Coordinator = obj.Coordinator;
            this.Client = obj.Client;
            this.FactoryRate = obj.FactoryRate;
            this.Qty = obj.Qty;
            this.Gender = obj.Gender;
            this.AgeGroup = obj.AgeGroup;
            this.IndimanRate = obj.IndimanRate;
            this.InvoiceOrder = obj.InvoiceOrder;
            this.ShipmentAddress = obj.ShipmentAddress;
            this.ShipmentMode = obj.ShipmentMode;
            this.DestinationPort = obj.DestinationPort;
            this.ShipmentTerm = obj.ShipmentTerm;
            this.CostSheet = obj.CostSheet;
        }
        #endregion
        
        #region Internal utility methods
        internal void SetDAL(Indico.DAL.ReturnInvoiceOrderDetailView obj, IndicoEntities context)
        {
            // set the Indico.DAL.ReturnInvoiceOrderDetailView properties
            obj.OrderDetail = Convert.ToInt32(OrderDetail);
            obj.OrderType = OrderType;
            obj.VisualLayout = VisualLayout;
            obj.VisualLayoutID = Convert.ToInt32(VisualLayoutID);
            obj.PatternID = Convert.ToInt32(PatternID);
            obj.Pattern = Pattern;
            obj.FabricID = Convert.ToInt32(FabricID);
            obj.Fabric = Fabric;
            obj.Order = Convert.ToInt32(Order);
            obj.Quantity = Convert.ToInt32(Quantity);
            obj.PurONo = PurONo;
            obj.Distributor = Distributor;
            obj.Coordinator = Coordinator;
            obj.Client = Client;
            obj.FactoryRate = Convert.ToDecimal(FactoryRate);
            obj.Qty = Convert.ToInt32(Qty);
            obj.Gender = Gender;
            obj.AgeGroup = AgeGroup;
            obj.IndimanRate = Convert.ToDecimal(IndimanRate);
            obj.InvoiceOrder = Convert.ToInt32(InvoiceOrder);
            obj.ShipmentAddress = ShipmentAddress;
            obj.ShipmentMode = ShipmentMode;
            obj.DestinationPort = DestinationPort;
            obj.ShipmentTerm = ShipmentTerm;
            obj.CostSheet = Convert.ToInt32(CostSheet);
        }
        
        internal void SetBO(Indico.DAL.ReturnInvoiceOrderDetailView obj)
        {
            // set the Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO properties    
            this.OrderDetail = obj.OrderDetail;
            this.OrderType = obj.OrderType;
            this.VisualLayout = obj.VisualLayout;
            this.VisualLayoutID = obj.VisualLayoutID;
            this.PatternID = obj.PatternID;
            this.Pattern = obj.Pattern;
            this.FabricID = obj.FabricID;
            this.Fabric = obj.Fabric;
            this.Order = obj.Order;
            this.Quantity = obj.Quantity;
            this.PurONo = obj.PurONo;
            this.Distributor = obj.Distributor;
            this.Coordinator = obj.Coordinator;
            this.Client = obj.Client;
            this.FactoryRate = obj.FactoryRate;
            this.Qty = obj.Qty;
            this.Gender = obj.Gender;
            this.AgeGroup = obj.AgeGroup;
            this.IndimanRate = obj.IndimanRate;
            this.InvoiceOrder = obj.InvoiceOrder;
            this.ShipmentAddress = obj.ShipmentAddress;
            this.ShipmentMode = obj.ShipmentMode;
            this.DestinationPort = obj.DestinationPort;
            this.ShipmentTerm = obj.ShipmentTerm;
            this.CostSheet = obj.CostSheet;
        }
        
        internal void SetBO(Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO obj)
        {
            // set this Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO properties
            this.OrderDetail = obj.OrderDetail;
            this.OrderType = obj.OrderType;
            this.VisualLayout = obj.VisualLayout;
            this.VisualLayoutID = obj.VisualLayoutID;
            this.PatternID = obj.PatternID;
            this.Pattern = obj.Pattern;
            this.FabricID = obj.FabricID;
            this.Fabric = obj.Fabric;
            this.Order = obj.Order;
            this.Quantity = obj.Quantity;
            this.PurONo = obj.PurONo;
            this.Distributor = obj.Distributor;
            this.Coordinator = obj.Coordinator;
            this.Client = obj.Client;
            this.FactoryRate = obj.FactoryRate;
            this.Qty = obj.Qty;
            this.Gender = obj.Gender;
            this.AgeGroup = obj.AgeGroup;
            this.IndimanRate = obj.IndimanRate;
            this.InvoiceOrder = obj.InvoiceOrder;
            this.ShipmentAddress = obj.ShipmentAddress;
            this.ShipmentMode = obj.ShipmentMode;
            this.DestinationPort = obj.DestinationPort;
            this.ShipmentTerm = obj.ShipmentTerm;
            this.CostSheet = obj.CostSheet;
        }
        
        private static List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> IQueryableToList(IQueryable<Indico.DAL.ReturnInvoiceOrderDetailView> oQuery)
        {
            List<Indico.DAL.ReturnInvoiceOrderDetailView> oList = oQuery.ToList();
            List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> rList = new List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO>(oList.Count);
            foreach (Indico.DAL.ReturnInvoiceOrderDetailView o in oList)
            {
                Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO obj = new Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO(o);
                rList.Add(obj);
            }
            return rList;
        }
        #endregion
        
        #region BusinessObject methods
        
        #region GetAllObject
        public static List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> GetAllObject()
        {
            return GetAllObject(0, 0);
        }
        public static List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> GetAllObject(int maximumRows)
        {
            return GetAllObject(maximumRows, 0);
        }
        public static List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> GetAllObject(int maximumRows, int startIndex)
        {
            return GetAllObject(maximumRows, startIndex, null, false);
        }
        public static List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> GetAllObject(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = new IndicoEntities();
            IQueryable<Indico.DAL.ReturnInvoiceOrderDetailView> oQuery =
                (from o in context.ReturnInvoiceOrderDetailView
                 orderby o.OrderDetail
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.OrderDetail).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> returninvoiceorderdetailviews = IQueryableToList(oQuery);
            context.Dispose();
            return returninvoiceorderdetailviews;
        }
        #endregion
        
        #region SearchObjects
        public List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> SearchObjects()
        {
            return SearchObjects(0,0);
        }
        public List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> SearchObjects(int maximumRows)
        {
            return SearchObjects(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> SearchObjects(int maximumRows, int startIndex)
        {
            return SearchObjects(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> SearchObjects(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = new IndicoEntities();
            IQueryable<Indico.DAL.ReturnInvoiceOrderDetailView> oQuery =
                (from o in context.ReturnInvoiceOrderDetailView
                 where
                    (this.OrderDetail == null || this.OrderDetail == o.OrderDetail) &&
                    (this.OrderType == null || this.OrderType == o.OrderType) &&
                    (this.VisualLayout == null || this.VisualLayout == o.VisualLayout) &&
                    (this.VisualLayoutID == null || this.VisualLayoutID == o.VisualLayoutID) &&
                    (this.PatternID == null || this.PatternID == o.PatternID) &&
                    (this.Pattern == null || this.Pattern == o.Pattern) &&
                    (this.FabricID == null || this.FabricID == o.FabricID) &&
                    (this.Fabric == null || this.Fabric == o.Fabric) &&
                    (this.Order == null || this.Order == o.Order) &&
                    (this.Quantity == null || this.Quantity == o.Quantity) &&
                    (this.PurONo == null || this.PurONo == o.PurONo) &&
                    (this.Distributor == null || this.Distributor == o.Distributor) &&
                    (this.Coordinator == null || this.Coordinator == o.Coordinator) &&
                    (this.Client == null || this.Client == o.Client) &&
                    (this.FactoryRate == null || this.FactoryRate == o.FactoryRate) &&
                    (this.Qty == null || this.Qty == o.Qty) &&
                    (this.Gender == null || this.Gender == o.Gender) &&
                    (this.AgeGroup == null || this.AgeGroup == o.AgeGroup) &&
                    (this.IndimanRate == null || this.IndimanRate == o.IndimanRate) &&
                    (this.InvoiceOrder == null || this.InvoiceOrder == o.InvoiceOrder) &&
                    (this.ShipmentAddress == null || this.ShipmentAddress == o.ShipmentAddress) &&
                    (this.ShipmentMode == null || this.ShipmentMode == o.ShipmentMode) &&
                    (this.DestinationPort == null || this.DestinationPort == o.DestinationPort) &&
                    (this.ShipmentTerm == null || this.ShipmentTerm == o.ShipmentTerm) &&
                    (this.CostSheet == null || this.CostSheet == o.CostSheet) 
                 orderby o.OrderDetail
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.OrderDetail).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> returninvoiceorderdetailviews = IQueryableToList(oQuery);
            context.Dispose();
            return returninvoiceorderdetailviews;
        }
        
        public int SearchObjectsCount()
        {
            IndicoEntities context = new IndicoEntities();
            return (from o in context.ReturnInvoiceOrderDetailView
                 where
                    (this.OrderDetail == null || this.OrderDetail == o.OrderDetail) &&
                    (this.OrderType == null || this.OrderType == o.OrderType) &&
                    (this.VisualLayout == null || this.VisualLayout == o.VisualLayout) &&
                    (this.VisualLayoutID == null || this.VisualLayoutID == o.VisualLayoutID) &&
                    (this.PatternID == null || this.PatternID == o.PatternID) &&
                    (this.Pattern == null || this.Pattern == o.Pattern) &&
                    (this.FabricID == null || this.FabricID == o.FabricID) &&
                    (this.Fabric == null || this.Fabric == o.Fabric) &&
                    (this.Order == null || this.Order == o.Order) &&
                    (this.Quantity == null || this.Quantity == o.Quantity) &&
                    (this.PurONo == null || this.PurONo == o.PurONo) &&
                    (this.Distributor == null || this.Distributor == o.Distributor) &&
                    (this.Coordinator == null || this.Coordinator == o.Coordinator) &&
                    (this.Client == null || this.Client == o.Client) &&
                    (this.FactoryRate == null || this.FactoryRate == o.FactoryRate) &&
                    (this.Qty == null || this.Qty == o.Qty) &&
                    (this.Gender == null || this.Gender == o.Gender) &&
                    (this.AgeGroup == null || this.AgeGroup == o.AgeGroup) &&
                    (this.IndimanRate == null || this.IndimanRate == o.IndimanRate) &&
                    (this.InvoiceOrder == null || this.InvoiceOrder == o.InvoiceOrder) &&
                    (this.ShipmentAddress == null || this.ShipmentAddress == o.ShipmentAddress) &&
                    (this.ShipmentMode == null || this.ShipmentMode == o.ShipmentMode) &&
                    (this.DestinationPort == null || this.DestinationPort == o.DestinationPort) &&
                    (this.ShipmentTerm == null || this.ShipmentTerm == o.ShipmentTerm) &&
                    (this.CostSheet == null || this.CostSheet == o.CostSheet) 
                 orderby o.OrderDetail
                 select o).Count();
        }
        #endregion
        
        #region SearchObjectsLikeAnd
        public List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> SearchLikeAndObjects()
        {
            return SearchLikeAndObjects(0);
        }
        public List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> SearchLikeAndObjects(int maximumRows)
        {
            return SearchLikeAndObjects(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> SearchLikeAndObjects(int maximumRows, int startIndex)
        {
            return SearchLikeAndObjects(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> SearchLikeAndObjects(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = new IndicoEntities();
            IQueryable<Indico.DAL.ReturnInvoiceOrderDetailView> oQuery =
                (from o in context.ReturnInvoiceOrderDetailView
                 where
                    (this.OrderDetail == null || o.OrderDetail == this.OrderDetail) &&
                    (this.OrderType == null || o.OrderType.Contains(this.OrderType)) &&
                    (this.VisualLayout == null || o.VisualLayout.Contains(this.VisualLayout)) &&
                    (this.VisualLayoutID == null || o.VisualLayoutID == this.VisualLayoutID) &&
                    (this.PatternID == null || o.PatternID == this.PatternID) &&
                    (this.Pattern == null || o.Pattern.Contains(this.Pattern)) &&
                    (this.FabricID == null || o.FabricID == this.FabricID) &&
                    (this.Fabric == null || o.Fabric.Contains(this.Fabric)) &&
                    (this.Order == null || o.Order == this.Order) &&
                    (this.Quantity == null || o.Quantity == this.Quantity) &&
                    (this.PurONo == null || o.PurONo.Contains(this.PurONo)) &&
                    (this.Distributor == null || o.Distributor.Contains(this.Distributor)) &&
                    (this.Coordinator == null || o.Coordinator.Contains(this.Coordinator)) &&
                    (this.Client == null || o.Client.Contains(this.Client)) &&
                    (this.FactoryRate == null || o.FactoryRate == this.FactoryRate) &&
                    (this.Qty == null || o.Qty == this.Qty) &&
                    (this.Gender == null || o.Gender.Contains(this.Gender)) &&
                    (this.AgeGroup == null || o.AgeGroup.Contains(this.AgeGroup)) &&
                    (this.IndimanRate == null || o.IndimanRate == this.IndimanRate) &&
                    (this.InvoiceOrder == null || o.InvoiceOrder == this.InvoiceOrder) &&
                    (this.ShipmentAddress == null || o.ShipmentAddress.Contains(this.ShipmentAddress)) &&
                    (this.ShipmentMode == null || o.ShipmentMode.Contains(this.ShipmentMode)) &&
                    (this.DestinationPort == null || o.DestinationPort.Contains(this.DestinationPort)) &&
                    (this.ShipmentTerm == null || o.ShipmentTerm.Contains(this.ShipmentTerm)) &&
                    (this.CostSheet == null || o.CostSheet == this.CostSheet) 
                 orderby o.OrderDetail
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.OrderDetail).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> returninvoiceorderdetailviews = IQueryableToList(oQuery);
            context.Dispose();
            return returninvoiceorderdetailviews;
        }
        
        public int SearchLikeAndObjectsCount()
        {
            IndicoEntities context = new IndicoEntities();
            return (from o in context.ReturnInvoiceOrderDetailView
                 where
                    (this.OrderDetail == null || o.OrderDetail == this.OrderDetail) &&
                    (this.OrderType == null || o.OrderType.Contains(this.OrderType)) &&
                    (this.VisualLayout == null || o.VisualLayout.Contains(this.VisualLayout)) &&
                    (this.VisualLayoutID == null || o.VisualLayoutID == this.VisualLayoutID) &&
                    (this.PatternID == null || o.PatternID == this.PatternID) &&
                    (this.Pattern == null || o.Pattern.Contains(this.Pattern)) &&
                    (this.FabricID == null || o.FabricID == this.FabricID) &&
                    (this.Fabric == null || o.Fabric.Contains(this.Fabric)) &&
                    (this.Order == null || o.Order == this.Order) &&
                    (this.Quantity == null || o.Quantity == this.Quantity) &&
                    (this.PurONo == null || o.PurONo.Contains(this.PurONo)) &&
                    (this.Distributor == null || o.Distributor.Contains(this.Distributor)) &&
                    (this.Coordinator == null || o.Coordinator.Contains(this.Coordinator)) &&
                    (this.Client == null || o.Client.Contains(this.Client)) &&
                    (this.FactoryRate == null || o.FactoryRate == this.FactoryRate) &&
                    (this.Qty == null || o.Qty == this.Qty) &&
                    (this.Gender == null || o.Gender.Contains(this.Gender)) &&
                    (this.AgeGroup == null || o.AgeGroup.Contains(this.AgeGroup)) &&
                    (this.IndimanRate == null || o.IndimanRate == this.IndimanRate) &&
                    (this.InvoiceOrder == null || o.InvoiceOrder == this.InvoiceOrder) &&
                    (this.ShipmentAddress == null || o.ShipmentAddress.Contains(this.ShipmentAddress)) &&
                    (this.ShipmentMode == null || o.ShipmentMode.Contains(this.ShipmentMode)) &&
                    (this.DestinationPort == null || o.DestinationPort.Contains(this.DestinationPort)) &&
                    (this.ShipmentTerm == null || o.ShipmentTerm.Contains(this.ShipmentTerm)) &&
                    (this.CostSheet == null || o.CostSheet == this.CostSheet) 
                 orderby o.OrderDetail
                 select o).Count();
            
        }
        
        #endregion
        
        #region SearchObjectsLikeOr
        public List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> SearchLikeOrObjects()
        {
            return SearchLikeOrObjects(0);
        }
        public List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> SearchLikeOrObjects(int maximumRows)
        {
            return SearchLikeOrObjects(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> SearchLikeOrObjects(int maximumRows, int startIndex)
        {
            return SearchLikeOrObjects(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> SearchLikeOrObjects(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = new IndicoEntities();
            IQueryable<Indico.DAL.ReturnInvoiceOrderDetailView> oQuery =
                (from o in context.ReturnInvoiceOrderDetailView
                 where
                    (this.OrderDetail == null || this.OrderDetail == o.OrderDetail) && 
                    (this.VisualLayoutID == null || this.VisualLayoutID == o.VisualLayoutID) && 
                    (this.PatternID == null || this.PatternID == o.PatternID) && 
                    (this.FabricID == null || this.FabricID == o.FabricID) && 
                    (this.Order == null || this.Order == o.Order) && 
                    (this.Quantity == null || this.Quantity == o.Quantity) && 
                    (this.FactoryRate == null || this.FactoryRate == o.FactoryRate) && 
                    (this.Qty == null || this.Qty == o.Qty) && 
                    (this.IndimanRate == null || this.IndimanRate == o.IndimanRate) && 
                    (this.InvoiceOrder == null || this.InvoiceOrder == o.InvoiceOrder) && 
                    (this.CostSheet == null || this.CostSheet == o.CostSheet) && 
                    ((o.OrderType.Contains(this.OrderType)) ||
                    (o.VisualLayout.Contains(this.VisualLayout)) ||
                    (o.Pattern.Contains(this.Pattern)) ||
                    (o.Fabric.Contains(this.Fabric)) ||
                    (o.PurONo.Contains(this.PurONo)) ||
                    (o.Distributor.Contains(this.Distributor)) ||
                    (o.Coordinator.Contains(this.Coordinator)) ||
                    (o.Client.Contains(this.Client)) ||
                    (o.Gender.Contains(this.Gender)) ||
                    (o.AgeGroup.Contains(this.AgeGroup)) ||
                    (o.ShipmentAddress.Contains(this.ShipmentAddress)) ||
                    (o.ShipmentMode.Contains(this.ShipmentMode)) ||
                    (o.DestinationPort.Contains(this.DestinationPort)) ||
                    (o.ShipmentTerm.Contains(this.ShipmentTerm)) ||
                    (this.OrderType == null && this.VisualLayout == null && this.Pattern == null && this.Fabric == null && this.PurONo == null && this.Distributor == null && this.Coordinator == null && this.Client == null && this.Gender == null && this.AgeGroup == null && this.ShipmentAddress == null && this.ShipmentMode == null && this.DestinationPort == null && this.ShipmentTerm == null ))
                 orderby o.OrderDetail
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.OrderDetail).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> returninvoiceorderdetailviews = IQueryableToList(oQuery);
            context.Dispose();
            return returninvoiceorderdetailviews;
        }
        
        public int SearchLikeOrObjectsCount()
        {
            IndicoEntities context = new IndicoEntities();
            return (from o in context.ReturnInvoiceOrderDetailView
                 where
                    (this.OrderDetail == null || this.OrderDetail == o.OrderDetail) && 
                    (this.VisualLayoutID == null || this.VisualLayoutID == o.VisualLayoutID) && 
                    (this.PatternID == null || this.PatternID == o.PatternID) && 
                    (this.FabricID == null || this.FabricID == o.FabricID) && 
                    (this.Order == null || this.Order == o.Order) && 
                    (this.Quantity == null || this.Quantity == o.Quantity) && 
                    (this.FactoryRate == null || this.FactoryRate == o.FactoryRate) && 
                    (this.Qty == null || this.Qty == o.Qty) && 
                    (this.IndimanRate == null || this.IndimanRate == o.IndimanRate) && 
                    (this.InvoiceOrder == null || this.InvoiceOrder == o.InvoiceOrder) && 
                    (this.CostSheet == null || this.CostSheet == o.CostSheet) && 
                    ((o.OrderType.Contains(this.OrderType)) ||
                    (o.VisualLayout.Contains(this.VisualLayout)) ||
                    (o.Pattern.Contains(this.Pattern)) ||
                    (o.Fabric.Contains(this.Fabric)) ||
                    (o.PurONo.Contains(this.PurONo)) ||
                    (o.Distributor.Contains(this.Distributor)) ||
                    (o.Coordinator.Contains(this.Coordinator)) ||
                    (o.Client.Contains(this.Client)) ||
                    (o.Gender.Contains(this.Gender)) ||
                    (o.AgeGroup.Contains(this.AgeGroup)) ||
                    (o.ShipmentAddress.Contains(this.ShipmentAddress)) ||
                    (o.ShipmentMode.Contains(this.ShipmentMode)) ||
                    (o.DestinationPort.Contains(this.DestinationPort)) ||
                    (o.ShipmentTerm.Contains(this.ShipmentTerm)) ||
                    (this.OrderType == null && this.VisualLayout == null && this.Pattern == null && this.Fabric == null && this.PurONo == null && this.Distributor == null && this.Coordinator == null && this.Client == null && this.Gender == null && this.AgeGroup == null && this.ShipmentAddress == null && this.ShipmentMode == null && this.DestinationPort == null && this.ShipmentTerm == null ))
                 orderby o.OrderDetail
                 select o).Count();
            
        }
        #endregion
        
        #region Serialization methods
        /// <summary>
        /// Serializes the Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO to an XML representation
        /// </summary>
        /// <returns>a XML string serialized representation</returns>
        public string SerializeObject()
        {
            string strReturn = "";

            System.IO.MemoryStream objStream = new System.IO.MemoryStream();

            System.Xml.Serialization.XmlSerializer x = new System.Xml.Serialization.XmlSerializer(this.GetType());

            x.Serialize(objStream, this);

            System.Text.Encoding encoding = System.Text.Encoding.UTF8;
            // Read string from binary file with UTF8 encoding
            strReturn = encoding.GetString(objStream.GetBuffer());

            objStream.Close();
            return strReturn;

        }

        /// <summary>
        /// Deserializes Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO object from an XML representation
        /// </summary>
        /// <param name="strXML">a XML string serialized representation</param>
        public Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO DeserializeObject(string strXML)
        {
            Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO objTemp = null;
            System.Xml.XmlDocument objXML = new System.Xml.XmlDocument();

            objXML.LoadXml(strXML);
            System.Text.Encoding encoding = System.Text.Encoding.UTF8;

            System.IO.MemoryStream objStream = new System.IO.MemoryStream();
            byte[] b = encoding.GetBytes(objXML.OuterXml);

            objStream.Write(b, 0, (int)b.Length);
            objStream.Position = 0;
            System.Xml.Serialization.XmlSerializer x = new System.Xml.Serialization.XmlSerializer(this.GetType());

            objTemp = (Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO)x.Deserialize(objStream);
            objStream.Close();
            return objTemp;
        }

        /// <summary>
        /// Returns a simple XML representation of Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO object in an XmlElement
        /// </summary>
        /// <returns>An XML snippet representing the object</returns>
        public string ToXmlString()
        {
            // MW TODO - implement this better.
            return SerializeObject();
        }
        #endregion
        
        #region IComparable Members

        public int CompareTo(object obj)
        {
            if (!(obj is Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO))
                return 1;
            Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBOComparer c = new Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBOComparer();
            return c.Compare(this, obj as Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO);
        }

        #endregion
        #endregion
    }
    
    #region ReturnInvoiceOrderDetailViewBOComparer
    public class ReturnInvoiceOrderDetailViewBOComparer : IComparer<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO>
    {
        private string propertyToCompareName;
        public ReturnInvoiceOrderDetailViewBOComparer(string propertyToCompare)
        {
            PropertyInfo p = typeof(Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO).GetProperty(propertyToCompare);
            if (p == null)
                throw new ArgumentException("is not a public property of Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO", "propertyToCompare");
            this.propertyToCompareName = propertyToCompare;
        }
        
        public ReturnInvoiceOrderDetailViewBOComparer()
        {
        
        }

        #region IComparer<Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO> Members
        public int Compare(Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO x, Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO y)
        {
            if (propertyToCompareName != null)
            {
                PropertyInfo p = typeof(Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO).GetProperty(propertyToCompareName);
                return compare(p, x, y);
            }
            else
            {
                PropertyInfo[] arrP = typeof(Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO).GetProperties();
                foreach (PropertyInfo p in arrP)
                {
                    int v = compare(p, x, y);
                    if (v != 0)
                        return v;
                }
                return 0;
            }
        }

        private int compare(PropertyInfo p, Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO x, Indico.BusinessObjects.ReturnInvoiceOrderDetailViewBO y)
        {
            object xVal = p.GetValue(x, null);
            object yVal = p.GetValue(y, null);

            if (xVal == null)
            {
                if (yVal == null)
                    return 0;
                else
                    return -1; // x is null, y is not, y is greater
            }
            else
            {
                if (y == null)
                    return 1; // x non null, y is null, x is greater
                else if (xVal is string)
                {
                    return StringComparer.OrdinalIgnoreCase.Compare(xVal, yVal);
                }
                else if (xVal is IComparable)
                {
                    return ((IComparable)xVal).CompareTo((IComparable)yVal);
                }
                else
                    throw new ArgumentException
                        ("is not string or valuetype that implements IComparable", "propertyToCompare");

            }
        }

        #endregion
    }
    #endregion
}
