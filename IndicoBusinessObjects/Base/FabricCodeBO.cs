// This file is generated by CodeSmith. Do not edit. All edits to this file will be lost. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Dynamic;
using System.Linq.Expressions;
using System.Reflection;
using System.Xml.Serialization;

using Indico.DAL;

//namespace Indico.BusinessObjects
namespace Indico.BusinessObjects
{
    /// <summary>
    /// 
    /// </summary>
    public partial class FabricCodeBO : BusinessObject, IComparable
    {
        #region fields
        #region Scalar Fields
        private int id;
        private string _code = string.Empty;
        private int _country;
        private string _denierCount;
        private int? _fabricColor;
        private decimal? _fabricPrice;
        private string _fabricwidth;
        private string _filaments;
        private string _gSM;
        private bool _isActive;
        private bool _isLiningFabric;
        private bool _isPure;
        private int? _landedCurrency;
        private string _material;
        private string _name = string.Empty;
        private string _nickName = string.Empty;
        private string _serialOrder;
        private int? _supplier;
        private int? _unit;
        #endregion
        
        #region Foreign Key fields
        [NonSerialized][XmlIgnoreAttribute]
        private Indico.BusinessObjects.CountryBO _objCountry;
        [NonSerialized][XmlIgnoreAttribute]
        private Indico.BusinessObjects.AccessoryColorBO _objFabricColor;
        [NonSerialized][XmlIgnoreAttribute]
        private Indico.BusinessObjects.CurrencyBO _objLandedCurrency;
        [NonSerialized][XmlIgnoreAttribute]
        private Indico.BusinessObjects.SupplierBO _objSupplier;
        [NonSerialized][XmlIgnoreAttribute]
        private Indico.BusinessObjects.UnitBO _objUnit;
        #endregion
        
        #region Foreign Table Foreign Key fields
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.ArtWorkBO> artWorksWhereThisIsFabricCodeList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _artWorksWhereThisIsFabricCodeLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.CostSheetBO> costSheetsWhereThisIsFabricList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _costSheetsWhereThisIsFabricLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.OrderDetailBO> orderDetailsWhereThisIsFabricCodeList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _orderDetailsWhereThisIsFabricCodeLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.PatternSupportFabricBO> patternSupportFabricsWhereThisIsFabricList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _patternSupportFabricsWhereThisIsFabricLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.PriceBO> pricesWhereThisIsFabricCodeList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _pricesWhereThisIsFabricCodeLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.QuoteDetailBO> quoteDetailsWhereThisIsFabricList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _quoteDetailsWhereThisIsFabricLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.VisualLayoutBO> visualLayoutsWhereThisIsFabricCodeList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _visualLayoutsWhereThisIsFabricCodeLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO> visualLayoutFabricsWhereThisIsFabricList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _visualLayoutFabricsWhereThisIsFabricLoaded;
        #endregion
        
        #region Other fields
        
        private Indico.DAL.FabricCode _objDAL = null;
        private bool _doNotUpdateDALObject = false;
        
        #endregion
        
        #endregion
        
        #region Properties
        /// <summary>The Primary Key for this object</summary>
        public int ID
        {   get {return id;}
            set 
            {
                OnIDChanging(value);
                id = value;
                OnIDChanged();
            }
        }
        
        /// <summary>Code of the fabric. The maximum length of this property is 64.</summary>
        public string Code
        {   
            get {return _code;}
            set 
            {
                OnCodeChanging(value);
                _code = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.Code = value;
                }
                OnCodeChanged();
            }
        }
        /// <summary>Country of the made of this fabric.</summary>
        public int Country
        {   
            get {return _country;}
            set 
            {
                OnCountryChanging(value);
                _country = value;
                if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && ((int)value != 0))
                {
                    this.ObjDAL.Country = (from o in this._context.Context.Country
                                           where o.ID == (int)value
                                           select o).ToList<Indico.DAL.Country>()[0];
                }
                else if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (int)value == 0)
                    this.ObjDAL.Country = null;
                OnCountryChanged();
            }
        }
        /// <summary>. The maximum length of this property is 255.</summary>
        public string DenierCount
        {   
            get {return _denierCount;}
            set 
            {
                OnDenierCountChanging(value);
                _denierCount = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.DenierCount = value;
                }
                OnDenierCountChanged();
            }
        }
        /// <summary>.</summary>
        public int? FabricColor
        {   
            get {return _fabricColor;}
            set 
            {
                OnFabricColorChanging(value);
                _fabricColor = value;
                if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (value != null) && ((int)value != 0))
                {
                    this.ObjDAL.FabricColor = (from o in this._context.Context.AccessoryColor
                                           where o.ID == (int)value
                                           select o).ToList<Indico.DAL.AccessoryColor>()[0];
                }
                else if (value == null || !this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (int)value == 0)
                    this.ObjDAL.FabricColor = null;
                OnFabricColorChanged();
            }
        }
        /// <summary>.</summary>
        public decimal? FabricPrice
        {   
            get {return _fabricPrice;}
            set 
            {
                OnFabricPriceChanging(value);
                _fabricPrice = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.FabricPrice = value;
                }
                OnFabricPriceChanged();
            }
        }
        /// <summary>. The maximum length of this property is 255.</summary>
        public string Fabricwidth
        {   
            get {return _fabricwidth;}
            set 
            {
                OnFabricwidthChanging(value);
                _fabricwidth = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.Fabricwidth = value;
                }
                OnFabricwidthChanged();
            }
        }
        /// <summary>. The maximum length of this property is 255.</summary>
        public string Filaments
        {   
            get {return _filaments;}
            set 
            {
                OnFilamentsChanging(value);
                _filaments = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.Filaments = value;
                }
                OnFilamentsChanged();
            }
        }
        /// <summary>. The maximum length of this property is 255.</summary>
        public string GSM
        {   
            get {return _gSM;}
            set 
            {
                OnGSMChanging(value);
                _gSM = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.GSM = value;
                }
                OnGSMChanged();
            }
        }
        /// <summary>.</summary>
        public bool IsActive
        {   
            get {return _isActive;}
            set 
            {
                OnIsActiveChanging(value);
                _isActive = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.IsActive = value;
                }
                OnIsActiveChanged();
            }
        }
        /// <summary>.</summary>
        public bool IsLiningFabric
        {   
            get {return _isLiningFabric;}
            set 
            {
                OnIsLiningFabricChanging(value);
                _isLiningFabric = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.IsLiningFabric = value;
                }
                OnIsLiningFabricChanged();
            }
        }
        /// <summary>.</summary>
        public bool IsPure
        {   
            get {return _isPure;}
            set 
            {
                OnIsPureChanging(value);
                _isPure = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.IsPure = value;
                }
                OnIsPureChanged();
            }
        }
        /// <summary>.</summary>
        public int? LandedCurrency
        {   
            get {return _landedCurrency;}
            set 
            {
                OnLandedCurrencyChanging(value);
                _landedCurrency = value;
                if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (value != null) && ((int)value != 0))
                {
                    this.ObjDAL.LandedCurrency = (from o in this._context.Context.Currency
                                           where o.ID == (int)value
                                           select o).ToList<Indico.DAL.Currency>()[0];
                }
                else if (value == null || !this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (int)value == 0)
                    this.ObjDAL.LandedCurrency = null;
                OnLandedCurrencyChanged();
            }
        }
        /// <summary>Material of the fabric. The maximum length of this property is 255.</summary>
        public string Material
        {   
            get {return _material;}
            set 
            {
                OnMaterialChanging(value);
                _material = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.Material = value;
                }
                OnMaterialChanged();
            }
        }
        /// <summary>Name of the fabric. The maximum length of this property is 255.</summary>
        public string Name
        {   
            get {return _name;}
            set 
            {
                OnNameChanging(value);
                _name = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.Name = value;
                }
                OnNameChanged();
            }
        }
        /// <summary>. The maximum length of this property is 255.</summary>
        public string NickName
        {   
            get {return _nickName;}
            set 
            {
                OnNickNameChanging(value);
                _nickName = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.NickName = value;
                }
                OnNickNameChanged();
            }
        }
        /// <summary>. The maximum length of this property is 32.</summary>
        public string SerialOrder
        {   
            get {return _serialOrder;}
            set 
            {
                OnSerialOrderChanging(value);
                _serialOrder = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.SerialOrder = value;
                }
                OnSerialOrderChanged();
            }
        }
        /// <summary>Supplier of this fabric.</summary>
        public int? Supplier
        {   
            get {return _supplier;}
            set 
            {
                OnSupplierChanging(value);
                _supplier = value;
                if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (value != null) && ((int)value != 0))
                {
                    this.ObjDAL.Supplier = (from o in this._context.Context.Supplier
                                           where o.ID == (int)value
                                           select o).ToList<Indico.DAL.Supplier>()[0];
                }
                else if (value == null || !this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (int)value == 0)
                    this.ObjDAL.Supplier = null;
                OnSupplierChanged();
            }
        }
        /// <summary>.</summary>
        public int? Unit
        {   
            get {return _unit;}
            set 
            {
                OnUnitChanging(value);
                _unit = value;
                if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (value != null) && ((int)value != 0))
                {
                    this.ObjDAL.Unit = (from o in this._context.Context.Unit
                                           where o.ID == (int)value
                                           select o).ToList<Indico.DAL.Unit>()[0];
                }
                else if (value == null || !this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (int)value == 0)
                    this.ObjDAL.Unit = null;
                OnUnitChanged();
            }
        }
        
        internal Indico.DAL.FabricCode ObjDAL
        {
            get 
            {
                if (_objDAL == null && base._createDAL)
                {
                    _objDAL = this.SetDAL(this.Context.Context);
                    this.ObjDAL.PropertyChanged += new System.ComponentModel.PropertyChangedEventHandler(obj_PropertyChanged);
                }

                return _objDAL;
            }
            set 
            {
                _objDAL = value;
            }
        }
        
        #endregion
        
        #region Non-scalar Properties
        
        #region Foreign Key Objects
        ///<summary>The CountryBO object identified by the value of Country</summary>
        [XmlIgnoreAttribute]
        public Indico.BusinessObjects.CountryBO objCountry
        {
            get
            {
                if ( _country > 0 && _objCountry == null)
                {
                        if (this._context == null)
                        {
                            _objCountry = new Indico.BusinessObjects.CountryBO();
                        }
                        else
                        {
                            _objCountry = new Indico.BusinessObjects.CountryBO(ref this._context);
                        }
                        _objCountry.ID = _country;
                        _objCountry.GetObject(); 
                }
                return _objCountry;
            }
            set
            { 
                _objCountry = value;
                _country = _objCountry.ID;
            }
        }
        ///<summary>The AccessoryColorBO object identified by the value of FabricColor</summary>
        [XmlIgnoreAttribute]
        public Indico.BusinessObjects.AccessoryColorBO objFabricColor
        {
            get
            {
                if (_fabricColor != null && _fabricColor > 0 && _objFabricColor == null)
                {
                        if (this._context == null)
                        {
                            _objFabricColor = new Indico.BusinessObjects.AccessoryColorBO();
                        }
                        else
                        {
                            _objFabricColor = new Indico.BusinessObjects.AccessoryColorBO(ref this._context);
                        }
                        _objFabricColor.ID = Convert.ToInt32(_fabricColor);
                        _objFabricColor.GetObject(); 
                }
                return _objFabricColor;
            }
            set
            { 
                _objFabricColor = value;
                _fabricColor = _objFabricColor.ID;
            }
        }
        ///<summary>The CurrencyBO object identified by the value of LandedCurrency</summary>
        [XmlIgnoreAttribute]
        public Indico.BusinessObjects.CurrencyBO objLandedCurrency
        {
            get
            {
                if (_landedCurrency != null && _landedCurrency > 0 && _objLandedCurrency == null)
                {
                        if (this._context == null)
                        {
                            _objLandedCurrency = new Indico.BusinessObjects.CurrencyBO();
                        }
                        else
                        {
                            _objLandedCurrency = new Indico.BusinessObjects.CurrencyBO(ref this._context);
                        }
                        _objLandedCurrency.ID = Convert.ToInt32(_landedCurrency);
                        _objLandedCurrency.GetObject(); 
                }
                return _objLandedCurrency;
            }
            set
            { 
                _objLandedCurrency = value;
                _landedCurrency = _objLandedCurrency.ID;
            }
        }
        ///<summary>The SupplierBO object identified by the value of Supplier</summary>
        [XmlIgnoreAttribute]
        public Indico.BusinessObjects.SupplierBO objSupplier
        {
            get
            {
                if (_supplier != null && _supplier > 0 && _objSupplier == null)
                {
                        if (this._context == null)
                        {
                            _objSupplier = new Indico.BusinessObjects.SupplierBO();
                        }
                        else
                        {
                            _objSupplier = new Indico.BusinessObjects.SupplierBO(ref this._context);
                        }
                        _objSupplier.ID = Convert.ToInt32(_supplier);
                        _objSupplier.GetObject(); 
                }
                return _objSupplier;
            }
            set
            { 
                _objSupplier = value;
                _supplier = _objSupplier.ID;
            }
        }
        ///<summary>The UnitBO object identified by the value of Unit</summary>
        [XmlIgnoreAttribute]
        public Indico.BusinessObjects.UnitBO objUnit
        {
            get
            {
                if (_unit != null && _unit > 0 && _objUnit == null)
                {
                        if (this._context == null)
                        {
                            _objUnit = new Indico.BusinessObjects.UnitBO();
                        }
                        else
                        {
                            _objUnit = new Indico.BusinessObjects.UnitBO(ref this._context);
                        }
                        _objUnit.ID = Convert.ToInt32(_unit);
                        _objUnit.GetObject(); 
                }
                return _objUnit;
            }
            set
            { 
                _objUnit = value;
                _unit = _objUnit.ID;
            }
        }
        #endregion
        
        #region Foreign Object Foreign Key Collections
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.ArtWorkBO> ArtWorksWhereThisIsFabricCode // FK_ArtWork_FabricCode
        {
            get
            {
                if (!_artWorksWhereThisIsFabricCodeLoaded)
                {
                    _artWorksWhereThisIsFabricCodeLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.FabricCode obj = (from o in context.FabricCode
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.ArtWorksWhereThisIsFabricCode.Load();
                        artWorksWhereThisIsFabricCodeList = new IndicoList<Indico.BusinessObjects.ArtWorkBO>(obj.ArtWorksWhereThisIsFabricCode.Count);
                        
                        foreach (Indico.DAL.ArtWork o in obj.ArtWorksWhereThisIsFabricCode)
                        {
                            Indico.BusinessObjects.ArtWorkBO fkObj = new Indico.BusinessObjects.ArtWorkBO(o, ref this._context);
                            artWorksWhereThisIsFabricCodeList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        artWorksWhereThisIsFabricCodeList = new IndicoList<Indico.BusinessObjects.ArtWorkBO>();
                    }
                    
                    artWorksWhereThisIsFabricCodeList.OnBeforeRemove += new EventHandler(ArtWorksWhereThisIsFabricCodeList_OnBeforeRemove);
                    artWorksWhereThisIsFabricCodeList.OnAfterAdd += new EventHandler(ArtWorksWhereThisIsFabricCodeList_OnAfterAdd);
                }
                
                return artWorksWhereThisIsFabricCodeList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.CostSheetBO> CostSheetsWhereThisIsFabric // FK_CostSheet_Fabric
        {
            get
            {
                if (!_costSheetsWhereThisIsFabricLoaded)
                {
                    _costSheetsWhereThisIsFabricLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.FabricCode obj = (from o in context.FabricCode
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.CostSheetsWhereThisIsFabric.Load();
                        costSheetsWhereThisIsFabricList = new IndicoList<Indico.BusinessObjects.CostSheetBO>(obj.CostSheetsWhereThisIsFabric.Count);
                        
                        foreach (Indico.DAL.CostSheet o in obj.CostSheetsWhereThisIsFabric)
                        {
                            Indico.BusinessObjects.CostSheetBO fkObj = new Indico.BusinessObjects.CostSheetBO(o, ref this._context);
                            costSheetsWhereThisIsFabricList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        costSheetsWhereThisIsFabricList = new IndicoList<Indico.BusinessObjects.CostSheetBO>();
                    }
                    
                    costSheetsWhereThisIsFabricList.OnBeforeRemove += new EventHandler(CostSheetsWhereThisIsFabricList_OnBeforeRemove);
                    costSheetsWhereThisIsFabricList.OnAfterAdd += new EventHandler(CostSheetsWhereThisIsFabricList_OnAfterAdd);
                }
                
                return costSheetsWhereThisIsFabricList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.OrderDetailBO> OrderDetailsWhereThisIsFabricCode // FK_OrderDetail_FabricCode
        {
            get
            {
                if (!_orderDetailsWhereThisIsFabricCodeLoaded)
                {
                    _orderDetailsWhereThisIsFabricCodeLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.FabricCode obj = (from o in context.FabricCode
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.OrderDetailsWhereThisIsFabricCode.Load();
                        orderDetailsWhereThisIsFabricCodeList = new IndicoList<Indico.BusinessObjects.OrderDetailBO>(obj.OrderDetailsWhereThisIsFabricCode.Count);
                        
                        foreach (Indico.DAL.OrderDetail o in obj.OrderDetailsWhereThisIsFabricCode)
                        {
                            Indico.BusinessObjects.OrderDetailBO fkObj = new Indico.BusinessObjects.OrderDetailBO(o, ref this._context);
                            orderDetailsWhereThisIsFabricCodeList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        orderDetailsWhereThisIsFabricCodeList = new IndicoList<Indico.BusinessObjects.OrderDetailBO>();
                    }
                    
                    orderDetailsWhereThisIsFabricCodeList.OnBeforeRemove += new EventHandler(OrderDetailsWhereThisIsFabricCodeList_OnBeforeRemove);
                    orderDetailsWhereThisIsFabricCodeList.OnAfterAdd += new EventHandler(OrderDetailsWhereThisIsFabricCodeList_OnAfterAdd);
                }
                
                return orderDetailsWhereThisIsFabricCodeList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.PatternSupportFabricBO> PatternSupportFabricsWhereThisIsFabric // FK_PatternSupportFabric_Fabric
        {
            get
            {
                if (!_patternSupportFabricsWhereThisIsFabricLoaded)
                {
                    _patternSupportFabricsWhereThisIsFabricLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.FabricCode obj = (from o in context.FabricCode
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.PatternSupportFabricsWhereThisIsFabric.Load();
                        patternSupportFabricsWhereThisIsFabricList = new IndicoList<Indico.BusinessObjects.PatternSupportFabricBO>(obj.PatternSupportFabricsWhereThisIsFabric.Count);
                        
                        foreach (Indico.DAL.PatternSupportFabric o in obj.PatternSupportFabricsWhereThisIsFabric)
                        {
                            Indico.BusinessObjects.PatternSupportFabricBO fkObj = new Indico.BusinessObjects.PatternSupportFabricBO(o, ref this._context);
                            patternSupportFabricsWhereThisIsFabricList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        patternSupportFabricsWhereThisIsFabricList = new IndicoList<Indico.BusinessObjects.PatternSupportFabricBO>();
                    }
                    
                    patternSupportFabricsWhereThisIsFabricList.OnBeforeRemove += new EventHandler(PatternSupportFabricsWhereThisIsFabricList_OnBeforeRemove);
                    patternSupportFabricsWhereThisIsFabricList.OnAfterAdd += new EventHandler(PatternSupportFabricsWhereThisIsFabricList_OnAfterAdd);
                }
                
                return patternSupportFabricsWhereThisIsFabricList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.PriceBO> PricesWhereThisIsFabricCode // FK_Price_Fabric
        {
            get
            {
                if (!_pricesWhereThisIsFabricCodeLoaded)
                {
                    _pricesWhereThisIsFabricCodeLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.FabricCode obj = (from o in context.FabricCode
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.PricesWhereThisIsFabricCode.Load();
                        pricesWhereThisIsFabricCodeList = new IndicoList<Indico.BusinessObjects.PriceBO>(obj.PricesWhereThisIsFabricCode.Count);
                        
                        foreach (Indico.DAL.Price o in obj.PricesWhereThisIsFabricCode)
                        {
                            Indico.BusinessObjects.PriceBO fkObj = new Indico.BusinessObjects.PriceBO(o, ref this._context);
                            pricesWhereThisIsFabricCodeList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        pricesWhereThisIsFabricCodeList = new IndicoList<Indico.BusinessObjects.PriceBO>();
                    }
                    
                    pricesWhereThisIsFabricCodeList.OnBeforeRemove += new EventHandler(PricesWhereThisIsFabricCodeList_OnBeforeRemove);
                    pricesWhereThisIsFabricCodeList.OnAfterAdd += new EventHandler(PricesWhereThisIsFabricCodeList_OnAfterAdd);
                }
                
                return pricesWhereThisIsFabricCodeList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.QuoteDetailBO> QuoteDetailsWhereThisIsFabric // FK_QuoteDetail_Fabric
        {
            get
            {
                if (!_quoteDetailsWhereThisIsFabricLoaded)
                {
                    _quoteDetailsWhereThisIsFabricLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.FabricCode obj = (from o in context.FabricCode
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.QuoteDetailsWhereThisIsFabric.Load();
                        quoteDetailsWhereThisIsFabricList = new IndicoList<Indico.BusinessObjects.QuoteDetailBO>(obj.QuoteDetailsWhereThisIsFabric.Count);
                        
                        foreach (Indico.DAL.QuoteDetail o in obj.QuoteDetailsWhereThisIsFabric)
                        {
                            Indico.BusinessObjects.QuoteDetailBO fkObj = new Indico.BusinessObjects.QuoteDetailBO(o, ref this._context);
                            quoteDetailsWhereThisIsFabricList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        quoteDetailsWhereThisIsFabricList = new IndicoList<Indico.BusinessObjects.QuoteDetailBO>();
                    }
                    
                    quoteDetailsWhereThisIsFabricList.OnBeforeRemove += new EventHandler(QuoteDetailsWhereThisIsFabricList_OnBeforeRemove);
                    quoteDetailsWhereThisIsFabricList.OnAfterAdd += new EventHandler(QuoteDetailsWhereThisIsFabricList_OnAfterAdd);
                }
                
                return quoteDetailsWhereThisIsFabricList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.VisualLayoutBO> VisualLayoutsWhereThisIsFabricCode // FK_VisualLayout_FabricCode
        {
            get
            {
                if (!_visualLayoutsWhereThisIsFabricCodeLoaded)
                {
                    _visualLayoutsWhereThisIsFabricCodeLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.FabricCode obj = (from o in context.FabricCode
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.VisualLayoutsWhereThisIsFabricCode.Load();
                        visualLayoutsWhereThisIsFabricCodeList = new IndicoList<Indico.BusinessObjects.VisualLayoutBO>(obj.VisualLayoutsWhereThisIsFabricCode.Count);
                        
                        foreach (Indico.DAL.VisualLayout o in obj.VisualLayoutsWhereThisIsFabricCode)
                        {
                            Indico.BusinessObjects.VisualLayoutBO fkObj = new Indico.BusinessObjects.VisualLayoutBO(o, ref this._context);
                            visualLayoutsWhereThisIsFabricCodeList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        visualLayoutsWhereThisIsFabricCodeList = new IndicoList<Indico.BusinessObjects.VisualLayoutBO>();
                    }
                    
                    visualLayoutsWhereThisIsFabricCodeList.OnBeforeRemove += new EventHandler(VisualLayoutsWhereThisIsFabricCodeList_OnBeforeRemove);
                    visualLayoutsWhereThisIsFabricCodeList.OnAfterAdd += new EventHandler(VisualLayoutsWhereThisIsFabricCodeList_OnAfterAdd);
                }
                
                return visualLayoutsWhereThisIsFabricCodeList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO> VisualLayoutFabricsWhereThisIsFabric // FK_VisualLayoutFabric_Fabric
        {
            get
            {
                if (!_visualLayoutFabricsWhereThisIsFabricLoaded)
                {
                    _visualLayoutFabricsWhereThisIsFabricLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.FabricCode obj = (from o in context.FabricCode
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.VisualLayoutFabricsWhereThisIsFabric.Load();
                        visualLayoutFabricsWhereThisIsFabricList = new IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>(obj.VisualLayoutFabricsWhereThisIsFabric.Count);
                        
                        foreach (Indico.DAL.VisualLayoutFabric o in obj.VisualLayoutFabricsWhereThisIsFabric)
                        {
                            Indico.BusinessObjects.VisualLayoutFabricBO fkObj = new Indico.BusinessObjects.VisualLayoutFabricBO(o, ref this._context);
                            visualLayoutFabricsWhereThisIsFabricList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        visualLayoutFabricsWhereThisIsFabricList = new IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>();
                    }
                    
                    visualLayoutFabricsWhereThisIsFabricList.OnBeforeRemove += new EventHandler(VisualLayoutFabricsWhereThisIsFabricList_OnBeforeRemove);
                    visualLayoutFabricsWhereThisIsFabricList.OnAfterAdd += new EventHandler(VisualLayoutFabricsWhereThisIsFabricList_OnAfterAdd);
                }
                
                return visualLayoutFabricsWhereThisIsFabricList;
            }
        }
        #endregion
        
        #endregion
        
        #region Internal Constructors
        /// <summary>
        /// Creates an instance of the FabricCodeBO class using the supplied Indico.DAL.FabricCode. 
        /// </summary>
        /// <param name="obj">a Indico.DAL.FabricCode whose properties will be used to initialise the FabricCodeBO</param>
        internal FabricCodeBO(Indico.DAL.FabricCode obj, ref IndicoContext context)
        {
            this._doNotUpdateDALObject = true;
            
            this.Context = context;
        
            // set the properties from the Indico.DAL.FabricCode 
            this.ID = obj.ID;
            
            this.Code = obj.Code;
            this.Country = (obj.CountryReference.EntityKey != null && obj.CountryReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.CountryReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.DenierCount = obj.DenierCount;
            this.FabricColor = (obj.FabricColorReference.EntityKey != null && obj.FabricColorReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.FabricColorReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.FabricPrice = obj.FabricPrice;
            this.Fabricwidth = obj.Fabricwidth;
            this.Filaments = obj.Filaments;
            this.GSM = obj.GSM;
            this.IsActive = obj.IsActive;
            this.IsLiningFabric = obj.IsLiningFabric;
            this.IsPure = obj.IsPure;
            this.LandedCurrency = (obj.LandedCurrencyReference.EntityKey != null && obj.LandedCurrencyReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.LandedCurrencyReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.Material = obj.Material;
            this.Name = obj.Name;
            this.NickName = obj.NickName;
            this.SerialOrder = obj.SerialOrder;
            this.Supplier = (obj.SupplierReference.EntityKey != null && obj.SupplierReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.SupplierReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.Unit = (obj.UnitReference.EntityKey != null && obj.UnitReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.UnitReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            
            this._doNotUpdateDALObject = false;
        }
        #endregion
        
        #region Internal utility methods
        internal Indico.DAL.FabricCode SetDAL(IndicoEntities context)
        {
            this._doNotUpdateDALObject = true;
        
            // set the Indico.DAL.FabricCode properties
            Indico.DAL.FabricCode obj = new Indico.DAL.FabricCode();
            
            if (this.ID > 0)
            {
                obj = context.FabricCode.FirstOrDefault<FabricCode>(o => o.ID == this.ID);
            }
            
            obj.Code = this.Code;
            obj.DenierCount = this.DenierCount;
            obj.FabricPrice = this.FabricPrice;
            obj.Fabricwidth = this.Fabricwidth;
            obj.Filaments = this.Filaments;
            obj.GSM = this.GSM;
            obj.IsActive = this.IsActive;
            obj.IsLiningFabric = this.IsLiningFabric;
            obj.IsPure = this.IsPure;
            obj.Material = this.Material;
            obj.Name = this.Name;
            obj.NickName = this.NickName;
            obj.SerialOrder = this.SerialOrder;
            
            if (this.Country > 0) obj.Country = context.Country.FirstOrDefault(o => o.ID == this.Country);
            if (this.FabricColor != null && this.FabricColor > 0) obj.FabricColor = context.AccessoryColor.FirstOrDefault(o => o.ID == this.FabricColor);
            if (this.LandedCurrency != null && this.LandedCurrency > 0) obj.LandedCurrency = context.Currency.FirstOrDefault(o => o.ID == this.LandedCurrency);
            if (this.Supplier != null && this.Supplier > 0) obj.Supplier = context.Supplier.FirstOrDefault(o => o.ID == this.Supplier);
            if (this.Unit != null && this.Unit > 0) obj.Unit = context.Unit.FirstOrDefault(o => o.ID == this.Unit);
            
            if (_artWorksWhereThisIsFabricCodeLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.ArtWorkBO.ToEntityList(this.ArtWorksWhereThisIsFabricCode, context), 
                    obj.ArtWorksWhereThisIsFabricCode);
            if (_costSheetsWhereThisIsFabricLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.CostSheetBO.ToEntityList(this.CostSheetsWhereThisIsFabric, context), 
                    obj.CostSheetsWhereThisIsFabric);
            if (_orderDetailsWhereThisIsFabricCodeLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.OrderDetailBO.ToEntityList(this.OrderDetailsWhereThisIsFabricCode, context), 
                    obj.OrderDetailsWhereThisIsFabricCode);
            if (_patternSupportFabricsWhereThisIsFabricLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.PatternSupportFabricBO.ToEntityList(this.PatternSupportFabricsWhereThisIsFabric, context), 
                    obj.PatternSupportFabricsWhereThisIsFabric);
            if (_pricesWhereThisIsFabricCodeLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.PriceBO.ToEntityList(this.PricesWhereThisIsFabricCode, context), 
                    obj.PricesWhereThisIsFabricCode);
            if (_quoteDetailsWhereThisIsFabricLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.QuoteDetailBO.ToEntityList(this.QuoteDetailsWhereThisIsFabric, context), 
                    obj.QuoteDetailsWhereThisIsFabric);
            if (_visualLayoutsWhereThisIsFabricCodeLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.VisualLayoutBO.ToEntityList(this.VisualLayoutsWhereThisIsFabricCode, context), 
                    obj.VisualLayoutsWhereThisIsFabricCode);
            if (_visualLayoutFabricsWhereThisIsFabricLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.VisualLayoutFabricBO.ToEntityList(this.VisualLayoutFabricsWhereThisIsFabric, context), 
                    obj.VisualLayoutFabricsWhereThisIsFabric);
            
            this._doNotUpdateDALObject = false;
            
            return obj;
        }
        
        internal void SetBO(System.Data.Objects.DataClasses.EntityObject eObj)
        {
            this._doNotUpdateDALObject = true;
            
            // Check the received type
            if (eObj.GetType() != typeof(Indico.DAL.FabricCode))
            {
                throw new FormatException("Received wrong parameter type...");
            }

            Indico.DAL.FabricCode obj = (Indico.DAL.FabricCode)eObj;
            
            // set the Indico.BusinessObjects.FabricCodeBO properties
            this.ID = obj.ID;
            
            this.Code = obj.Code;
            this.DenierCount = obj.DenierCount;
            this.FabricPrice = obj.FabricPrice;
            this.Fabricwidth = obj.Fabricwidth;
            this.Filaments = obj.Filaments;
            this.GSM = obj.GSM;
            this.IsActive = obj.IsActive;
            this.IsLiningFabric = obj.IsLiningFabric;
            this.IsPure = obj.IsPure;
            this.Material = obj.Material;
            this.Name = obj.Name;
            this.NickName = obj.NickName;
            this.SerialOrder = obj.SerialOrder;
            
            this.Country = (obj.CountryReference.EntityKey != null && obj.CountryReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.CountryReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.FabricColor = (obj.FabricColorReference.EntityKey != null && obj.FabricColorReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.FabricColorReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.LandedCurrency = (obj.LandedCurrencyReference.EntityKey != null && obj.LandedCurrencyReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.LandedCurrencyReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.Supplier = (obj.SupplierReference.EntityKey != null && obj.SupplierReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.SupplierReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.Unit = (obj.UnitReference.EntityKey != null && obj.UnitReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.UnitReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            
            this._doNotUpdateDALObject = false;
        }
        
        internal void SetBO(Indico.BusinessObjects.FabricCodeBO obj)
        {
            this._doNotUpdateDALObject = true;
            
            // set this Indico.BusinessObjects.FabricCodeBO properties
            this.ID = obj.ID;
            
            this.Code = obj.Code;
            this.Country = obj.Country;
            this.DenierCount = obj.DenierCount;
            this.FabricColor = obj.FabricColor;
            this.FabricPrice = obj.FabricPrice;
            this.Fabricwidth = obj.Fabricwidth;
            this.Filaments = obj.Filaments;
            this.GSM = obj.GSM;
            this.IsActive = obj.IsActive;
            this.IsLiningFabric = obj.IsLiningFabric;
            this.IsPure = obj.IsPure;
            this.LandedCurrency = obj.LandedCurrency;
            this.Material = obj.Material;
            this.Name = obj.Name;
            this.NickName = obj.NickName;
            this.SerialOrder = obj.SerialOrder;
            this.Supplier = obj.Supplier;
            this.Unit = obj.Unit;
            
            this._doNotUpdateDALObject = false;
        }
        
        internal List<Indico.BusinessObjects.FabricCodeBO> IQueryableToList(IQueryable<Indico.DAL.FabricCode> oQuery)
        {
            List<Indico.DAL.FabricCode> oList = oQuery.ToList();
            List<Indico.BusinessObjects.FabricCodeBO> rList = new List<Indico.BusinessObjects.FabricCodeBO>(oList.Count);
            foreach (Indico.DAL.FabricCode o in oList)
            {
                Indico.BusinessObjects.FabricCodeBO obj = new Indico.BusinessObjects.FabricCodeBO(o, ref this._context);
                rList.Add(obj);
            }
            return rList;
        }
        
        internal List<Indico.BusinessObjects.FabricCodeBO> ToList(IEnumerable<Indico.DAL.FabricCode> oQuery)
        {
            List<Indico.DAL.FabricCode> oList = oQuery.ToList();
            List<Indico.BusinessObjects.FabricCodeBO> rList = new List<Indico.BusinessObjects.FabricCodeBO>(oList.Count);
            foreach (Indico.DAL.FabricCode o in oList)
            {
                Indico.BusinessObjects.FabricCodeBO obj = new Indico.BusinessObjects.FabricCodeBO(o, ref this._context);
                rList.Add(obj);
            }
            return rList;
        }
        
        internal static List<Indico.DAL.FabricCode> ToEntityList(List<FabricCodeBO> bos, IndicoEntities context)
        {
            // build a List of FabricCode entities from the business objects
            List<Int32> ids = (from o in bos
                                   select o.ID).ToList<Int32>();

            return (context.FabricCode.Count() == 0) ? new List<Indico.DAL.FabricCode>() : (context.FabricCode.Where(BuildContainsExpression<FabricCode, int>(e => e.ID, ids)))
                .ToList<Indico.DAL.FabricCode>();
        }
        
        internal static System.Data.Objects.DataClasses.EntityCollection<Indico.DAL.FabricCode> ToEntityCollection(List<FabricCodeBO> bos, IndicoEntities context)
        {
            // build an EntityCollection of FabricCode entities from the business objects
            List<Int32> ids = (from o in bos
                               select o.ID).ToList<Int32>();

            List<Indico.DAL.FabricCode> el = (context.FabricCode.Count() == 0) ? new List<Indico.DAL.FabricCode>() : 
                context.FabricCode.Where(BuildContainsExpression<FabricCode, int>(e => e.ID, ids))
                .ToList<Indico.DAL.FabricCode>();
                
            System.Data.Objects.DataClasses.EntityCollection<Indico.DAL.FabricCode> ec 
                = new System.Data.Objects.DataClasses.EntityCollection<Indico.DAL.FabricCode>();
                
            foreach (Indico.DAL.FabricCode r in el) 
            {
                ec.Add(r);
            }
            return ec;
        }

        internal Indico.DAL.FabricCode ToEntity(IndicoEntities context)
        {
            return (from o in context.FabricCode
                    where o.ID == this.ID
                    select o).FirstOrDefault();
        }
        #endregion
        
        #region BusinessObject methods
        
        #region Add Object
        
        public void Add()
        {
            if (this.Context != null)
            {
                this.Context.Context.AddToFabricCode(this.ObjDAL);
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                Indico.DAL.FabricCode obj = this.SetDAL(objContext.Context);
                objContext.Context.AddToFabricCode(obj);
                objContext.SaveChanges();
                objContext.Dispose(); 
            }
        }
        
        #endregion
        
        #region Delete Object
        
        public void Delete()
        {
            if (this.Context != null)
            {
                if (this.ObjDAL != null && this.ObjDAL.EntityKey != null)
                {
                    if (this.ObjDAL.EntityState == System.Data.EntityState.Detached)
                    {
                        this.Context.Context.Attach(this.ObjDAL);
                        this.Context.Context.DeleteObject(this.ObjDAL);
                    }
                    else
                    {
                        this.Context.Context.DeleteObject(this.ObjDAL);
                    }
                }
                else
                {
                    Indico.DAL.FabricCode obj = this.SetDAL(this.Context.Context);
                    this.Context.Context.DeleteObject(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                Indico.DAL.FabricCode obj = this.SetDAL(objContext.Context);
                this.Context.Context.DeleteObject(obj);
                objContext.Context.SaveChanges();
                objContext.Dispose();
            }
        }
        
        #endregion
        
        #region Get Single Object
        
        public bool GetObject()
        {
            return GetObject(true);
        }
        public bool GetObject(bool blnCache)
        {
            Indico.BusinessObjects.FabricCodeBO data = null;
            
            if (blnCache)
            {
                data = this.GetFromCache(this.ID) as Indico.BusinessObjects.FabricCodeBO; 
            }

            if (data != null)
            {
                SetBO(data);
            }
            else
            {
                try
                {
                    IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                    IQueryable<Indico.DAL.FabricCode> oQuery =
                        from o in context.FabricCode
                        where o.ID == this.ID
                        select o;

                    List<Indico.DAL.FabricCode> oList = oQuery.ToList();
                    if (oList.Count != 1)
                        return false;
                    else
                    {
                        SetBO(oList[0]);
                        this.Cache();
                    }
                    
                    if (this.Context == null)
                    {
                        context.Dispose();
                    }
                }
                catch (System.Exception e)
                {
                    throw new IndicoException(String.Format(System.Globalization.CultureInfo.InvariantCulture, ResourceManager.GetString("Could not Retrieve a {0} from the data store", System.Globalization.CultureInfo.CurrentCulture), this.ToString()), e, IndicoException.Severities.USER, IndicoException.ERRNO.INT_ERR_BO_SELECT_FAIL);
                }
            }
            return true;
        }
        #endregion
        
        #region GetAllObject
        public List<Indico.BusinessObjects.FabricCodeBO> GetAllObject()
        {
            return GetAllObject(0, 0);
        }
        public List<Indico.BusinessObjects.FabricCodeBO> GetAllObject(int maximumRows)
        {
            return GetAllObject(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.FabricCodeBO> GetAllObject(int maximumRows, int startIndex)
        {
            return GetAllObject(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.FabricCodeBO> GetAllObject(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = new IndicoEntities();
            IQueryable<Indico.DAL.FabricCode> oQuery =
                (from o in context.FabricCode
                 orderby o.ID
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.ID).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.FabricCodeBO> fabriccodes = IQueryableToList(oQuery);
            context.Dispose();
            return fabriccodes;
        }
        #endregion
        
        #region SearchObjects
        public List<Indico.BusinessObjects.FabricCodeBO> SearchObjects()
        {
            return SearchObjects(0,0);
        }
        public List<Indico.BusinessObjects.FabricCodeBO> SearchObjects(int maximumRows)
        {
            return SearchObjects(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.FabricCodeBO> SearchObjects(int maximumRows, int startIndex)
        {
            return SearchObjects(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.FabricCodeBO> SearchObjects(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            IQueryable<Indico.DAL.FabricCode> oQuery =
                (from o in context.FabricCode
                 where
                    (this.ID == 0 || this.ID == o.ID) &&
                    (this.Code == string.Empty || this.Code == o.Code) &&
                    (this.Name == string.Empty || this.Name == o.Name) &&
                    (this.Material == null || this.Material == o.Material) &&
                    (this.GSM == null || this.GSM == o.GSM) &&
                    (this.Supplier == null || this.Supplier == o.Supplier.ID) &&
                    (this.Country == 0 || this.Country == o.Country.ID) &&
                    (this.DenierCount == null || this.DenierCount == o.DenierCount) &&
                    (this.Filaments == null || this.Filaments == o.Filaments) &&
                    (this.NickName == string.Empty || this.NickName == o.NickName) &&
                    (this.SerialOrder == null || this.SerialOrder == o.SerialOrder) &&
                    (this.FabricPrice == null || this.FabricPrice == o.FabricPrice) &&
                    (this.LandedCurrency == null || this.LandedCurrency == o.LandedCurrency.ID) &&
                    (this.Fabricwidth == null || this.Fabricwidth == o.Fabricwidth) &&
                    (this.Unit == null || this.Unit == o.Unit.ID) &&
                    (this.FabricColor == null || this.FabricColor == o.FabricColor.ID) &&
                    (this.IsActive == false || this.IsActive == o.IsActive) &&
                    (this.IsPure == false || this.IsPure == o.IsPure) &&
                    (this.IsLiningFabric == false || this.IsLiningFabric == o.IsLiningFabric) 
                 orderby o.ID
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.ID).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.FabricCodeBO> fabriccodes = IQueryableToList(oQuery);
            
            if (this.Context == null)
            {
                context.Dispose();
            }
            
            return fabriccodes;
        }
        
        public int SearchObjectsCount()
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            return (from o in context.FabricCode
                 where
                    (this.ID == 0 || this.ID == o.ID) &&
                    (this.Code == string.Empty || this.Code == o.Code) &&
                    (this.Name == string.Empty || this.Name == o.Name) &&
                    (this.Material == null || this.Material == o.Material) &&
                    (this.GSM == null || this.GSM == o.GSM) &&
                    (this.Supplier == null || this.Supplier == o.Supplier.ID) &&
                    (this.Country == 0 || this.Country == o.Country.ID) &&
                    (this.DenierCount == null || this.DenierCount == o.DenierCount) &&
                    (this.Filaments == null || this.Filaments == o.Filaments) &&
                    (this.NickName == string.Empty || this.NickName == o.NickName) &&
                    (this.SerialOrder == null || this.SerialOrder == o.SerialOrder) &&
                    (this.FabricPrice == null || this.FabricPrice == o.FabricPrice) &&
                    (this.LandedCurrency == null || this.LandedCurrency == o.LandedCurrency.ID) &&
                    (this.Fabricwidth == null || this.Fabricwidth == o.Fabricwidth) &&
                    (this.Unit == null || this.Unit == o.Unit.ID) &&
                    (this.FabricColor == null || this.FabricColor == o.FabricColor.ID) &&
                    (this.IsActive == false || this.IsActive == o.IsActive) &&
                    (this.IsPure == false || this.IsPure == o.IsPure) &&
                    (this.IsLiningFabric == false || this.IsLiningFabric == o.IsLiningFabric) 
                 orderby o.ID
                 select o).Count();
        }
        #endregion
        
        #region SearchObjectsLikeAnd
        public List<Indico.BusinessObjects.FabricCodeBO> SearchLikeAndObjects()
        {
            return SearchLikeAndObjects(0);
        }
        public List<Indico.BusinessObjects.FabricCodeBO> SearchLikeAndObjects(int maximumRows)
        {
            return SearchLikeAndObjects(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.FabricCodeBO> SearchLikeAndObjects(int maximumRows, int startIndex)
        {
            return SearchLikeAndObjects(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.FabricCodeBO> SearchLikeAndObjects(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            IQueryable<Indico.DAL.FabricCode> oQuery =
                (from o in context.FabricCode
                 where
                    (this.ID == 0 || o.ID == this.ID) &&
                    (this.Code == string.Empty || o.Code.Contains(this.Code)) &&
                    (this.Name == string.Empty || o.Name.Contains(this.Name)) &&
                    (this.Material == null || o.Material.Contains(this.Material)) &&
                    (this.GSM == null || o.GSM.Contains(this.GSM)) &&
                    (this.Supplier == null || o.Supplier.ID == this.Supplier) &&
                    (this.Country == 0 || o.Country.ID == this.Country) &&
                    (this.DenierCount == null || o.DenierCount.Contains(this.DenierCount)) &&
                    (this.Filaments == null || o.Filaments.Contains(this.Filaments)) &&
                    (this.NickName == string.Empty || o.NickName.Contains(this.NickName)) &&
                    (this.SerialOrder == null || o.SerialOrder.Contains(this.SerialOrder)) &&
                    (this.FabricPrice == null || o.FabricPrice == this.FabricPrice) &&
                    (this.LandedCurrency == null || o.LandedCurrency.ID == this.LandedCurrency) &&
                    (this.Fabricwidth == null || o.Fabricwidth.Contains(this.Fabricwidth)) &&
                    (this.Unit == null || o.Unit.ID == this.Unit) &&
                    (this.FabricColor == null || o.FabricColor.ID == this.FabricColor) &&
                    (this.IsActive == false || o.IsActive == this.IsActive) &&
                    (this.IsPure == false || o.IsPure == this.IsPure) &&
                    (this.IsLiningFabric == false || o.IsLiningFabric == this.IsLiningFabric) 
                 orderby o.ID
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.ID).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.FabricCodeBO> fabriccodes = IQueryableToList(oQuery);
            if (this.Context == null)
            {
                context.Dispose();
            }
            
            return fabriccodes;
        }
        
        public int SearchLikeAndObjectsCount()
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            return (from o in context.FabricCode
                 where
                    (this.ID == 0 || o.ID == this.ID) &&
                    (this.Code == string.Empty || o.Code.Contains(this.Code)) &&
                    (this.Name == string.Empty || o.Name.Contains(this.Name)) &&
                    (this.Material == null || o.Material.Contains(this.Material)) &&
                    (this.GSM == null || o.GSM.Contains(this.GSM)) &&
                    (this.Supplier == null || o.Supplier.ID == this.Supplier) &&
                    (this.Country == 0 || o.Country.ID == this.Country) &&
                    (this.DenierCount == null || o.DenierCount.Contains(this.DenierCount)) &&
                    (this.Filaments == null || o.Filaments.Contains(this.Filaments)) &&
                    (this.NickName == string.Empty || o.NickName.Contains(this.NickName)) &&
                    (this.SerialOrder == null || o.SerialOrder.Contains(this.SerialOrder)) &&
                    (this.FabricPrice == null || o.FabricPrice == this.FabricPrice) &&
                    (this.LandedCurrency == null || o.LandedCurrency.ID == this.LandedCurrency) &&
                    (this.Fabricwidth == null || o.Fabricwidth.Contains(this.Fabricwidth)) &&
                    (this.Unit == null || o.Unit.ID == this.Unit) &&
                    (this.FabricColor == null || o.FabricColor.ID == this.FabricColor) &&
                    (this.IsActive == false || o.IsActive == this.IsActive) &&
                    (this.IsPure == false || o.IsPure == this.IsPure) &&
                    (this.IsLiningFabric == false || o.IsLiningFabric == this.IsLiningFabric) 
                 orderby o.ID
                 select o).Count();
            
        }
        #endregion
        
        #region SearchObjectsLikeOr
        public List<Indico.BusinessObjects.FabricCodeBO> SearchLikeOrObjects()
        {
            return SearchLikeOrObjects(0);
        }
        public List<Indico.BusinessObjects.FabricCodeBO> SearchLikeOrObjects(int maximumRows)
        {
            return SearchLikeOrObjects(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.FabricCodeBO> SearchLikeOrObjects(int maximumRows, int startIndex)
        {
            return SearchLikeOrObjects(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.FabricCodeBO> SearchLikeOrObjects(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            IQueryable<Indico.DAL.FabricCode> oQuery =
                (from o in context.FabricCode
                 where
                    (this.ID == 0 || this.ID == o.ID) && 
                    (this.Supplier == null || this.Supplier == o.Supplier.ID) && 
                    (this.Country == 0 || this.Country == o.Country.ID) && 
                    (this.FabricPrice == null || this.FabricPrice == o.FabricPrice) && 
                    (this.LandedCurrency == null || this.LandedCurrency == o.LandedCurrency.ID) && 
                    (this.Unit == null || this.Unit == o.Unit.ID) && 
                    (this.FabricColor == null || this.FabricColor == o.FabricColor.ID) && 
                    (this.IsActive == false || this.IsActive == o.IsActive) && 
                    (this.IsPure == false || this.IsPure == o.IsPure) && 
                    (this.IsLiningFabric == false || this.IsLiningFabric == o.IsLiningFabric) && 
                    ((o.Code.Contains(this.Code)) ||
                    (o.Name.Contains(this.Name)) ||
                    (o.Material.Contains(this.Material)) ||
                    (o.GSM.Contains(this.GSM)) ||
                    (o.DenierCount.Contains(this.DenierCount)) ||
                    (o.Filaments.Contains(this.Filaments)) ||
                    (o.NickName.Contains(this.NickName)) ||
                    (o.SerialOrder.Contains(this.SerialOrder)) ||
                    (o.Fabricwidth.Contains(this.Fabricwidth)) ||
                    (this.Code == null && this.Name == null && this.Material == null && this.GSM == null && this.DenierCount == null && this.Filaments == null && this.NickName == null && this.SerialOrder == null && this.Fabricwidth == null ))
                 orderby o.ID
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.ID).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.FabricCodeBO> fabriccodes = IQueryableToList(oQuery);
            if (this.Context == null)
            {
                context.Dispose();
            }
            
            return fabriccodes;
        }
        
        public int SearchLikeOrObjectsCount()
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            return (from o in context.FabricCode
                 where
                    (this.ID == 0 || this.ID == o.ID) && 
                    (this.Supplier == null || this.Supplier == o.Supplier.ID) && 
                    (this.Country == 0 || this.Country == o.Country.ID) && 
                    (this.FabricPrice == null || this.FabricPrice == o.FabricPrice) && 
                    (this.LandedCurrency == null || this.LandedCurrency == o.LandedCurrency.ID) && 
                    (this.Unit == null || this.Unit == o.Unit.ID) && 
                    (this.FabricColor == null || this.FabricColor == o.FabricColor.ID) && 
                    (this.IsActive == false || this.IsActive == o.IsActive) && 
                    (this.IsPure == false || this.IsPure == o.IsPure) && 
                    (this.IsLiningFabric == false || this.IsLiningFabric == o.IsLiningFabric) && 
                    ((o.Code.Contains(this.Code)) ||
                    (o.Name.Contains(this.Name)) ||
                    (o.Material.Contains(this.Material)) ||
                    (o.GSM.Contains(this.GSM)) ||
                    (o.DenierCount.Contains(this.DenierCount)) ||
                    (o.Filaments.Contains(this.Filaments)) ||
                    (o.NickName.Contains(this.NickName)) ||
                    (o.SerialOrder.Contains(this.SerialOrder)) ||
                    (o.Fabricwidth.Contains(this.Fabricwidth)) ||
                    (this.Code == null && this.Name == null && this.Material == null && this.GSM == null && this.DenierCount == null && this.Filaments == null && this.NickName == null && this.SerialOrder == null && this.Fabricwidth == null ))
                 orderby o.ID
                 select o).Count();
            
        }
        #endregion
        
        #region Serialization methods
        /// <summary>
        /// Serializes the Indico.BusinessObjects.FabricCodeBO to an XML representation
        /// </summary>
        /// <returns>a XML string serialized representation</returns>
        public string SerializeObject()
        {
            string strReturn = "";

            System.IO.MemoryStream objStream = new System.IO.MemoryStream();

            System.Xml.Serialization.XmlSerializer x = new System.Xml.Serialization.XmlSerializer(this.GetType());

            x.Serialize(objStream, this);

            System.Text.Encoding encoding = System.Text.Encoding.UTF8;
            // Read string from binary file with UTF8 encoding
            strReturn = encoding.GetString(objStream.GetBuffer());

            objStream.Close();
            return strReturn;

        }

        /// <summary>
        /// Deserializes Indico.BusinessObjects.FabricCodeBO object from an XML representation
        /// </summary>
        /// <param name="strXML">a XML string serialized representation</param>
        public Indico.BusinessObjects.FabricCodeBO DeserializeObject(string strXML)
        {
            Indico.BusinessObjects.FabricCodeBO objTemp = null;
            System.Xml.XmlDocument objXML = new System.Xml.XmlDocument();

            objXML.LoadXml(strXML);
            System.Text.Encoding encoding = System.Text.Encoding.UTF8;

            System.IO.MemoryStream objStream = new System.IO.MemoryStream();
            byte[] b = encoding.GetBytes(objXML.OuterXml);

            objStream.Write(b, 0, (int)b.Length);
            objStream.Position = 0;
            System.Xml.Serialization.XmlSerializer x = new System.Xml.Serialization.XmlSerializer(this.GetType());

            objTemp = (Indico.BusinessObjects.FabricCodeBO)x.Deserialize(objStream);
            objStream.Close();
            return objTemp;
        }

        /// <summary>
        /// Returns a simple XML representation of Indico.BusinessObjects.FabricCodeBO object in an XmlElement
        /// </summary>
        /// <returns>An XML snippet representing the object</returns>
        public string ToXmlString()
        {
            // MW TODO - implement this better.
            return SerializeObject();
        }
        #endregion
        
        #region OnPropertyChange Methods
        partial void OnIDChanged()
        {
            OnFabricCodeBOIDChanged();
        }
        
        partial void OnIDChanging(int value)
        {
            if (value < 0)
            {
                throw new Exception(String.Format("FabricCodeBO.ID must be more than or equal to 0. The supplied value was {0}.", value));
            }
            OnFabricCodeBOIDChanging(value);
        }
        partial void OnIDChanged();
        partial void OnIDChanging(int value);
        partial void OnFabricCodeBOIDChanged();
        partial void OnFabricCodeBOIDChanging(int value);
        
        partial void OnCodeChanged()
        {
            OnFabricCodeBOCodeChanged();
        }
        
        partial void OnCodeChanging(string value)
        {
            if (value != null && value.Length > 64)
            {
                throw new Exception(String.Format("FabricCodeBO.Code has a maximum length of 64. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnFabricCodeBOCodeChanging(value);
        }
        partial void OnCodeChanged();
        partial void OnCodeChanging(string value);
        partial void OnFabricCodeBOCodeChanged();
        partial void OnFabricCodeBOCodeChanging(string value);
        
        partial void OnNameChanged()
        {
            OnFabricCodeBONameChanged();
        }
        
        partial void OnNameChanging(string value)
        {
            if (value != null && value.Length > 255)
            {
                throw new Exception(String.Format("FabricCodeBO.Name has a maximum length of 255. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnFabricCodeBONameChanging(value);
        }
        partial void OnNameChanged();
        partial void OnNameChanging(string value);
        partial void OnFabricCodeBONameChanged();
        partial void OnFabricCodeBONameChanging(string value);
        
        partial void OnMaterialChanged()
        {
            OnFabricCodeBOMaterialChanged();
        }
        
        partial void OnMaterialChanging(string value)
        {
            if (value != null && value.Length > 255)
            {
                throw new Exception(String.Format("FabricCodeBO.Material has a maximum length of 255. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnFabricCodeBOMaterialChanging(value);
        }
        partial void OnMaterialChanged();
        partial void OnMaterialChanging(string value);
        partial void OnFabricCodeBOMaterialChanged();
        partial void OnFabricCodeBOMaterialChanging(string value);
        
        partial void OnGSMChanged()
        {
            OnFabricCodeBOGSMChanged();
        }
        
        partial void OnGSMChanging(string value)
        {
            if (value != null && value.Length > 255)
            {
                throw new Exception(String.Format("FabricCodeBO.GSM has a maximum length of 255. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnFabricCodeBOGSMChanging(value);
        }
        partial void OnGSMChanged();
        partial void OnGSMChanging(string value);
        partial void OnFabricCodeBOGSMChanged();
        partial void OnFabricCodeBOGSMChanging(string value);
        
        partial void OnSupplierChanged()
        {
            OnFabricCodeBOSupplierChanged();
        }
        
        partial void OnSupplierChanging(int? value)
        {
            if (value != null && value < 0)
            {
                throw new Exception(String.Format("FabricCodeBO.Supplier must be null or more than or equal to 0. The supplied value was {0}.", value));
            }
            OnFabricCodeBOSupplierChanging(value);
        }
        partial void OnSupplierChanged();
        partial void OnSupplierChanging(int? value);
        partial void OnFabricCodeBOSupplierChanged();
        partial void OnFabricCodeBOSupplierChanging(int? value);
        
        partial void OnCountryChanged()
        {
            OnFabricCodeBOCountryChanged();
        }
        
        partial void OnCountryChanging(int value)
        {
            if (value < 0)
            {
                throw new Exception(String.Format("FabricCodeBO.Country must be more than or equal to 0. The supplied value was {0}.", value));
            }
            OnFabricCodeBOCountryChanging(value);
        }
        partial void OnCountryChanged();
        partial void OnCountryChanging(int value);
        partial void OnFabricCodeBOCountryChanged();
        partial void OnFabricCodeBOCountryChanging(int value);
        
        partial void OnDenierCountChanged()
        {
            OnFabricCodeBODenierCountChanged();
        }
        
        partial void OnDenierCountChanging(string value)
        {
            if (value != null && value.Length > 255)
            {
                throw new Exception(String.Format("FabricCodeBO.DenierCount has a maximum length of 255. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnFabricCodeBODenierCountChanging(value);
        }
        partial void OnDenierCountChanged();
        partial void OnDenierCountChanging(string value);
        partial void OnFabricCodeBODenierCountChanged();
        partial void OnFabricCodeBODenierCountChanging(string value);
        
        partial void OnFilamentsChanged()
        {
            OnFabricCodeBOFilamentsChanged();
        }
        
        partial void OnFilamentsChanging(string value)
        {
            if (value != null && value.Length > 255)
            {
                throw new Exception(String.Format("FabricCodeBO.Filaments has a maximum length of 255. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnFabricCodeBOFilamentsChanging(value);
        }
        partial void OnFilamentsChanged();
        partial void OnFilamentsChanging(string value);
        partial void OnFabricCodeBOFilamentsChanged();
        partial void OnFabricCodeBOFilamentsChanging(string value);
        
        partial void OnNickNameChanged()
        {
            OnFabricCodeBONickNameChanged();
        }
        
        partial void OnNickNameChanging(string value)
        {
            if (value != null && value.Length > 255)
            {
                throw new Exception(String.Format("FabricCodeBO.NickName has a maximum length of 255. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnFabricCodeBONickNameChanging(value);
        }
        partial void OnNickNameChanged();
        partial void OnNickNameChanging(string value);
        partial void OnFabricCodeBONickNameChanged();
        partial void OnFabricCodeBONickNameChanging(string value);
        
        partial void OnSerialOrderChanged()
        {
            OnFabricCodeBOSerialOrderChanged();
        }
        
        partial void OnSerialOrderChanging(string value)
        {
            if (value != null && value.Length > 32)
            {
                throw new Exception(String.Format("FabricCodeBO.SerialOrder has a maximum length of 32. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnFabricCodeBOSerialOrderChanging(value);
        }
        partial void OnSerialOrderChanged();
        partial void OnSerialOrderChanging(string value);
        partial void OnFabricCodeBOSerialOrderChanged();
        partial void OnFabricCodeBOSerialOrderChanging(string value);
        
        partial void OnFabricPriceChanged()
        {
            OnFabricCodeBOFabricPriceChanged();
        }
        
        partial void OnFabricPriceChanging(decimal? value)
        {
            OnFabricCodeBOFabricPriceChanging(value);
        }
        partial void OnFabricPriceChanged();
        partial void OnFabricPriceChanging(decimal? value);
        partial void OnFabricCodeBOFabricPriceChanged();
        partial void OnFabricCodeBOFabricPriceChanging(decimal? value);
        
        partial void OnLandedCurrencyChanged()
        {
            OnFabricCodeBOLandedCurrencyChanged();
        }
        
        partial void OnLandedCurrencyChanging(int? value)
        {
            if (value != null && value < 0)
            {
                throw new Exception(String.Format("FabricCodeBO.LandedCurrency must be null or more than or equal to 0. The supplied value was {0}.", value));
            }
            OnFabricCodeBOLandedCurrencyChanging(value);
        }
        partial void OnLandedCurrencyChanged();
        partial void OnLandedCurrencyChanging(int? value);
        partial void OnFabricCodeBOLandedCurrencyChanged();
        partial void OnFabricCodeBOLandedCurrencyChanging(int? value);
        
        partial void OnFabricwidthChanged()
        {
            OnFabricCodeBOFabricwidthChanged();
        }
        
        partial void OnFabricwidthChanging(string value)
        {
            if (value != null && value.Length > 255)
            {
                throw new Exception(String.Format("FabricCodeBO.Fabricwidth has a maximum length of 255. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnFabricCodeBOFabricwidthChanging(value);
        }
        partial void OnFabricwidthChanged();
        partial void OnFabricwidthChanging(string value);
        partial void OnFabricCodeBOFabricwidthChanged();
        partial void OnFabricCodeBOFabricwidthChanging(string value);
        
        partial void OnUnitChanged()
        {
            OnFabricCodeBOUnitChanged();
        }
        
        partial void OnUnitChanging(int? value)
        {
            if (value != null && value < 0)
            {
                throw new Exception(String.Format("FabricCodeBO.Unit must be null or more than or equal to 0. The supplied value was {0}.", value));
            }
            OnFabricCodeBOUnitChanging(value);
        }
        partial void OnUnitChanged();
        partial void OnUnitChanging(int? value);
        partial void OnFabricCodeBOUnitChanged();
        partial void OnFabricCodeBOUnitChanging(int? value);
        
        partial void OnFabricColorChanged()
        {
            OnFabricCodeBOFabricColorChanged();
        }
        
        partial void OnFabricColorChanging(int? value)
        {
            if (value != null && value < 0)
            {
                throw new Exception(String.Format("FabricCodeBO.FabricColor must be null or more than or equal to 0. The supplied value was {0}.", value));
            }
            OnFabricCodeBOFabricColorChanging(value);
        }
        partial void OnFabricColorChanged();
        partial void OnFabricColorChanging(int? value);
        partial void OnFabricCodeBOFabricColorChanged();
        partial void OnFabricCodeBOFabricColorChanging(int? value);
        
        partial void OnIsActiveChanged()
        {
            OnFabricCodeBOIsActiveChanged();
        }
        
        partial void OnIsActiveChanging(bool value)
        {
            OnFabricCodeBOIsActiveChanging(value);
        }
        partial void OnIsActiveChanged();
        partial void OnIsActiveChanging(bool value);
        partial void OnFabricCodeBOIsActiveChanged();
        partial void OnFabricCodeBOIsActiveChanging(bool value);
        
        partial void OnIsPureChanged()
        {
            OnFabricCodeBOIsPureChanged();
        }
        
        partial void OnIsPureChanging(bool value)
        {
            OnFabricCodeBOIsPureChanging(value);
        }
        partial void OnIsPureChanged();
        partial void OnIsPureChanging(bool value);
        partial void OnFabricCodeBOIsPureChanged();
        partial void OnFabricCodeBOIsPureChanging(bool value);
        
        partial void OnIsLiningFabricChanged()
        {
            OnFabricCodeBOIsLiningFabricChanged();
        }
        
        partial void OnIsLiningFabricChanging(bool value)
        {
            OnFabricCodeBOIsLiningFabricChanging(value);
        }
        partial void OnIsLiningFabricChanged();
        partial void OnIsLiningFabricChanging(bool value);
        partial void OnFabricCodeBOIsLiningFabricChanged();
        partial void OnFabricCodeBOIsLiningFabricChanging(bool value);
        
        #endregion
        
        #region IComparable Members

        public int CompareTo(object obj)
        {
            if (!(obj is Indico.BusinessObjects.FabricCodeBO))
                return 1;
            Indico.BusinessObjects.FabricCodeBOComparer c = new Indico.BusinessObjects.FabricCodeBOComparer();
            return c.Compare(this, obj as Indico.BusinessObjects.FabricCodeBO);
        }

        #endregion
        #endregion
        
        #region Events
        
        void obj_PropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e)
        {
            if (e.PropertyName == "ID")
            {
                // reload me
                this.SetBO((Indico.DAL.FabricCode)sender);
            }
        }
        
        void ArtWorksWhereThisIsFabricCodeList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.ArtWork obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.ArtWorkBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.ArtWorkBO>)sender)[((IndicoList<Indico.BusinessObjects.ArtWorkBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.ArtWorksWhereThisIsFabricCode.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.ArtWorkBO>)sender)[((IndicoList<Indico.BusinessObjects.ArtWorkBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.ArtWorksWhereThisIsFabricCode.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void ArtWorksWhereThisIsFabricCodeList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.ArtWork obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.ArtWorkBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.ArtWorkBO>)sender)[((IndicoList<Indico.BusinessObjects.ArtWorkBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.ArtWorksWhereThisIsFabricCode.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.ArtWorkBO>)sender)[((IndicoList<Indico.BusinessObjects.ArtWorkBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.ArtWorksWhereThisIsFabricCode.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CostSheetsWhereThisIsFabricList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.CostSheet obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CostSheetsWhereThisIsFabric.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CostSheetsWhereThisIsFabric.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CostSheetsWhereThisIsFabricList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.CostSheet obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CostSheetsWhereThisIsFabric.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CostSheetsWhereThisIsFabric.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void OrderDetailsWhereThisIsFabricCodeList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.OrderDetail obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender)[((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.OrderDetailsWhereThisIsFabricCode.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender)[((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.OrderDetailsWhereThisIsFabricCode.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void OrderDetailsWhereThisIsFabricCodeList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.OrderDetail obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender)[((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.OrderDetailsWhereThisIsFabricCode.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender)[((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.OrderDetailsWhereThisIsFabricCode.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PatternSupportFabricsWhereThisIsFabricList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.PatternSupportFabric obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PatternSupportFabricBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PatternSupportFabricBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternSupportFabricBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PatternSupportFabricsWhereThisIsFabric.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PatternSupportFabricBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternSupportFabricBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PatternSupportFabricsWhereThisIsFabric.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PatternSupportFabricsWhereThisIsFabricList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.PatternSupportFabric obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PatternSupportFabricBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PatternSupportFabricBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternSupportFabricBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PatternSupportFabricsWhereThisIsFabric.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PatternSupportFabricBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternSupportFabricBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PatternSupportFabricsWhereThisIsFabric.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PricesWhereThisIsFabricCodeList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Price obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PriceBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PriceBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PricesWhereThisIsFabricCode.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PriceBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PricesWhereThisIsFabricCode.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PricesWhereThisIsFabricCodeList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Price obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PriceBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PriceBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PricesWhereThisIsFabricCode.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PriceBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PricesWhereThisIsFabricCode.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void QuoteDetailsWhereThisIsFabricList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.QuoteDetail obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.QuoteDetailsWhereThisIsFabric.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.QuoteDetailsWhereThisIsFabric.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void QuoteDetailsWhereThisIsFabricList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.QuoteDetail obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.QuoteDetailsWhereThisIsFabric.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.QuoteDetailsWhereThisIsFabric.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void VisualLayoutsWhereThisIsFabricCodeList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.VisualLayout obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.VisualLayoutBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.VisualLayoutBO>)sender)[((IndicoList<Indico.BusinessObjects.VisualLayoutBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.VisualLayoutsWhereThisIsFabricCode.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.VisualLayoutBO>)sender)[((IndicoList<Indico.BusinessObjects.VisualLayoutBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.VisualLayoutsWhereThisIsFabricCode.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void VisualLayoutsWhereThisIsFabricCodeList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.VisualLayout obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.VisualLayoutBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.VisualLayoutBO>)sender)[((IndicoList<Indico.BusinessObjects.VisualLayoutBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.VisualLayoutsWhereThisIsFabricCode.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.VisualLayoutBO>)sender)[((IndicoList<Indico.BusinessObjects.VisualLayoutBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.VisualLayoutsWhereThisIsFabricCode.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void VisualLayoutFabricsWhereThisIsFabricList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.VisualLayoutFabric obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender)[((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.VisualLayoutFabricsWhereThisIsFabric.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender)[((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.VisualLayoutFabricsWhereThisIsFabric.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void VisualLayoutFabricsWhereThisIsFabricList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.VisualLayoutFabric obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender)[((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.VisualLayoutFabricsWhereThisIsFabric.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender)[((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.VisualLayoutFabricsWhereThisIsFabric.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void Context_OnSendBeforeChanges(object sender, EventArgs e)
        {        
            this._artWorksWhereThisIsFabricCodeLoaded = false;
            if (this.artWorksWhereThisIsFabricCodeList != null)
            {
                this.artWorksWhereThisIsFabricCodeList.OnBeforeRemove -= new EventHandler(ArtWorksWhereThisIsFabricCodeList_OnBeforeRemove);
                this.artWorksWhereThisIsFabricCodeList.OnAfterAdd -= new EventHandler(ArtWorksWhereThisIsFabricCodeList_OnAfterAdd);
            }
            this._costSheetsWhereThisIsFabricLoaded = false;
            if (this.costSheetsWhereThisIsFabricList != null)
            {
                this.costSheetsWhereThisIsFabricList.OnBeforeRemove -= new EventHandler(CostSheetsWhereThisIsFabricList_OnBeforeRemove);
                this.costSheetsWhereThisIsFabricList.OnAfterAdd -= new EventHandler(CostSheetsWhereThisIsFabricList_OnAfterAdd);
            }
            this._orderDetailsWhereThisIsFabricCodeLoaded = false;
            if (this.orderDetailsWhereThisIsFabricCodeList != null)
            {
                this.orderDetailsWhereThisIsFabricCodeList.OnBeforeRemove -= new EventHandler(OrderDetailsWhereThisIsFabricCodeList_OnBeforeRemove);
                this.orderDetailsWhereThisIsFabricCodeList.OnAfterAdd -= new EventHandler(OrderDetailsWhereThisIsFabricCodeList_OnAfterAdd);
            }
            this._patternSupportFabricsWhereThisIsFabricLoaded = false;
            if (this.patternSupportFabricsWhereThisIsFabricList != null)
            {
                this.patternSupportFabricsWhereThisIsFabricList.OnBeforeRemove -= new EventHandler(PatternSupportFabricsWhereThisIsFabricList_OnBeforeRemove);
                this.patternSupportFabricsWhereThisIsFabricList.OnAfterAdd -= new EventHandler(PatternSupportFabricsWhereThisIsFabricList_OnAfterAdd);
            }
            this._pricesWhereThisIsFabricCodeLoaded = false;
            if (this.pricesWhereThisIsFabricCodeList != null)
            {
                this.pricesWhereThisIsFabricCodeList.OnBeforeRemove -= new EventHandler(PricesWhereThisIsFabricCodeList_OnBeforeRemove);
                this.pricesWhereThisIsFabricCodeList.OnAfterAdd -= new EventHandler(PricesWhereThisIsFabricCodeList_OnAfterAdd);
            }
            this._quoteDetailsWhereThisIsFabricLoaded = false;
            if (this.quoteDetailsWhereThisIsFabricList != null)
            {
                this.quoteDetailsWhereThisIsFabricList.OnBeforeRemove -= new EventHandler(QuoteDetailsWhereThisIsFabricList_OnBeforeRemove);
                this.quoteDetailsWhereThisIsFabricList.OnAfterAdd -= new EventHandler(QuoteDetailsWhereThisIsFabricList_OnAfterAdd);
            }
            this._visualLayoutsWhereThisIsFabricCodeLoaded = false;
            if (this.visualLayoutsWhereThisIsFabricCodeList != null)
            {
                this.visualLayoutsWhereThisIsFabricCodeList.OnBeforeRemove -= new EventHandler(VisualLayoutsWhereThisIsFabricCodeList_OnBeforeRemove);
                this.visualLayoutsWhereThisIsFabricCodeList.OnAfterAdd -= new EventHandler(VisualLayoutsWhereThisIsFabricCodeList_OnAfterAdd);
            }
            this._visualLayoutFabricsWhereThisIsFabricLoaded = false;
            if (this.visualLayoutFabricsWhereThisIsFabricList != null)
            {
                this.visualLayoutFabricsWhereThisIsFabricList.OnBeforeRemove -= new EventHandler(VisualLayoutFabricsWhereThisIsFabricList_OnBeforeRemove);
                this.visualLayoutFabricsWhereThisIsFabricList.OnAfterAdd -= new EventHandler(VisualLayoutFabricsWhereThisIsFabricList_OnAfterAdd);
            }
        }
        
        void Context_OnSendAfterChanges(object sender, EventArgs e)
        {   
            if (this.ID > 0)
            {
                this.Cache();
            }
        }

        #endregion
    }
    
    #region FabricCodeBOComparer
    public class FabricCodeBOComparer : IComparer<Indico.BusinessObjects.FabricCodeBO>
    {
        private string propertyToCompareName;
        public FabricCodeBOComparer(string propertyToCompare)
        {
            PropertyInfo p = typeof(Indico.BusinessObjects.FabricCodeBO).GetProperty(propertyToCompare);
            if (p == null)
                throw new ArgumentException("is not a public property of Indico.BusinessObjects.FabricCodeBO", "propertyToCompare");
            this.propertyToCompareName = propertyToCompare;
        }
        
        public FabricCodeBOComparer()
        {
        
        }

        #region IComparer<Indico.BusinessObjects.FabricCodeBO> Members
        public int Compare(Indico.BusinessObjects.FabricCodeBO x, Indico.BusinessObjects.FabricCodeBO y)
        {
            if (propertyToCompareName != null)
            {
                PropertyInfo p = typeof(Indico.BusinessObjects.FabricCodeBO).GetProperty(propertyToCompareName);
                return compare(p, x, y);
            }
            else
            {
                PropertyInfo[] arrP = typeof(Indico.BusinessObjects.FabricCodeBO).GetProperties();
                foreach (PropertyInfo p in arrP)
                {
                    int v = compare(p, x, y);
                    if (v != 0)
                        return v;
                }
                return 0;
            }
        }

        private int compare(PropertyInfo p, Indico.BusinessObjects.FabricCodeBO x, Indico.BusinessObjects.FabricCodeBO y)
        {
            object xVal = p.GetValue(x, null);
            object yVal = p.GetValue(y, null);

            if (xVal == null)
            {
                if (yVal == null)
                    return 0;
                else
                    return -1; // x is null, y is not, y is greater
            }
            else
            {
                if (y == null)
                    return 1; // x non null, y is null, x is greater
                else if (xVal is string)
                {
                    return StringComparer.OrdinalIgnoreCase.Compare(xVal, yVal);
                }
                else if (xVal is IComparable)
                {
                    return ((IComparable)xVal).CompareTo((IComparable)yVal);
                }
                else
                    throw new ArgumentException
                        ("is not string or valuetype that implements IComparable", "propertyToCompare");

            }
        }

        #endregion
    }
    #endregion
}
