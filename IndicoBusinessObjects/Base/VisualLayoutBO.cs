// This file is generated by CodeSmith. Do not edit. All edits to this file will be lost. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Dynamic;
using System.Linq.Expressions;
using System.Reflection;
using System.Xml.Serialization;

using Indico.DAL;

//namespace Indico.BusinessObjects
namespace Indico.BusinessObjects
{
    /// <summary>
    /// 
    /// </summary>
    public partial class VisualLayoutBO : BusinessObject, IComparable
    {
        #region fields
        #region Scalar Fields
        private int id;
        private int? _artWork;
        private bool _bySizeArtWork;
        private int? _client;
        private DateTime? _createdDate;
        private string _description;
        private int? _fabricCode;
        private bool? _isCommonProduct;
        private bool _isGenerated;
        private string _namePrefix = string.Empty;
        private int? _nameSuffix;
        private string _nNPFilePath;
        private int _pattern;
        private int? _pocketType;
        private int? _printer;
        private int? _resolutionProfile;
        private string _where;
        #endregion
        
        #region Foreign Key fields
        [NonSerialized][XmlIgnoreAttribute]
        private Indico.BusinessObjects.ArtWorkBO _objArtWork;
        [NonSerialized][XmlIgnoreAttribute]
        private Indico.BusinessObjects.JobNameBO _objClient;
        [NonSerialized][XmlIgnoreAttribute]
        private Indico.BusinessObjects.FabricCodeBO _objFabricCode;
        [NonSerialized][XmlIgnoreAttribute]
        private Indico.BusinessObjects.PatternBO _objPattern;
        [NonSerialized][XmlIgnoreAttribute]
        private Indico.BusinessObjects.PocketTypeBO _objPocketType;
        [NonSerialized][XmlIgnoreAttribute]
        private Indico.BusinessObjects.PrinterBO _objPrinter;
        [NonSerialized][XmlIgnoreAttribute]
        private Indico.BusinessObjects.ResolutionProfileBO _objResolutionProfile;
        #endregion
        
        #region Foreign Table Foreign Key fields
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.ImageBO> imagesWhereThisIsVisualLayoutList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _imagesWhereThisIsVisualLayoutLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.OrderDetailBO> orderDetailsWhereThisIsVisualLayoutList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _orderDetailsWhereThisIsVisualLayoutLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.QuoteDetailBO> quoteDetailsWhereThisIsVisualLayoutList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _quoteDetailsWhereThisIsVisualLayoutLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.VisualLayoutAccessoryBO> visualLayoutAccessorysWhereThisIsVisualLayoutList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _visualLayoutAccessorysWhereThisIsVisualLayoutLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO> visualLayoutFabricsWhereThisIsVisualLayoutList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _visualLayoutFabricsWhereThisIsVisualLayoutLoaded;
        #endregion
        
        #region Other fields
        
        private Indico.DAL.VisualLayout _objDAL = null;
        private bool _doNotUpdateDALObject = false;
        
        #endregion
        
        #endregion
        
        #region Properties
        /// <summary>The Primary Key for this object</summary>
        public int ID
        {   get {return id;}
            set 
            {
                OnIDChanging(value);
                id = value;
                OnIDChanged();
            }
        }
        
        /// <summary>.</summary>
        public int? ArtWork
        {   
            get {return _artWork;}
            set 
            {
                OnArtWorkChanging(value);
                _artWork = value;
                if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (value != null) && ((int)value != 0))
                {
                    this.ObjDAL.ArtWork = (from o in this._context.Context.ArtWork
                                           where o.ID == (int)value
                                           select o).ToList<Indico.DAL.ArtWork>()[0];
                }
                else if (value == null || !this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (int)value == 0)
                    this.ObjDAL.ArtWork = null;
                OnArtWorkChanged();
            }
        }
        /// <summary>.</summary>
        public bool BySizeArtWork
        {   
            get {return _bySizeArtWork;}
            set 
            {
                OnBySizeArtWorkChanging(value);
                _bySizeArtWork = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.BySizeArtWork = value;
                }
                OnBySizeArtWorkChanged();
            }
        }
        /// <summary>The Client associated with this VL Number.</summary>
        public int? Client
        {   
            get {return _client;}
            set 
            {
                OnClientChanging(value);
                _client = value;
                if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (value != null) && ((int)value != 0))
                {
                    this.ObjDAL.Client = (from o in this._context.Context.JobName
                                           where o.ID == (int)value
                                           select o).ToList<Indico.DAL.JobName>()[0];
                }
                else if (value == null || !this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (int)value == 0)
                    this.ObjDAL.Client = null;
                OnClientChanged();
            }
        }
        /// <summary>.</summary>
        public DateTime? CreatedDate
        {   
            get {return _createdDate;}
            set 
            {
                OnCreatedDateChanging(value);
                _createdDate = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.CreatedDate = value;
                }
                OnCreatedDateChanged();
            }
        }
        /// <summary>The description of the payment type. The maximum length of this property is 512.</summary>
        public string Description
        {   
            get {return _description;}
            set 
            {
                OnDescriptionChanging(value);
                _description = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.Description = value;
                }
                OnDescriptionChanged();
            }
        }
        /// <summary>The Fabric code associated with this VL Number.</summary>
        public int? FabricCode
        {   
            get {return _fabricCode;}
            set 
            {
                OnFabricCodeChanging(value);
                _fabricCode = value;
                if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (value != null) && ((int)value != 0))
                {
                    this.ObjDAL.FabricCode = (from o in this._context.Context.FabricCode
                                           where o.ID == (int)value
                                           select o).ToList<Indico.DAL.FabricCode>()[0];
                }
                else if (value == null || !this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (int)value == 0)
                    this.ObjDAL.FabricCode = null;
                OnFabricCodeChanged();
            }
        }
        /// <summary>.</summary>
        public bool? IsCommonProduct
        {   
            get {return _isCommonProduct;}
            set 
            {
                OnIsCommonProductChanging(value);
                _isCommonProduct = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.IsCommonProduct = value;
                }
                OnIsCommonProductChanged();
            }
        }
        /// <summary>.</summary>
        public bool IsGenerated
        {   
            get {return _isGenerated;}
            set 
            {
                OnIsGeneratedChanging(value);
                _isGenerated = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.IsGenerated = value;
                }
                OnIsGeneratedChanged();
            }
        }
        /// <summary>The name of the payment type. The maximum length of this property is 64.</summary>
        public string NamePrefix
        {   
            get {return _namePrefix;}
            set 
            {
                OnNamePrefixChanging(value);
                _namePrefix = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.NamePrefix = value;
                }
                OnNamePrefixChanged();
            }
        }
        /// <summary>.</summary>
        public int? NameSuffix
        {   
            get {return _nameSuffix;}
            set 
            {
                OnNameSuffixChanging(value);
                _nameSuffix = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.NameSuffix = value;
                }
                OnNameSuffixChanged();
            }
        }
        /// <summary>The names and numbers. The maximum length of this property is 512.</summary>
        public string NNPFilePath
        {   
            get {return _nNPFilePath;}
            set 
            {
                OnNNPFilePathChanging(value);
                _nNPFilePath = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.NNPFilePath = value;
                }
                OnNNPFilePathChanged();
            }
        }
        /// <summary>The Pattern associated with this VL Number.</summary>
        public int Pattern
        {   
            get {return _pattern;}
            set 
            {
                OnPatternChanging(value);
                _pattern = value;
                if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && ((int)value != 0))
                {
                    this.ObjDAL.Pattern = (from o in this._context.Context.Pattern
                                           where o.ID == (int)value
                                           select o).ToList<Indico.DAL.Pattern>()[0];
                }
                else if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (int)value == 0)
                    this.ObjDAL.Pattern = null;
                OnPatternChanged();
            }
        }
        /// <summary>.</summary>
        public int? PocketType
        {   
            get {return _pocketType;}
            set 
            {
                OnPocketTypeChanging(value);
                _pocketType = value;
                if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (value != null) && ((int)value != 0))
                {
                    this.ObjDAL.PocketType = (from o in this._context.Context.PocketType
                                           where o.ID == (int)value
                                           select o).ToList<Indico.DAL.PocketType>()[0];
                }
                else if (value == null || !this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (int)value == 0)
                    this.ObjDAL.PocketType = null;
                OnPocketTypeChanged();
            }
        }
        /// <summary>.</summary>
        public int? Printer
        {   
            get {return _printer;}
            set 
            {
                OnPrinterChanging(value);
                _printer = value;
                if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (value != null) && ((int)value != 0))
                {
                    this.ObjDAL.Printer = (from o in this._context.Context.Printer
                                           where o.ID == (int)value
                                           select o).ToList<Indico.DAL.Printer>()[0];
                }
                else if (value == null || !this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (int)value == 0)
                    this.ObjDAL.Printer = null;
                OnPrinterChanged();
            }
        }
        /// <summary>.</summary>
        public int? ResolutionProfile
        {   
            get {return _resolutionProfile;}
            set 
            {
                OnResolutionProfileChanging(value);
                _resolutionProfile = value;
                if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (value != null) && ((int)value != 0))
                {
                    this.ObjDAL.ResolutionProfile = (from o in this._context.Context.ResolutionProfile
                                           where o.ID == (int)value
                                           select o).ToList<Indico.DAL.ResolutionProfile>()[0];
                }
                else if (value == null || !this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (int)value == 0)
                    this.ObjDAL.ResolutionProfile = null;
                OnResolutionProfileChanged();
            }
        }
        /// <summary>. The maximum length of this property is 128.</summary>
        public string Where
        {   
            get {return _where;}
            set 
            {
                OnWhereChanging(value);
                _where = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.Where = value;
                }
                OnWhereChanged();
            }
        }
        
        internal Indico.DAL.VisualLayout ObjDAL
        {
            get 
            {
                if (_objDAL == null && base._createDAL)
                {
                    _objDAL = this.SetDAL(this.Context.Context);
                    this.ObjDAL.PropertyChanged += new System.ComponentModel.PropertyChangedEventHandler(obj_PropertyChanged);
                }

                return _objDAL;
            }
            set 
            {
                _objDAL = value;
            }
        }
        
        #endregion
        
        #region Non-scalar Properties
        
        #region Foreign Key Objects
        ///<summary>The ArtWorkBO object identified by the value of ArtWork</summary>
        [XmlIgnoreAttribute]
        public Indico.BusinessObjects.ArtWorkBO objArtWork
        {
            get
            {
                if (_artWork != null && _artWork > 0 && _objArtWork == null)
                {
                        if (this._context == null)
                        {
                            _objArtWork = new Indico.BusinessObjects.ArtWorkBO();
                        }
                        else
                        {
                            _objArtWork = new Indico.BusinessObjects.ArtWorkBO(ref this._context);
                        }
                        _objArtWork.ID = Convert.ToInt32(_artWork);
                        _objArtWork.GetObject(); 
                }
                return _objArtWork;
            }
            set
            { 
                _objArtWork = value;
                _artWork = _objArtWork.ID;
            }
        }
        ///<summary>The JobNameBO object identified by the value of Client</summary>
        [XmlIgnoreAttribute]
        public Indico.BusinessObjects.JobNameBO objClient
        {
            get
            {
                if (_client != null && _client > 0 && _objClient == null)
                {
                        if (this._context == null)
                        {
                            _objClient = new Indico.BusinessObjects.JobNameBO();
                        }
                        else
                        {
                            _objClient = new Indico.BusinessObjects.JobNameBO(ref this._context);
                        }
                        _objClient.ID = Convert.ToInt32(_client);
                        _objClient.GetObject(); 
                }
                return _objClient;
            }
            set
            { 
                _objClient = value;
                _client = _objClient.ID;
            }
        }
        ///<summary>The FabricCodeBO object identified by the value of FabricCode</summary>
        [XmlIgnoreAttribute]
        public Indico.BusinessObjects.FabricCodeBO objFabricCode
        {
            get
            {
                if (_fabricCode != null && _fabricCode > 0 && _objFabricCode == null)
                {
                        if (this._context == null)
                        {
                            _objFabricCode = new Indico.BusinessObjects.FabricCodeBO();
                        }
                        else
                        {
                            _objFabricCode = new Indico.BusinessObjects.FabricCodeBO(ref this._context);
                        }
                        _objFabricCode.ID = Convert.ToInt32(_fabricCode);
                        _objFabricCode.GetObject(); 
                }
                return _objFabricCode;
            }
            set
            { 
                _objFabricCode = value;
                _fabricCode = _objFabricCode.ID;
            }
        }
        ///<summary>The PatternBO object identified by the value of Pattern</summary>
        [XmlIgnoreAttribute]
        public Indico.BusinessObjects.PatternBO objPattern
        {
            get
            {
                if ( _pattern > 0 && _objPattern == null)
                {
                        if (this._context == null)
                        {
                            _objPattern = new Indico.BusinessObjects.PatternBO();
                        }
                        else
                        {
                            _objPattern = new Indico.BusinessObjects.PatternBO(ref this._context);
                        }
                        _objPattern.ID = _pattern;
                        _objPattern.GetObject(); 
                }
                return _objPattern;
            }
            set
            { 
                _objPattern = value;
                _pattern = _objPattern.ID;
            }
        }
        ///<summary>The PocketTypeBO object identified by the value of PocketType</summary>
        [XmlIgnoreAttribute]
        public Indico.BusinessObjects.PocketTypeBO objPocketType
        {
            get
            {
                if (_pocketType != null && _pocketType > 0 && _objPocketType == null)
                {
                        if (this._context == null)
                        {
                            _objPocketType = new Indico.BusinessObjects.PocketTypeBO();
                        }
                        else
                        {
                            _objPocketType = new Indico.BusinessObjects.PocketTypeBO(ref this._context);
                        }
                        _objPocketType.ID = Convert.ToInt32(_pocketType);
                        _objPocketType.GetObject(); 
                }
                return _objPocketType;
            }
            set
            { 
                _objPocketType = value;
                _pocketType = _objPocketType.ID;
            }
        }
        ///<summary>The PrinterBO object identified by the value of Printer</summary>
        [XmlIgnoreAttribute]
        public Indico.BusinessObjects.PrinterBO objPrinter
        {
            get
            {
                if (_printer != null && _printer > 0 && _objPrinter == null)
                {
                        if (this._context == null)
                        {
                            _objPrinter = new Indico.BusinessObjects.PrinterBO();
                        }
                        else
                        {
                            _objPrinter = new Indico.BusinessObjects.PrinterBO(ref this._context);
                        }
                        _objPrinter.ID = Convert.ToInt32(_printer);
                        _objPrinter.GetObject(); 
                }
                return _objPrinter;
            }
            set
            { 
                _objPrinter = value;
                _printer = _objPrinter.ID;
            }
        }
        ///<summary>The ResolutionProfileBO object identified by the value of ResolutionProfile</summary>
        [XmlIgnoreAttribute]
        public Indico.BusinessObjects.ResolutionProfileBO objResolutionProfile
        {
            get
            {
                if (_resolutionProfile != null && _resolutionProfile > 0 && _objResolutionProfile == null)
                {
                        if (this._context == null)
                        {
                            _objResolutionProfile = new Indico.BusinessObjects.ResolutionProfileBO();
                        }
                        else
                        {
                            _objResolutionProfile = new Indico.BusinessObjects.ResolutionProfileBO(ref this._context);
                        }
                        _objResolutionProfile.ID = Convert.ToInt32(_resolutionProfile);
                        _objResolutionProfile.GetObject(); 
                }
                return _objResolutionProfile;
            }
            set
            { 
                _objResolutionProfile = value;
                _resolutionProfile = _objResolutionProfile.ID;
            }
        }
        #endregion
        
        #region Foreign Object Foreign Key Collections
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.ImageBO> ImagesWhereThisIsVisualLayout // FK_Image_VisualLayout
        {
            get
            {
                if (!_imagesWhereThisIsVisualLayoutLoaded)
                {
                    _imagesWhereThisIsVisualLayoutLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.VisualLayout obj = (from o in context.VisualLayout
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.ImagesWhereThisIsVisualLayout.Load();
                        imagesWhereThisIsVisualLayoutList = new IndicoList<Indico.BusinessObjects.ImageBO>(obj.ImagesWhereThisIsVisualLayout.Count);
                        
                        foreach (Indico.DAL.Image o in obj.ImagesWhereThisIsVisualLayout)
                        {
                            Indico.BusinessObjects.ImageBO fkObj = new Indico.BusinessObjects.ImageBO(o, ref this._context);
                            imagesWhereThisIsVisualLayoutList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        imagesWhereThisIsVisualLayoutList = new IndicoList<Indico.BusinessObjects.ImageBO>();
                    }
                    
                    imagesWhereThisIsVisualLayoutList.OnBeforeRemove += new EventHandler(ImagesWhereThisIsVisualLayoutList_OnBeforeRemove);
                    imagesWhereThisIsVisualLayoutList.OnAfterAdd += new EventHandler(ImagesWhereThisIsVisualLayoutList_OnAfterAdd);
                }
                
                return imagesWhereThisIsVisualLayoutList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.OrderDetailBO> OrderDetailsWhereThisIsVisualLayout // FK_OrderDetail_VisualLayout
        {
            get
            {
                if (!_orderDetailsWhereThisIsVisualLayoutLoaded)
                {
                    _orderDetailsWhereThisIsVisualLayoutLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.VisualLayout obj = (from o in context.VisualLayout
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.OrderDetailsWhereThisIsVisualLayout.Load();
                        orderDetailsWhereThisIsVisualLayoutList = new IndicoList<Indico.BusinessObjects.OrderDetailBO>(obj.OrderDetailsWhereThisIsVisualLayout.Count);
                        
                        foreach (Indico.DAL.OrderDetail o in obj.OrderDetailsWhereThisIsVisualLayout)
                        {
                            Indico.BusinessObjects.OrderDetailBO fkObj = new Indico.BusinessObjects.OrderDetailBO(o, ref this._context);
                            orderDetailsWhereThisIsVisualLayoutList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        orderDetailsWhereThisIsVisualLayoutList = new IndicoList<Indico.BusinessObjects.OrderDetailBO>();
                    }
                    
                    orderDetailsWhereThisIsVisualLayoutList.OnBeforeRemove += new EventHandler(OrderDetailsWhereThisIsVisualLayoutList_OnBeforeRemove);
                    orderDetailsWhereThisIsVisualLayoutList.OnAfterAdd += new EventHandler(OrderDetailsWhereThisIsVisualLayoutList_OnAfterAdd);
                }
                
                return orderDetailsWhereThisIsVisualLayoutList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.QuoteDetailBO> QuoteDetailsWhereThisIsVisualLayout // FK_QuoteDetail_VisualLayout
        {
            get
            {
                if (!_quoteDetailsWhereThisIsVisualLayoutLoaded)
                {
                    _quoteDetailsWhereThisIsVisualLayoutLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.VisualLayout obj = (from o in context.VisualLayout
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.QuoteDetailsWhereThisIsVisualLayout.Load();
                        quoteDetailsWhereThisIsVisualLayoutList = new IndicoList<Indico.BusinessObjects.QuoteDetailBO>(obj.QuoteDetailsWhereThisIsVisualLayout.Count);
                        
                        foreach (Indico.DAL.QuoteDetail o in obj.QuoteDetailsWhereThisIsVisualLayout)
                        {
                            Indico.BusinessObjects.QuoteDetailBO fkObj = new Indico.BusinessObjects.QuoteDetailBO(o, ref this._context);
                            quoteDetailsWhereThisIsVisualLayoutList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        quoteDetailsWhereThisIsVisualLayoutList = new IndicoList<Indico.BusinessObjects.QuoteDetailBO>();
                    }
                    
                    quoteDetailsWhereThisIsVisualLayoutList.OnBeforeRemove += new EventHandler(QuoteDetailsWhereThisIsVisualLayoutList_OnBeforeRemove);
                    quoteDetailsWhereThisIsVisualLayoutList.OnAfterAdd += new EventHandler(QuoteDetailsWhereThisIsVisualLayoutList_OnAfterAdd);
                }
                
                return quoteDetailsWhereThisIsVisualLayoutList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.VisualLayoutAccessoryBO> VisualLayoutAccessorysWhereThisIsVisualLayout // FK_VisualLayoutAccessory_VisualLayout
        {
            get
            {
                if (!_visualLayoutAccessorysWhereThisIsVisualLayoutLoaded)
                {
                    _visualLayoutAccessorysWhereThisIsVisualLayoutLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.VisualLayout obj = (from o in context.VisualLayout
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.VisualLayoutAccessorysWhereThisIsVisualLayout.Load();
                        visualLayoutAccessorysWhereThisIsVisualLayoutList = new IndicoList<Indico.BusinessObjects.VisualLayoutAccessoryBO>(obj.VisualLayoutAccessorysWhereThisIsVisualLayout.Count);
                        
                        foreach (Indico.DAL.VisualLayoutAccessory o in obj.VisualLayoutAccessorysWhereThisIsVisualLayout)
                        {
                            Indico.BusinessObjects.VisualLayoutAccessoryBO fkObj = new Indico.BusinessObjects.VisualLayoutAccessoryBO(o, ref this._context);
                            visualLayoutAccessorysWhereThisIsVisualLayoutList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        visualLayoutAccessorysWhereThisIsVisualLayoutList = new IndicoList<Indico.BusinessObjects.VisualLayoutAccessoryBO>();
                    }
                    
                    visualLayoutAccessorysWhereThisIsVisualLayoutList.OnBeforeRemove += new EventHandler(VisualLayoutAccessorysWhereThisIsVisualLayoutList_OnBeforeRemove);
                    visualLayoutAccessorysWhereThisIsVisualLayoutList.OnAfterAdd += new EventHandler(VisualLayoutAccessorysWhereThisIsVisualLayoutList_OnAfterAdd);
                }
                
                return visualLayoutAccessorysWhereThisIsVisualLayoutList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO> VisualLayoutFabricsWhereThisIsVisualLayout // FK_VisualLayoutFabric_VisualLayout
        {
            get
            {
                if (!_visualLayoutFabricsWhereThisIsVisualLayoutLoaded)
                {
                    _visualLayoutFabricsWhereThisIsVisualLayoutLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.VisualLayout obj = (from o in context.VisualLayout
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.VisualLayoutFabricsWhereThisIsVisualLayout.Load();
                        visualLayoutFabricsWhereThisIsVisualLayoutList = new IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>(obj.VisualLayoutFabricsWhereThisIsVisualLayout.Count);
                        
                        foreach (Indico.DAL.VisualLayoutFabric o in obj.VisualLayoutFabricsWhereThisIsVisualLayout)
                        {
                            Indico.BusinessObjects.VisualLayoutFabricBO fkObj = new Indico.BusinessObjects.VisualLayoutFabricBO(o, ref this._context);
                            visualLayoutFabricsWhereThisIsVisualLayoutList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        visualLayoutFabricsWhereThisIsVisualLayoutList = new IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>();
                    }
                    
                    visualLayoutFabricsWhereThisIsVisualLayoutList.OnBeforeRemove += new EventHandler(VisualLayoutFabricsWhereThisIsVisualLayoutList_OnBeforeRemove);
                    visualLayoutFabricsWhereThisIsVisualLayoutList.OnAfterAdd += new EventHandler(VisualLayoutFabricsWhereThisIsVisualLayoutList_OnAfterAdd);
                }
                
                return visualLayoutFabricsWhereThisIsVisualLayoutList;
            }
        }
        #endregion
        
        #endregion
        
        #region Internal Constructors
        /// <summary>
        /// Creates an instance of the VisualLayoutBO class using the supplied Indico.DAL.VisualLayout. 
        /// </summary>
        /// <param name="obj">a Indico.DAL.VisualLayout whose properties will be used to initialise the VisualLayoutBO</param>
        internal VisualLayoutBO(Indico.DAL.VisualLayout obj, ref IndicoContext context)
        {
            this._doNotUpdateDALObject = true;
            
            this.Context = context;
        
            // set the properties from the Indico.DAL.VisualLayout 
            this.ID = obj.ID;
            
            this.ArtWork = (obj.ArtWorkReference.EntityKey != null && obj.ArtWorkReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.ArtWorkReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.BySizeArtWork = obj.BySizeArtWork;
            this.Client = (obj.ClientReference.EntityKey != null && obj.ClientReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.ClientReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.CreatedDate = obj.CreatedDate;
            this.Description = obj.Description;
            this.FabricCode = (obj.FabricCodeReference.EntityKey != null && obj.FabricCodeReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.FabricCodeReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.IsCommonProduct = obj.IsCommonProduct;
            this.IsGenerated = obj.IsGenerated;
            this.NamePrefix = obj.NamePrefix;
            this.NameSuffix = obj.NameSuffix;
            this.NNPFilePath = obj.NNPFilePath;
            this.Pattern = (obj.PatternReference.EntityKey != null && obj.PatternReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.PatternReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.PocketType = (obj.PocketTypeReference.EntityKey != null && obj.PocketTypeReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.PocketTypeReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.Printer = (obj.PrinterReference.EntityKey != null && obj.PrinterReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.PrinterReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.ResolutionProfile = (obj.ResolutionProfileReference.EntityKey != null && obj.ResolutionProfileReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.ResolutionProfileReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.Where = obj.Where;
            
            this._doNotUpdateDALObject = false;
        }
        #endregion
        
        #region Internal utility methods
        internal Indico.DAL.VisualLayout SetDAL(IndicoEntities context)
        {
            this._doNotUpdateDALObject = true;
        
            // set the Indico.DAL.VisualLayout properties
            Indico.DAL.VisualLayout obj = new Indico.DAL.VisualLayout();
            
            if (this.ID > 0)
            {
                obj = context.VisualLayout.FirstOrDefault<VisualLayout>(o => o.ID == this.ID);
            }
            
            obj.BySizeArtWork = this.BySizeArtWork;
            obj.CreatedDate = this.CreatedDate;
            obj.Description = this.Description;
            obj.IsCommonProduct = this.IsCommonProduct;
            obj.IsGenerated = this.IsGenerated;
            obj.NamePrefix = this.NamePrefix;
            obj.NameSuffix = this.NameSuffix;
            obj.NNPFilePath = this.NNPFilePath;
            obj.Where = this.Where;
            
            if (this.ArtWork != null && this.ArtWork > 0) obj.ArtWork = context.ArtWork.FirstOrDefault(o => o.ID == this.ArtWork);
            if (this.Client != null && this.Client > 0) obj.Client = context.JobName.FirstOrDefault(o => o.ID == this.Client);
            if (this.FabricCode != null && this.FabricCode > 0) obj.FabricCode = context.FabricCode.FirstOrDefault(o => o.ID == this.FabricCode);
            if (this.Pattern > 0) obj.Pattern = context.Pattern.FirstOrDefault(o => o.ID == this.Pattern);
            if (this.PocketType != null && this.PocketType > 0) obj.PocketType = context.PocketType.FirstOrDefault(o => o.ID == this.PocketType);
            if (this.Printer != null && this.Printer > 0) obj.Printer = context.Printer.FirstOrDefault(o => o.ID == this.Printer);
            if (this.ResolutionProfile != null && this.ResolutionProfile > 0) obj.ResolutionProfile = context.ResolutionProfile.FirstOrDefault(o => o.ID == this.ResolutionProfile);
            
            if (_imagesWhereThisIsVisualLayoutLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.ImageBO.ToEntityList(this.ImagesWhereThisIsVisualLayout, context), 
                    obj.ImagesWhereThisIsVisualLayout);
            if (_orderDetailsWhereThisIsVisualLayoutLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.OrderDetailBO.ToEntityList(this.OrderDetailsWhereThisIsVisualLayout, context), 
                    obj.OrderDetailsWhereThisIsVisualLayout);
            if (_quoteDetailsWhereThisIsVisualLayoutLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.QuoteDetailBO.ToEntityList(this.QuoteDetailsWhereThisIsVisualLayout, context), 
                    obj.QuoteDetailsWhereThisIsVisualLayout);
            if (_visualLayoutAccessorysWhereThisIsVisualLayoutLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.VisualLayoutAccessoryBO.ToEntityList(this.VisualLayoutAccessorysWhereThisIsVisualLayout, context), 
                    obj.VisualLayoutAccessorysWhereThisIsVisualLayout);
            if (_visualLayoutFabricsWhereThisIsVisualLayoutLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.VisualLayoutFabricBO.ToEntityList(this.VisualLayoutFabricsWhereThisIsVisualLayout, context), 
                    obj.VisualLayoutFabricsWhereThisIsVisualLayout);
            
            this._doNotUpdateDALObject = false;
            
            return obj;
        }
        
        internal void SetBO(System.Data.Objects.DataClasses.EntityObject eObj)
        {
            this._doNotUpdateDALObject = true;
            
            // Check the received type
            if (eObj.GetType() != typeof(Indico.DAL.VisualLayout))
            {
                throw new FormatException("Received wrong parameter type...");
            }

            Indico.DAL.VisualLayout obj = (Indico.DAL.VisualLayout)eObj;
            
            // set the Indico.BusinessObjects.VisualLayoutBO properties
            this.ID = obj.ID;
            
            this.BySizeArtWork = obj.BySizeArtWork;
            this.CreatedDate = obj.CreatedDate;
            this.Description = obj.Description;
            this.IsCommonProduct = obj.IsCommonProduct;
            this.IsGenerated = obj.IsGenerated;
            this.NamePrefix = obj.NamePrefix;
            this.NameSuffix = obj.NameSuffix;
            this.NNPFilePath = obj.NNPFilePath;
            this.Where = obj.Where;
            
            this.ArtWork = (obj.ArtWorkReference.EntityKey != null && obj.ArtWorkReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.ArtWorkReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.Client = (obj.ClientReference.EntityKey != null && obj.ClientReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.ClientReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.FabricCode = (obj.FabricCodeReference.EntityKey != null && obj.FabricCodeReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.FabricCodeReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.Pattern = (obj.PatternReference.EntityKey != null && obj.PatternReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.PatternReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.PocketType = (obj.PocketTypeReference.EntityKey != null && obj.PocketTypeReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.PocketTypeReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.Printer = (obj.PrinterReference.EntityKey != null && obj.PrinterReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.PrinterReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.ResolutionProfile = (obj.ResolutionProfileReference.EntityKey != null && obj.ResolutionProfileReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.ResolutionProfileReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            
            this._doNotUpdateDALObject = false;
        }
        
        internal void SetBO(Indico.BusinessObjects.VisualLayoutBO obj)
        {
            this._doNotUpdateDALObject = true;
            
            // set this Indico.BusinessObjects.VisualLayoutBO properties
            this.ID = obj.ID;
            
            this.ArtWork = obj.ArtWork;
            this.BySizeArtWork = obj.BySizeArtWork;
            this.Client = obj.Client;
            this.CreatedDate = obj.CreatedDate;
            this.Description = obj.Description;
            this.FabricCode = obj.FabricCode;
            this.IsCommonProduct = obj.IsCommonProduct;
            this.IsGenerated = obj.IsGenerated;
            this.NamePrefix = obj.NamePrefix;
            this.NameSuffix = obj.NameSuffix;
            this.NNPFilePath = obj.NNPFilePath;
            this.Pattern = obj.Pattern;
            this.PocketType = obj.PocketType;
            this.Printer = obj.Printer;
            this.ResolutionProfile = obj.ResolutionProfile;
            this.Where = obj.Where;
            
            this._doNotUpdateDALObject = false;
        }
        
        internal List<Indico.BusinessObjects.VisualLayoutBO> IQueryableToList(IQueryable<Indico.DAL.VisualLayout> oQuery)
        {
            List<Indico.DAL.VisualLayout> oList = oQuery.ToList();
            List<Indico.BusinessObjects.VisualLayoutBO> rList = new List<Indico.BusinessObjects.VisualLayoutBO>(oList.Count);
            foreach (Indico.DAL.VisualLayout o in oList)
            {
                Indico.BusinessObjects.VisualLayoutBO obj = new Indico.BusinessObjects.VisualLayoutBO(o, ref this._context);
                rList.Add(obj);
            }
            return rList;
        }
        
        internal List<Indico.BusinessObjects.VisualLayoutBO> ToList(IEnumerable<Indico.DAL.VisualLayout> oQuery)
        {
            List<Indico.DAL.VisualLayout> oList = oQuery.ToList();
            List<Indico.BusinessObjects.VisualLayoutBO> rList = new List<Indico.BusinessObjects.VisualLayoutBO>(oList.Count);
            foreach (Indico.DAL.VisualLayout o in oList)
            {
                Indico.BusinessObjects.VisualLayoutBO obj = new Indico.BusinessObjects.VisualLayoutBO(o, ref this._context);
                rList.Add(obj);
            }
            return rList;
        }
        
        internal static List<Indico.DAL.VisualLayout> ToEntityList(List<VisualLayoutBO> bos, IndicoEntities context)
        {
            // build a List of VisualLayout entities from the business objects
            List<Int32> ids = (from o in bos
                                   select o.ID).ToList<Int32>();

            return (context.VisualLayout.Count() == 0) ? new List<Indico.DAL.VisualLayout>() : (context.VisualLayout.Where(BuildContainsExpression<VisualLayout, int>(e => e.ID, ids)))
                .ToList<Indico.DAL.VisualLayout>();
        }
        
        internal static System.Data.Objects.DataClasses.EntityCollection<Indico.DAL.VisualLayout> ToEntityCollection(List<VisualLayoutBO> bos, IndicoEntities context)
        {
            // build an EntityCollection of VisualLayout entities from the business objects
            List<Int32> ids = (from o in bos
                               select o.ID).ToList<Int32>();

            List<Indico.DAL.VisualLayout> el = (context.VisualLayout.Count() == 0) ? new List<Indico.DAL.VisualLayout>() : 
                context.VisualLayout.Where(BuildContainsExpression<VisualLayout, int>(e => e.ID, ids))
                .ToList<Indico.DAL.VisualLayout>();
                
            System.Data.Objects.DataClasses.EntityCollection<Indico.DAL.VisualLayout> ec 
                = new System.Data.Objects.DataClasses.EntityCollection<Indico.DAL.VisualLayout>();
                
            foreach (Indico.DAL.VisualLayout r in el) 
            {
                ec.Add(r);
            }
            return ec;
        }

        internal Indico.DAL.VisualLayout ToEntity(IndicoEntities context)
        {
            return (from o in context.VisualLayout
                    where o.ID == this.ID
                    select o).FirstOrDefault();
        }
        #endregion
        
        #region BusinessObject methods
        
        #region Add Object
        
        public void Add()
        {
            if (this.Context != null)
            {
                this.Context.Context.AddToVisualLayout(this.ObjDAL);
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                Indico.DAL.VisualLayout obj = this.SetDAL(objContext.Context);
                objContext.Context.AddToVisualLayout(obj);
                objContext.SaveChanges();
                objContext.Dispose(); 
            }
        }
        
        #endregion
        
        #region Delete Object
        
        public void Delete()
        {
            if (this.Context != null)
            {
                if (this.ObjDAL != null && this.ObjDAL.EntityKey != null)
                {
                    if (this.ObjDAL.EntityState == System.Data.EntityState.Detached)
                    {
                        this.Context.Context.Attach(this.ObjDAL);
                        this.Context.Context.DeleteObject(this.ObjDAL);
                    }
                    else
                    {
                        this.Context.Context.DeleteObject(this.ObjDAL);
                    }
                }
                else
                {
                    Indico.DAL.VisualLayout obj = this.SetDAL(this.Context.Context);
                    this.Context.Context.DeleteObject(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                Indico.DAL.VisualLayout obj = this.SetDAL(objContext.Context);
                this.Context.Context.DeleteObject(obj);
                objContext.Context.SaveChanges();
                objContext.Dispose();
            }
        }
        
        #endregion
        
        #region Get Single Object
        
        public bool GetObject()
        {
            return GetObject(true);
        }
        public bool GetObject(bool blnCache)
        {
            Indico.BusinessObjects.VisualLayoutBO data = null;
            
            if (blnCache)
            {
                data = this.GetFromCache(this.ID) as Indico.BusinessObjects.VisualLayoutBO; 
            }

            if (data != null)
            {
                SetBO(data);
            }
            else
            {
                try
                {
                    IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                    IQueryable<Indico.DAL.VisualLayout> oQuery =
                        from o in context.VisualLayout
                        where o.ID == this.ID
                        select o;

                    List<Indico.DAL.VisualLayout> oList = oQuery.ToList();
                    if (oList.Count != 1)
                        return false;
                    else
                    {
                        SetBO(oList[0]);
                        this.Cache();
                    }
                    
                    if (this.Context == null)
                    {
                        context.Dispose();
                    }
                }
                catch (System.Exception e)
                {
                    throw new IndicoException(String.Format(System.Globalization.CultureInfo.InvariantCulture, ResourceManager.GetString("Could not Retrieve a {0} from the data store", System.Globalization.CultureInfo.CurrentCulture), this.ToString()), e, IndicoException.Severities.USER, IndicoException.ERRNO.INT_ERR_BO_SELECT_FAIL);
                }
            }
            return true;
        }
        #endregion
        
        #region GetAllObject
        public List<Indico.BusinessObjects.VisualLayoutBO> GetAllObject()
        {
            return GetAllObject(0, 0);
        }
        public List<Indico.BusinessObjects.VisualLayoutBO> GetAllObject(int maximumRows)
        {
            return GetAllObject(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.VisualLayoutBO> GetAllObject(int maximumRows, int startIndex)
        {
            return GetAllObject(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.VisualLayoutBO> GetAllObject(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = new IndicoEntities();
            IQueryable<Indico.DAL.VisualLayout> oQuery =
                (from o in context.VisualLayout
                 orderby o.ID
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.ID).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.VisualLayoutBO> visuallayouts = IQueryableToList(oQuery);
            context.Dispose();
            return visuallayouts;
        }
        #endregion
        
        #region SearchObjects
        public List<Indico.BusinessObjects.VisualLayoutBO> SearchObjects()
        {
            return SearchObjects(0,0);
        }
        public List<Indico.BusinessObjects.VisualLayoutBO> SearchObjects(int maximumRows)
        {
            return SearchObjects(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.VisualLayoutBO> SearchObjects(int maximumRows, int startIndex)
        {
            return SearchObjects(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.VisualLayoutBO> SearchObjects(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            IQueryable<Indico.DAL.VisualLayout> oQuery =
                (from o in context.VisualLayout
                 where
                    (this.ID == 0 || this.ID == o.ID) &&
                    (this.NamePrefix == string.Empty || this.NamePrefix == o.NamePrefix) &&
                    (this.Description == null || this.Description == o.Description) &&
                    (this.Pattern == 0 || this.Pattern == o.Pattern.ID) &&
                    (this.FabricCode == null || this.FabricCode == o.FabricCode.ID) &&
                    (this.Client == null || this.Client == o.Client.ID) &&
                    (this.NNPFilePath == null || this.NNPFilePath == o.NNPFilePath) &&
                    (this.NameSuffix == null || this.NameSuffix == o.NameSuffix) &&
                    (this.CreatedDate == null || this.CreatedDate == o.CreatedDate) &&
                    (this.IsCommonProduct == null || this.IsCommonProduct == o.IsCommonProduct) &&
                    (this.IsGenerated == false || this.IsGenerated == o.IsGenerated) &&
                    (this.ResolutionProfile == null || this.ResolutionProfile == o.ResolutionProfile.ID) &&
                    (this.PocketType == null || this.PocketType == o.PocketType.ID) &&
                    (this.Printer == null || this.Printer == o.Printer.ID) &&
                    (this.ArtWork == null || this.ArtWork == o.ArtWork.ID) &&
                    (this.Where == null || this.Where == o.Where) &&
                    (this.BySizeArtWork == false || this.BySizeArtWork == o.BySizeArtWork) 
                 orderby o.ID
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.ID).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.VisualLayoutBO> visuallayouts = IQueryableToList(oQuery);
            
            if (this.Context == null)
            {
                context.Dispose();
            }
            
            return visuallayouts;
        }
        
        public int SearchObjectsCount()
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            return (from o in context.VisualLayout
                 where
                    (this.ID == 0 || this.ID == o.ID) &&
                    (this.NamePrefix == string.Empty || this.NamePrefix == o.NamePrefix) &&
                    (this.Description == null || this.Description == o.Description) &&
                    (this.Pattern == 0 || this.Pattern == o.Pattern.ID) &&
                    (this.FabricCode == null || this.FabricCode == o.FabricCode.ID) &&
                    (this.Client == null || this.Client == o.Client.ID) &&
                    (this.NNPFilePath == null || this.NNPFilePath == o.NNPFilePath) &&
                    (this.NameSuffix == null || this.NameSuffix == o.NameSuffix) &&
                    (this.CreatedDate == null || this.CreatedDate == o.CreatedDate) &&
                    (this.IsCommonProduct == null || this.IsCommonProduct == o.IsCommonProduct) &&
                    (this.IsGenerated == false || this.IsGenerated == o.IsGenerated) &&
                    (this.ResolutionProfile == null || this.ResolutionProfile == o.ResolutionProfile.ID) &&
                    (this.PocketType == null || this.PocketType == o.PocketType.ID) &&
                    (this.Printer == null || this.Printer == o.Printer.ID) &&
                    (this.ArtWork == null || this.ArtWork == o.ArtWork.ID) &&
                    (this.Where == null || this.Where == o.Where) &&
                    (this.BySizeArtWork == false || this.BySizeArtWork == o.BySizeArtWork) 
                 orderby o.ID
                 select o).Count();
        }
        #endregion
        
        #region SearchObjectsLikeAnd
        public List<Indico.BusinessObjects.VisualLayoutBO> SearchLikeAndObjects()
        {
            return SearchLikeAndObjects(0);
        }
        public List<Indico.BusinessObjects.VisualLayoutBO> SearchLikeAndObjects(int maximumRows)
        {
            return SearchLikeAndObjects(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.VisualLayoutBO> SearchLikeAndObjects(int maximumRows, int startIndex)
        {
            return SearchLikeAndObjects(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.VisualLayoutBO> SearchLikeAndObjects(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            IQueryable<Indico.DAL.VisualLayout> oQuery =
                (from o in context.VisualLayout
                 where
                    (this.ID == 0 || o.ID == this.ID) &&
                    (this.NamePrefix == string.Empty || o.NamePrefix.Contains(this.NamePrefix)) &&
                    (this.Description == null || o.Description.Contains(this.Description)) &&
                    (this.Pattern == 0 || o.Pattern.ID == this.Pattern) &&
                    (this.FabricCode == null || o.FabricCode.ID == this.FabricCode) &&
                    (this.Client == null || o.Client.ID == this.Client) &&
                    (this.NNPFilePath == null || o.NNPFilePath.Contains(this.NNPFilePath)) &&
                    (this.NameSuffix == null || o.NameSuffix == this.NameSuffix) &&
                    (this.CreatedDate == null || o.CreatedDate == this.CreatedDate) &&
                    (this.IsCommonProduct == null || o.IsCommonProduct == this.IsCommonProduct) &&
                    (this.IsGenerated == false || o.IsGenerated == this.IsGenerated) &&
                    (this.ResolutionProfile == null || o.ResolutionProfile.ID == this.ResolutionProfile) &&
                    (this.PocketType == null || o.PocketType.ID == this.PocketType) &&
                    (this.Printer == null || o.Printer.ID == this.Printer) &&
                    (this.ArtWork == null || o.ArtWork.ID == this.ArtWork) &&
                    (this.Where == null || o.Where.Contains(this.Where)) &&
                    (this.BySizeArtWork == false || o.BySizeArtWork == this.BySizeArtWork) 
                 orderby o.ID
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.ID).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.VisualLayoutBO> visuallayouts = IQueryableToList(oQuery);
            if (this.Context == null)
            {
                context.Dispose();
            }
            
            return visuallayouts;
        }
        
        public int SearchLikeAndObjectsCount()
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            return (from o in context.VisualLayout
                 where
                    (this.ID == 0 || o.ID == this.ID) &&
                    (this.NamePrefix == string.Empty || o.NamePrefix.Contains(this.NamePrefix)) &&
                    (this.Description == null || o.Description.Contains(this.Description)) &&
                    (this.Pattern == 0 || o.Pattern.ID == this.Pattern) &&
                    (this.FabricCode == null || o.FabricCode.ID == this.FabricCode) &&
                    (this.Client == null || o.Client.ID == this.Client) &&
                    (this.NNPFilePath == null || o.NNPFilePath.Contains(this.NNPFilePath)) &&
                    (this.NameSuffix == null || o.NameSuffix == this.NameSuffix) &&
                    (this.CreatedDate == null || o.CreatedDate == this.CreatedDate) &&
                    (this.IsCommonProduct == null || o.IsCommonProduct == this.IsCommonProduct) &&
                    (this.IsGenerated == false || o.IsGenerated == this.IsGenerated) &&
                    (this.ResolutionProfile == null || o.ResolutionProfile.ID == this.ResolutionProfile) &&
                    (this.PocketType == null || o.PocketType.ID == this.PocketType) &&
                    (this.Printer == null || o.Printer.ID == this.Printer) &&
                    (this.ArtWork == null || o.ArtWork.ID == this.ArtWork) &&
                    (this.Where == null || o.Where.Contains(this.Where)) &&
                    (this.BySizeArtWork == false || o.BySizeArtWork == this.BySizeArtWork) 
                 orderby o.ID
                 select o).Count();
            
        }
        #endregion
        
        #region SearchObjectsLikeOr
        public List<Indico.BusinessObjects.VisualLayoutBO> SearchLikeOrObjects()
        {
            return SearchLikeOrObjects(0);
        }
        public List<Indico.BusinessObjects.VisualLayoutBO> SearchLikeOrObjects(int maximumRows)
        {
            return SearchLikeOrObjects(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.VisualLayoutBO> SearchLikeOrObjects(int maximumRows, int startIndex)
        {
            return SearchLikeOrObjects(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.VisualLayoutBO> SearchLikeOrObjects(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            IQueryable<Indico.DAL.VisualLayout> oQuery =
                (from o in context.VisualLayout
                 where
                    (this.ID == 0 || this.ID == o.ID) && 
                    (this.Pattern == 0 || this.Pattern == o.Pattern.ID) && 
                    (this.FabricCode == null || this.FabricCode == o.FabricCode.ID) && 
                    (this.Client == null || this.Client == o.Client.ID) && 
                    (this.NameSuffix == null || this.NameSuffix == o.NameSuffix) && 
                    (this.CreatedDate == null || this.CreatedDate == o.CreatedDate) && 
                    (this.IsCommonProduct == null || this.IsCommonProduct == o.IsCommonProduct) && 
                    (this.IsGenerated == false || this.IsGenerated == o.IsGenerated) && 
                    (this.ResolutionProfile == null || this.ResolutionProfile == o.ResolutionProfile.ID) && 
                    (this.PocketType == null || this.PocketType == o.PocketType.ID) && 
                    (this.Printer == null || this.Printer == o.Printer.ID) && 
                    (this.ArtWork == null || this.ArtWork == o.ArtWork.ID) && 
                    (this.BySizeArtWork == false || this.BySizeArtWork == o.BySizeArtWork) && 
                    ((o.NamePrefix.Contains(this.NamePrefix)) ||
                    (o.Description.Contains(this.Description)) ||
                    (o.NNPFilePath.Contains(this.NNPFilePath)) ||
                    (o.Where.Contains(this.Where)) ||
                    (this.NamePrefix == null && this.Description == null && this.NNPFilePath == null && this.Where == null ))
                 orderby o.ID
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.ID).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.VisualLayoutBO> visuallayouts = IQueryableToList(oQuery);
            if (this.Context == null)
            {
                context.Dispose();
            }
            
            return visuallayouts;
        }
        
        public int SearchLikeOrObjectsCount()
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            return (from o in context.VisualLayout
                 where
                    (this.ID == 0 || this.ID == o.ID) && 
                    (this.Pattern == 0 || this.Pattern == o.Pattern.ID) && 
                    (this.FabricCode == null || this.FabricCode == o.FabricCode.ID) && 
                    (this.Client == null || this.Client == o.Client.ID) && 
                    (this.NameSuffix == null || this.NameSuffix == o.NameSuffix) && 
                    (this.CreatedDate == null || this.CreatedDate == o.CreatedDate) && 
                    (this.IsCommonProduct == null || this.IsCommonProduct == o.IsCommonProduct) && 
                    (this.IsGenerated == false || this.IsGenerated == o.IsGenerated) && 
                    (this.ResolutionProfile == null || this.ResolutionProfile == o.ResolutionProfile.ID) && 
                    (this.PocketType == null || this.PocketType == o.PocketType.ID) && 
                    (this.Printer == null || this.Printer == o.Printer.ID) && 
                    (this.ArtWork == null || this.ArtWork == o.ArtWork.ID) && 
                    (this.BySizeArtWork == false || this.BySizeArtWork == o.BySizeArtWork) && 
                    ((o.NamePrefix.Contains(this.NamePrefix)) ||
                    (o.Description.Contains(this.Description)) ||
                    (o.NNPFilePath.Contains(this.NNPFilePath)) ||
                    (o.Where.Contains(this.Where)) ||
                    (this.NamePrefix == null && this.Description == null && this.NNPFilePath == null && this.Where == null ))
                 orderby o.ID
                 select o).Count();
            
        }
        #endregion
        
        #region Serialization methods
        /// <summary>
        /// Serializes the Indico.BusinessObjects.VisualLayoutBO to an XML representation
        /// </summary>
        /// <returns>a XML string serialized representation</returns>
        public string SerializeObject()
        {
            string strReturn = "";

            System.IO.MemoryStream objStream = new System.IO.MemoryStream();

            System.Xml.Serialization.XmlSerializer x = new System.Xml.Serialization.XmlSerializer(this.GetType());

            x.Serialize(objStream, this);

            System.Text.Encoding encoding = System.Text.Encoding.UTF8;
            // Read string from binary file with UTF8 encoding
            strReturn = encoding.GetString(objStream.GetBuffer());

            objStream.Close();
            return strReturn;

        }

        /// <summary>
        /// Deserializes Indico.BusinessObjects.VisualLayoutBO object from an XML representation
        /// </summary>
        /// <param name="strXML">a XML string serialized representation</param>
        public Indico.BusinessObjects.VisualLayoutBO DeserializeObject(string strXML)
        {
            Indico.BusinessObjects.VisualLayoutBO objTemp = null;
            System.Xml.XmlDocument objXML = new System.Xml.XmlDocument();

            objXML.LoadXml(strXML);
            System.Text.Encoding encoding = System.Text.Encoding.UTF8;

            System.IO.MemoryStream objStream = new System.IO.MemoryStream();
            byte[] b = encoding.GetBytes(objXML.OuterXml);

            objStream.Write(b, 0, (int)b.Length);
            objStream.Position = 0;
            System.Xml.Serialization.XmlSerializer x = new System.Xml.Serialization.XmlSerializer(this.GetType());

            objTemp = (Indico.BusinessObjects.VisualLayoutBO)x.Deserialize(objStream);
            objStream.Close();
            return objTemp;
        }

        /// <summary>
        /// Returns a simple XML representation of Indico.BusinessObjects.VisualLayoutBO object in an XmlElement
        /// </summary>
        /// <returns>An XML snippet representing the object</returns>
        public string ToXmlString()
        {
            // MW TODO - implement this better.
            return SerializeObject();
        }
        #endregion
        
        #region OnPropertyChange Methods
        partial void OnIDChanged()
        {
            OnVisualLayoutBOIDChanged();
        }
        
        partial void OnIDChanging(int value)
        {
            if (value < 0)
            {
                throw new Exception(String.Format("VisualLayoutBO.ID must be more than or equal to 0. The supplied value was {0}.", value));
            }
            OnVisualLayoutBOIDChanging(value);
        }
        partial void OnIDChanged();
        partial void OnIDChanging(int value);
        partial void OnVisualLayoutBOIDChanged();
        partial void OnVisualLayoutBOIDChanging(int value);
        
        partial void OnNamePrefixChanged()
        {
            OnVisualLayoutBONamePrefixChanged();
        }
        
        partial void OnNamePrefixChanging(string value)
        {
            if (value != null && value.Length > 64)
            {
                throw new Exception(String.Format("VisualLayoutBO.NamePrefix has a maximum length of 64. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnVisualLayoutBONamePrefixChanging(value);
        }
        partial void OnNamePrefixChanged();
        partial void OnNamePrefixChanging(string value);
        partial void OnVisualLayoutBONamePrefixChanged();
        partial void OnVisualLayoutBONamePrefixChanging(string value);
        
        partial void OnDescriptionChanged()
        {
            OnVisualLayoutBODescriptionChanged();
        }
        
        partial void OnDescriptionChanging(string value)
        {
            if (value != null && value.Length > 512)
            {
                throw new Exception(String.Format("VisualLayoutBO.Description has a maximum length of 512. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnVisualLayoutBODescriptionChanging(value);
        }
        partial void OnDescriptionChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnVisualLayoutBODescriptionChanged();
        partial void OnVisualLayoutBODescriptionChanging(string value);
        
        partial void OnPatternChanged()
        {
            OnVisualLayoutBOPatternChanged();
        }
        
        partial void OnPatternChanging(int value)
        {
            if (value < 0)
            {
                throw new Exception(String.Format("VisualLayoutBO.Pattern must be more than or equal to 0. The supplied value was {0}.", value));
            }
            OnVisualLayoutBOPatternChanging(value);
        }
        partial void OnPatternChanged();
        partial void OnPatternChanging(int value);
        partial void OnVisualLayoutBOPatternChanged();
        partial void OnVisualLayoutBOPatternChanging(int value);
        
        partial void OnFabricCodeChanged()
        {
            OnVisualLayoutBOFabricCodeChanged();
        }
        
        partial void OnFabricCodeChanging(int? value)
        {
            if (value != null && value < 0)
            {
                throw new Exception(String.Format("VisualLayoutBO.FabricCode must be null or more than or equal to 0. The supplied value was {0}.", value));
            }
            OnVisualLayoutBOFabricCodeChanging(value);
        }
        partial void OnFabricCodeChanged();
        partial void OnFabricCodeChanging(int? value);
        partial void OnVisualLayoutBOFabricCodeChanged();
        partial void OnVisualLayoutBOFabricCodeChanging(int? value);
        
        partial void OnClientChanged()
        {
            OnVisualLayoutBOClientChanged();
        }
        
        partial void OnClientChanging(int? value)
        {
            if (value != null && value < 0)
            {
                throw new Exception(String.Format("VisualLayoutBO.Client must be null or more than or equal to 0. The supplied value was {0}.", value));
            }
            OnVisualLayoutBOClientChanging(value);
        }
        partial void OnClientChanged();
        partial void OnClientChanging(int? value);
        partial void OnVisualLayoutBOClientChanged();
        partial void OnVisualLayoutBOClientChanging(int? value);
        
        partial void OnNNPFilePathChanged()
        {
            OnVisualLayoutBONNPFilePathChanged();
        }
        
        partial void OnNNPFilePathChanging(string value)
        {
            if (value != null && value.Length > 512)
            {
                throw new Exception(String.Format("VisualLayoutBO.NNPFilePath has a maximum length of 512. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnVisualLayoutBONNPFilePathChanging(value);
        }
        partial void OnNNPFilePathChanged();
        partial void OnNNPFilePathChanging(string value);
        partial void OnVisualLayoutBONNPFilePathChanged();
        partial void OnVisualLayoutBONNPFilePathChanging(string value);
        
        partial void OnNameSuffixChanged()
        {
            OnVisualLayoutBONameSuffixChanged();
        }
        
        partial void OnNameSuffixChanging(int? value)
        {
            OnVisualLayoutBONameSuffixChanging(value);
        }
        partial void OnNameSuffixChanged();
        partial void OnNameSuffixChanging(int? value);
        partial void OnVisualLayoutBONameSuffixChanged();
        partial void OnVisualLayoutBONameSuffixChanging(int? value);
        
        partial void OnCreatedDateChanged()
        {
            OnVisualLayoutBOCreatedDateChanged();
        }
        
        partial void OnCreatedDateChanging(DateTime? value)
        {
            OnVisualLayoutBOCreatedDateChanging(value);
        }
        partial void OnCreatedDateChanged();
        partial void OnCreatedDateChanging(DateTime? value);
        partial void OnVisualLayoutBOCreatedDateChanged();
        partial void OnVisualLayoutBOCreatedDateChanging(DateTime? value);
        
        partial void OnIsCommonProductChanged()
        {
            OnVisualLayoutBOIsCommonProductChanged();
        }
        
        partial void OnIsCommonProductChanging(bool? value)
        {
            OnVisualLayoutBOIsCommonProductChanging(value);
        }
        partial void OnIsCommonProductChanged();
        partial void OnIsCommonProductChanging(bool? value);
        partial void OnVisualLayoutBOIsCommonProductChanged();
        partial void OnVisualLayoutBOIsCommonProductChanging(bool? value);
        
        partial void OnIsGeneratedChanged()
        {
            OnVisualLayoutBOIsGeneratedChanged();
        }
        
        partial void OnIsGeneratedChanging(bool value)
        {
            OnVisualLayoutBOIsGeneratedChanging(value);
        }
        partial void OnIsGeneratedChanged();
        partial void OnIsGeneratedChanging(bool value);
        partial void OnVisualLayoutBOIsGeneratedChanged();
        partial void OnVisualLayoutBOIsGeneratedChanging(bool value);
        
        partial void OnResolutionProfileChanged()
        {
            OnVisualLayoutBOResolutionProfileChanged();
        }
        
        partial void OnResolutionProfileChanging(int? value)
        {
            if (value != null && value < 0)
            {
                throw new Exception(String.Format("VisualLayoutBO.ResolutionProfile must be null or more than or equal to 0. The supplied value was {0}.", value));
            }
            OnVisualLayoutBOResolutionProfileChanging(value);
        }
        partial void OnResolutionProfileChanged();
        partial void OnResolutionProfileChanging(int? value);
        partial void OnVisualLayoutBOResolutionProfileChanged();
        partial void OnVisualLayoutBOResolutionProfileChanging(int? value);
        
        partial void OnPocketTypeChanged()
        {
            OnVisualLayoutBOPocketTypeChanged();
        }
        
        partial void OnPocketTypeChanging(int? value)
        {
            if (value != null && value < 0)
            {
                throw new Exception(String.Format("VisualLayoutBO.PocketType must be null or more than or equal to 0. The supplied value was {0}.", value));
            }
            OnVisualLayoutBOPocketTypeChanging(value);
        }
        partial void OnPocketTypeChanged();
        partial void OnPocketTypeChanging(int? value);
        partial void OnVisualLayoutBOPocketTypeChanged();
        partial void OnVisualLayoutBOPocketTypeChanging(int? value);
        
        partial void OnPrinterChanged()
        {
            OnVisualLayoutBOPrinterChanged();
        }
        
        partial void OnPrinterChanging(int? value)
        {
            if (value != null && value < 0)
            {
                throw new Exception(String.Format("VisualLayoutBO.Printer must be null or more than or equal to 0. The supplied value was {0}.", value));
            }
            OnVisualLayoutBOPrinterChanging(value);
        }
        partial void OnPrinterChanged();
        partial void OnPrinterChanging(int? value);
        partial void OnVisualLayoutBOPrinterChanged();
        partial void OnVisualLayoutBOPrinterChanging(int? value);
        
        partial void OnArtWorkChanged()
        {
            OnVisualLayoutBOArtWorkChanged();
        }
        
        partial void OnArtWorkChanging(int? value)
        {
            if (value != null && value < 0)
            {
                throw new Exception(String.Format("VisualLayoutBO.ArtWork must be null or more than or equal to 0. The supplied value was {0}.", value));
            }
            OnVisualLayoutBOArtWorkChanging(value);
        }
        partial void OnArtWorkChanged();
        partial void OnArtWorkChanging(int? value);
        partial void OnVisualLayoutBOArtWorkChanged();
        partial void OnVisualLayoutBOArtWorkChanging(int? value);
        
        partial void OnWhereChanged()
        {
            OnVisualLayoutBOWhereChanged();
        }
        
        partial void OnWhereChanging(string value)
        {
            if (value != null && value.Length > 128)
            {
                throw new Exception(String.Format("VisualLayoutBO.Where has a maximum length of 128. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnVisualLayoutBOWhereChanging(value);
        }
        partial void OnWhereChanged();
        partial void OnWhereChanging(string value);
        partial void OnVisualLayoutBOWhereChanged();
        partial void OnVisualLayoutBOWhereChanging(string value);
        
        partial void OnBySizeArtWorkChanged()
        {
            OnVisualLayoutBOBySizeArtWorkChanged();
        }
        
        partial void OnBySizeArtWorkChanging(bool value)
        {
            OnVisualLayoutBOBySizeArtWorkChanging(value);
        }
        partial void OnBySizeArtWorkChanged();
        partial void OnBySizeArtWorkChanging(bool value);
        partial void OnVisualLayoutBOBySizeArtWorkChanged();
        partial void OnVisualLayoutBOBySizeArtWorkChanging(bool value);
        
        #endregion
        
        #region IComparable Members

        public int CompareTo(object obj)
        {
            if (!(obj is Indico.BusinessObjects.VisualLayoutBO))
                return 1;
            Indico.BusinessObjects.VisualLayoutBOComparer c = new Indico.BusinessObjects.VisualLayoutBOComparer();
            return c.Compare(this, obj as Indico.BusinessObjects.VisualLayoutBO);
        }

        #endregion
        #endregion
        
        #region Events
        
        void obj_PropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e)
        {
            if (e.PropertyName == "ID")
            {
                // reload me
                this.SetBO((Indico.DAL.VisualLayout)sender);
            }
        }
        
        void ImagesWhereThisIsVisualLayoutList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Image obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.ImageBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.ImageBO>)sender)[((IndicoList<Indico.BusinessObjects.ImageBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.ImagesWhereThisIsVisualLayout.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.ImageBO>)sender)[((IndicoList<Indico.BusinessObjects.ImageBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.ImagesWhereThisIsVisualLayout.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void ImagesWhereThisIsVisualLayoutList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Image obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.ImageBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.ImageBO>)sender)[((IndicoList<Indico.BusinessObjects.ImageBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.ImagesWhereThisIsVisualLayout.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.ImageBO>)sender)[((IndicoList<Indico.BusinessObjects.ImageBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.ImagesWhereThisIsVisualLayout.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void OrderDetailsWhereThisIsVisualLayoutList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.OrderDetail obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender)[((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.OrderDetailsWhereThisIsVisualLayout.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender)[((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.OrderDetailsWhereThisIsVisualLayout.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void OrderDetailsWhereThisIsVisualLayoutList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.OrderDetail obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender)[((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.OrderDetailsWhereThisIsVisualLayout.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender)[((IndicoList<Indico.BusinessObjects.OrderDetailBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.OrderDetailsWhereThisIsVisualLayout.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void QuoteDetailsWhereThisIsVisualLayoutList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.QuoteDetail obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.QuoteDetailsWhereThisIsVisualLayout.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.QuoteDetailsWhereThisIsVisualLayout.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void QuoteDetailsWhereThisIsVisualLayoutList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.QuoteDetail obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.QuoteDetailsWhereThisIsVisualLayout.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteDetailBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.QuoteDetailsWhereThisIsVisualLayout.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void VisualLayoutAccessorysWhereThisIsVisualLayoutList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.VisualLayoutAccessory obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.VisualLayoutAccessoryBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.VisualLayoutAccessoryBO>)sender)[((IndicoList<Indico.BusinessObjects.VisualLayoutAccessoryBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.VisualLayoutAccessorysWhereThisIsVisualLayout.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.VisualLayoutAccessoryBO>)sender)[((IndicoList<Indico.BusinessObjects.VisualLayoutAccessoryBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.VisualLayoutAccessorysWhereThisIsVisualLayout.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void VisualLayoutAccessorysWhereThisIsVisualLayoutList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.VisualLayoutAccessory obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.VisualLayoutAccessoryBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.VisualLayoutAccessoryBO>)sender)[((IndicoList<Indico.BusinessObjects.VisualLayoutAccessoryBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.VisualLayoutAccessorysWhereThisIsVisualLayout.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.VisualLayoutAccessoryBO>)sender)[((IndicoList<Indico.BusinessObjects.VisualLayoutAccessoryBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.VisualLayoutAccessorysWhereThisIsVisualLayout.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void VisualLayoutFabricsWhereThisIsVisualLayoutList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.VisualLayoutFabric obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender)[((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.VisualLayoutFabricsWhereThisIsVisualLayout.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender)[((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.VisualLayoutFabricsWhereThisIsVisualLayout.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void VisualLayoutFabricsWhereThisIsVisualLayoutList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.VisualLayoutFabric obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender)[((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.VisualLayoutFabricsWhereThisIsVisualLayout.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender)[((IndicoList<Indico.BusinessObjects.VisualLayoutFabricBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.VisualLayoutFabricsWhereThisIsVisualLayout.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void Context_OnSendBeforeChanges(object sender, EventArgs e)
        {        
            this._imagesWhereThisIsVisualLayoutLoaded = false;
            if (this.imagesWhereThisIsVisualLayoutList != null)
            {
                this.imagesWhereThisIsVisualLayoutList.OnBeforeRemove -= new EventHandler(ImagesWhereThisIsVisualLayoutList_OnBeforeRemove);
                this.imagesWhereThisIsVisualLayoutList.OnAfterAdd -= new EventHandler(ImagesWhereThisIsVisualLayoutList_OnAfterAdd);
            }
            this._orderDetailsWhereThisIsVisualLayoutLoaded = false;
            if (this.orderDetailsWhereThisIsVisualLayoutList != null)
            {
                this.orderDetailsWhereThisIsVisualLayoutList.OnBeforeRemove -= new EventHandler(OrderDetailsWhereThisIsVisualLayoutList_OnBeforeRemove);
                this.orderDetailsWhereThisIsVisualLayoutList.OnAfterAdd -= new EventHandler(OrderDetailsWhereThisIsVisualLayoutList_OnAfterAdd);
            }
            this._quoteDetailsWhereThisIsVisualLayoutLoaded = false;
            if (this.quoteDetailsWhereThisIsVisualLayoutList != null)
            {
                this.quoteDetailsWhereThisIsVisualLayoutList.OnBeforeRemove -= new EventHandler(QuoteDetailsWhereThisIsVisualLayoutList_OnBeforeRemove);
                this.quoteDetailsWhereThisIsVisualLayoutList.OnAfterAdd -= new EventHandler(QuoteDetailsWhereThisIsVisualLayoutList_OnAfterAdd);
            }
            this._visualLayoutAccessorysWhereThisIsVisualLayoutLoaded = false;
            if (this.visualLayoutAccessorysWhereThisIsVisualLayoutList != null)
            {
                this.visualLayoutAccessorysWhereThisIsVisualLayoutList.OnBeforeRemove -= new EventHandler(VisualLayoutAccessorysWhereThisIsVisualLayoutList_OnBeforeRemove);
                this.visualLayoutAccessorysWhereThisIsVisualLayoutList.OnAfterAdd -= new EventHandler(VisualLayoutAccessorysWhereThisIsVisualLayoutList_OnAfterAdd);
            }
            this._visualLayoutFabricsWhereThisIsVisualLayoutLoaded = false;
            if (this.visualLayoutFabricsWhereThisIsVisualLayoutList != null)
            {
                this.visualLayoutFabricsWhereThisIsVisualLayoutList.OnBeforeRemove -= new EventHandler(VisualLayoutFabricsWhereThisIsVisualLayoutList_OnBeforeRemove);
                this.visualLayoutFabricsWhereThisIsVisualLayoutList.OnAfterAdd -= new EventHandler(VisualLayoutFabricsWhereThisIsVisualLayoutList_OnAfterAdd);
            }
        }
        
        void Context_OnSendAfterChanges(object sender, EventArgs e)
        {   
            if (this.ID > 0)
            {
                this.Cache();
            }
        }

        #endregion
    }
    
    #region VisualLayoutBOComparer
    public class VisualLayoutBOComparer : IComparer<Indico.BusinessObjects.VisualLayoutBO>
    {
        private string propertyToCompareName;
        public VisualLayoutBOComparer(string propertyToCompare)
        {
            PropertyInfo p = typeof(Indico.BusinessObjects.VisualLayoutBO).GetProperty(propertyToCompare);
            if (p == null)
                throw new ArgumentException("is not a public property of Indico.BusinessObjects.VisualLayoutBO", "propertyToCompare");
            this.propertyToCompareName = propertyToCompare;
        }
        
        public VisualLayoutBOComparer()
        {
        
        }

        #region IComparer<Indico.BusinessObjects.VisualLayoutBO> Members
        public int Compare(Indico.BusinessObjects.VisualLayoutBO x, Indico.BusinessObjects.VisualLayoutBO y)
        {
            if (propertyToCompareName != null)
            {
                PropertyInfo p = typeof(Indico.BusinessObjects.VisualLayoutBO).GetProperty(propertyToCompareName);
                return compare(p, x, y);
            }
            else
            {
                PropertyInfo[] arrP = typeof(Indico.BusinessObjects.VisualLayoutBO).GetProperties();
                foreach (PropertyInfo p in arrP)
                {
                    int v = compare(p, x, y);
                    if (v != 0)
                        return v;
                }
                return 0;
            }
        }

        private int compare(PropertyInfo p, Indico.BusinessObjects.VisualLayoutBO x, Indico.BusinessObjects.VisualLayoutBO y)
        {
            object xVal = p.GetValue(x, null);
            object yVal = p.GetValue(y, null);

            if (xVal == null)
            {
                if (yVal == null)
                    return 0;
                else
                    return -1; // x is null, y is not, y is greater
            }
            else
            {
                if (y == null)
                    return 1; // x non null, y is null, x is greater
                else if (xVal is string)
                {
                    return StringComparer.OrdinalIgnoreCase.Compare(xVal, yVal);
                }
                else if (xVal is IComparable)
                {
                    return ((IComparable)xVal).CompareTo((IComparable)yVal);
                }
                else
                    throw new ArgumentException
                        ("is not string or valuetype that implements IComparable", "propertyToCompare");

            }
        }

        #endregion
    }
    #endregion
}
