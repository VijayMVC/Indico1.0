// This file is generated by CodeSmith. Do not edit. All edits to this file will be lost. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Dynamic;
using System.Linq.Expressions;
using System.Reflection;
using System.Xml.Serialization;

using Indico.DAL;

//namespace Indico.BusinessObjects
namespace Indico.BusinessObjects
{
    /// <summary>
    /// 
    /// </summary>
    public partial class ItemBO : BusinessObject, IComparable
    {
        #region fields
        #region Scalar Fields
        private int id;
        private string _description = string.Empty;
        private int? _itemType;
        private string _name = string.Empty;
        private int? _parent;
        #endregion
        
        #region Foreign Key fields
        [NonSerialized][XmlIgnoreAttribute]
        private Indico.BusinessObjects.ItemTypeBO _objItemType;
        [NonSerialized][XmlIgnoreAttribute]
        private Indico.BusinessObjects.ItemBO _objParent;
        #endregion
        
        #region Foreign Table Foreign Key fields
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.HSCodeBO> hSCodesWhereThisIsItemSubCategoryList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _hSCodesWhereThisIsItemSubCategoryLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.ItemBO> itemsWhereThisIsParentList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _itemsWhereThisIsParentLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.ItemAttributeBO> itemAttributesWhereThisIsItemList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _itemAttributesWhereThisIsItemLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.ItemMeasurementGuideImageBO> itemMeasurementGuideImagesWhereThisIsItemList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _itemMeasurementGuideImagesWhereThisIsItemLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.MeasurementLocationBO> measurementLocationsWhereThisIsItemList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _measurementLocationsWhereThisIsItemLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.PatternBO> patternsWhereThisIsItemList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _patternsWhereThisIsItemLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.PatternBO> patternsWhereThisIsSubItemList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _patternsWhereThisIsSubItemLoaded;
        #endregion
        
        #region Other fields
        
        private Indico.DAL.Item _objDAL = null;
        private bool _doNotUpdateDALObject = false;
        
        #endregion
        
        #endregion
        
        #region Properties
        /// <summary>The Primary Key for this object</summary>
        public int ID
        {   get {return id;}
            set 
            {
                OnIDChanging(value);
                id = value;
                OnIDChanged();
            }
        }
        
        /// <summary>The description of the Item. The maximum length of this property is 512.</summary>
        public string Description
        {   
            get {return _description;}
            set 
            {
                OnDescriptionChanging(value);
                _description = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.Description = value;
                }
                OnDescriptionChanged();
            }
        }
        /// <summary>.</summary>
        public int? ItemType
        {   
            get {return _itemType;}
            set 
            {
                OnItemTypeChanging(value);
                _itemType = value;
                if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (value != null) && ((int)value != 0))
                {
                    this.ObjDAL.ItemType = (from o in this._context.Context.ItemType
                                           where o.ID == (int)value
                                           select o).ToList<Indico.DAL.ItemType>()[0];
                }
                else if (value == null || !this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (int)value == 0)
                    this.ObjDAL.ItemType = null;
                OnItemTypeChanged();
            }
        }
        /// <summary>The name of the Item. The maximum length of this property is 64.</summary>
        public string Name
        {   
            get {return _name;}
            set 
            {
                OnNameChanging(value);
                _name = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.Name = value;
                }
                OnNameChanged();
            }
        }
        /// <summary>The parent of the Item, if this is a sub item.</summary>
        public int? Parent
        {   
            get {return _parent;}
            set 
            {
                OnParentChanging(value);
                _parent = value;
                if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (value != null) && ((int)value != 0))
                {
                    this.ObjDAL.Parent = (from o in this._context.Context.Item
                                           where o.ID == (int)value
                                           select o).ToList<Indico.DAL.Item>()[0];
                }
                else if (value == null || !this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (int)value == 0)
                    this.ObjDAL.Parent = null;
                OnParentChanged();
            }
        }
        
        internal Indico.DAL.Item ObjDAL
        {
            get 
            {
                if (_objDAL == null && base._createDAL)
                {
                    _objDAL = this.SetDAL(this.Context.Context);
                    this.ObjDAL.PropertyChanged += new System.ComponentModel.PropertyChangedEventHandler(obj_PropertyChanged);
                }

                return _objDAL;
            }
            set 
            {
                _objDAL = value;
            }
        }
        
        #endregion
        
        #region Non-scalar Properties
        
        #region Foreign Key Objects
        ///<summary>The ItemTypeBO object identified by the value of ItemType</summary>
        [XmlIgnoreAttribute]
        public Indico.BusinessObjects.ItemTypeBO objItemType
        {
            get
            {
                if (_itemType != null && _itemType > 0 && _objItemType == null)
                {
                        if (this._context == null)
                        {
                            _objItemType = new Indico.BusinessObjects.ItemTypeBO();
                        }
                        else
                        {
                            _objItemType = new Indico.BusinessObjects.ItemTypeBO(ref this._context);
                        }
                        _objItemType.ID = Convert.ToInt32(_itemType);
                        _objItemType.GetObject(); 
                }
                return _objItemType;
            }
            set
            { 
                _objItemType = value;
                _itemType = _objItemType.ID;
            }
        }
        ///<summary>The ItemBO object identified by the value of Parent</summary>
        [XmlIgnoreAttribute]
        public Indico.BusinessObjects.ItemBO objParent
        {
            get
            {
                if (_parent != null && _parent > 0 && _objParent == null)
                {
                        if (this._context == null)
                        {
                            _objParent = new Indico.BusinessObjects.ItemBO();
                        }
                        else
                        {
                            _objParent = new Indico.BusinessObjects.ItemBO(ref this._context);
                        }
                        _objParent.ID = Convert.ToInt32(_parent);
                        _objParent.GetObject(); 
                }
                return _objParent;
            }
            set
            { 
                _objParent = value;
                _parent = _objParent.ID;
            }
        }
        #endregion
        
        #region Foreign Object Foreign Key Collections
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.HSCodeBO> HSCodesWhereThisIsItemSubCategory // FK_HSCode_ItemSubCategory
        {
            get
            {
                if (!_hSCodesWhereThisIsItemSubCategoryLoaded)
                {
                    _hSCodesWhereThisIsItemSubCategoryLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.Item obj = (from o in context.Item
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.HSCodesWhereThisIsItemSubCategory.Load();
                        hSCodesWhereThisIsItemSubCategoryList = new IndicoList<Indico.BusinessObjects.HSCodeBO>(obj.HSCodesWhereThisIsItemSubCategory.Count);
                        
                        foreach (Indico.DAL.HSCode o in obj.HSCodesWhereThisIsItemSubCategory)
                        {
                            Indico.BusinessObjects.HSCodeBO fkObj = new Indico.BusinessObjects.HSCodeBO(o, ref this._context);
                            hSCodesWhereThisIsItemSubCategoryList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        hSCodesWhereThisIsItemSubCategoryList = new IndicoList<Indico.BusinessObjects.HSCodeBO>();
                    }
                    
                    hSCodesWhereThisIsItemSubCategoryList.OnBeforeRemove += new EventHandler(HSCodesWhereThisIsItemSubCategoryList_OnBeforeRemove);
                    hSCodesWhereThisIsItemSubCategoryList.OnAfterAdd += new EventHandler(HSCodesWhereThisIsItemSubCategoryList_OnAfterAdd);
                }
                
                return hSCodesWhereThisIsItemSubCategoryList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.ItemBO> ItemsWhereThisIsParent // FK_Item_Parent
        {
            get
            {
                if (!_itemsWhereThisIsParentLoaded)
                {
                    _itemsWhereThisIsParentLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.Item obj = (from o in context.Item
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.ItemsWhereThisIsParent.Load();
                        itemsWhereThisIsParentList = new IndicoList<Indico.BusinessObjects.ItemBO>(obj.ItemsWhereThisIsParent.Count);
                        
                        foreach (Indico.DAL.Item o in obj.ItemsWhereThisIsParent)
                        {
                            Indico.BusinessObjects.ItemBO fkObj = new Indico.BusinessObjects.ItemBO(o, ref this._context);
                            itemsWhereThisIsParentList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        itemsWhereThisIsParentList = new IndicoList<Indico.BusinessObjects.ItemBO>();
                    }
                    
                    itemsWhereThisIsParentList.OnBeforeRemove += new EventHandler(ItemsWhereThisIsParentList_OnBeforeRemove);
                    itemsWhereThisIsParentList.OnAfterAdd += new EventHandler(ItemsWhereThisIsParentList_OnAfterAdd);
                }
                
                return itemsWhereThisIsParentList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.ItemAttributeBO> ItemAttributesWhereThisIsItem // FK_ItemAttribute_Item
        {
            get
            {
                if (!_itemAttributesWhereThisIsItemLoaded)
                {
                    _itemAttributesWhereThisIsItemLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.Item obj = (from o in context.Item
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.ItemAttributesWhereThisIsItem.Load();
                        itemAttributesWhereThisIsItemList = new IndicoList<Indico.BusinessObjects.ItemAttributeBO>(obj.ItemAttributesWhereThisIsItem.Count);
                        
                        foreach (Indico.DAL.ItemAttribute o in obj.ItemAttributesWhereThisIsItem)
                        {
                            Indico.BusinessObjects.ItemAttributeBO fkObj = new Indico.BusinessObjects.ItemAttributeBO(o, ref this._context);
                            itemAttributesWhereThisIsItemList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        itemAttributesWhereThisIsItemList = new IndicoList<Indico.BusinessObjects.ItemAttributeBO>();
                    }
                    
                    itemAttributesWhereThisIsItemList.OnBeforeRemove += new EventHandler(ItemAttributesWhereThisIsItemList_OnBeforeRemove);
                    itemAttributesWhereThisIsItemList.OnAfterAdd += new EventHandler(ItemAttributesWhereThisIsItemList_OnAfterAdd);
                }
                
                return itemAttributesWhereThisIsItemList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.ItemMeasurementGuideImageBO> ItemMeasurementGuideImagesWhereThisIsItem // FK_ItemMeasurementGuideImage_Item
        {
            get
            {
                if (!_itemMeasurementGuideImagesWhereThisIsItemLoaded)
                {
                    _itemMeasurementGuideImagesWhereThisIsItemLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.Item obj = (from o in context.Item
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.ItemMeasurementGuideImagesWhereThisIsItem.Load();
                        itemMeasurementGuideImagesWhereThisIsItemList = new IndicoList<Indico.BusinessObjects.ItemMeasurementGuideImageBO>(obj.ItemMeasurementGuideImagesWhereThisIsItem.Count);
                        
                        foreach (Indico.DAL.ItemMeasurementGuideImage o in obj.ItemMeasurementGuideImagesWhereThisIsItem)
                        {
                            Indico.BusinessObjects.ItemMeasurementGuideImageBO fkObj = new Indico.BusinessObjects.ItemMeasurementGuideImageBO(o, ref this._context);
                            itemMeasurementGuideImagesWhereThisIsItemList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        itemMeasurementGuideImagesWhereThisIsItemList = new IndicoList<Indico.BusinessObjects.ItemMeasurementGuideImageBO>();
                    }
                    
                    itemMeasurementGuideImagesWhereThisIsItemList.OnBeforeRemove += new EventHandler(ItemMeasurementGuideImagesWhereThisIsItemList_OnBeforeRemove);
                    itemMeasurementGuideImagesWhereThisIsItemList.OnAfterAdd += new EventHandler(ItemMeasurementGuideImagesWhereThisIsItemList_OnAfterAdd);
                }
                
                return itemMeasurementGuideImagesWhereThisIsItemList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.MeasurementLocationBO> MeasurementLocationsWhereThisIsItem // FK_MeasurementLocation_Item
        {
            get
            {
                if (!_measurementLocationsWhereThisIsItemLoaded)
                {
                    _measurementLocationsWhereThisIsItemLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.Item obj = (from o in context.Item
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.MeasurementLocationsWhereThisIsItem.Load();
                        measurementLocationsWhereThisIsItemList = new IndicoList<Indico.BusinessObjects.MeasurementLocationBO>(obj.MeasurementLocationsWhereThisIsItem.Count);
                        
                        foreach (Indico.DAL.MeasurementLocation o in obj.MeasurementLocationsWhereThisIsItem)
                        {
                            Indico.BusinessObjects.MeasurementLocationBO fkObj = new Indico.BusinessObjects.MeasurementLocationBO(o, ref this._context);
                            measurementLocationsWhereThisIsItemList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        measurementLocationsWhereThisIsItemList = new IndicoList<Indico.BusinessObjects.MeasurementLocationBO>();
                    }
                    
                    measurementLocationsWhereThisIsItemList.OnBeforeRemove += new EventHandler(MeasurementLocationsWhereThisIsItemList_OnBeforeRemove);
                    measurementLocationsWhereThisIsItemList.OnAfterAdd += new EventHandler(MeasurementLocationsWhereThisIsItemList_OnAfterAdd);
                }
                
                return measurementLocationsWhereThisIsItemList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.PatternBO> PatternsWhereThisIsItem // FK_Pattern_Item
        {
            get
            {
                if (!_patternsWhereThisIsItemLoaded)
                {
                    _patternsWhereThisIsItemLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.Item obj = (from o in context.Item
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.PatternsWhereThisIsItem.Load();
                        patternsWhereThisIsItemList = new IndicoList<Indico.BusinessObjects.PatternBO>(obj.PatternsWhereThisIsItem.Count);
                        
                        foreach (Indico.DAL.Pattern o in obj.PatternsWhereThisIsItem)
                        {
                            Indico.BusinessObjects.PatternBO fkObj = new Indico.BusinessObjects.PatternBO(o, ref this._context);
                            patternsWhereThisIsItemList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        patternsWhereThisIsItemList = new IndicoList<Indico.BusinessObjects.PatternBO>();
                    }
                    
                    patternsWhereThisIsItemList.OnBeforeRemove += new EventHandler(PatternsWhereThisIsItemList_OnBeforeRemove);
                    patternsWhereThisIsItemList.OnAfterAdd += new EventHandler(PatternsWhereThisIsItemList_OnAfterAdd);
                }
                
                return patternsWhereThisIsItemList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.PatternBO> PatternsWhereThisIsSubItem // FK_Pattern_SubItem
        {
            get
            {
                if (!_patternsWhereThisIsSubItemLoaded)
                {
                    _patternsWhereThisIsSubItemLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.Item obj = (from o in context.Item
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.PatternsWhereThisIsSubItem.Load();
                        patternsWhereThisIsSubItemList = new IndicoList<Indico.BusinessObjects.PatternBO>(obj.PatternsWhereThisIsSubItem.Count);
                        
                        foreach (Indico.DAL.Pattern o in obj.PatternsWhereThisIsSubItem)
                        {
                            Indico.BusinessObjects.PatternBO fkObj = new Indico.BusinessObjects.PatternBO(o, ref this._context);
                            patternsWhereThisIsSubItemList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        patternsWhereThisIsSubItemList = new IndicoList<Indico.BusinessObjects.PatternBO>();
                    }
                    
                    patternsWhereThisIsSubItemList.OnBeforeRemove += new EventHandler(PatternsWhereThisIsSubItemList_OnBeforeRemove);
                    patternsWhereThisIsSubItemList.OnAfterAdd += new EventHandler(PatternsWhereThisIsSubItemList_OnAfterAdd);
                }
                
                return patternsWhereThisIsSubItemList;
            }
        }
        #endregion
        
        #endregion
        
        #region Internal Constructors
        /// <summary>
        /// Creates an instance of the ItemBO class using the supplied Indico.DAL.Item. 
        /// </summary>
        /// <param name="obj">a Indico.DAL.Item whose properties will be used to initialise the ItemBO</param>
        internal ItemBO(Indico.DAL.Item obj, ref IndicoContext context)
        {
            this._doNotUpdateDALObject = true;
            
            this.Context = context;
        
            // set the properties from the Indico.DAL.Item 
            this.ID = obj.ID;
            
            this.Description = obj.Description;
            this.ItemType = (obj.ItemTypeReference.EntityKey != null && obj.ItemTypeReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.ItemTypeReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.Name = obj.Name;
            this.Parent = (obj.ParentReference.EntityKey != null && obj.ParentReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.ParentReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            
            this._doNotUpdateDALObject = false;
        }
        #endregion
        
        #region Internal utility methods
        internal Indico.DAL.Item SetDAL(IndicoEntities context)
        {
            this._doNotUpdateDALObject = true;
        
            // set the Indico.DAL.Item properties
            Indico.DAL.Item obj = new Indico.DAL.Item();
            
            if (this.ID > 0)
            {
                obj = context.Item.FirstOrDefault<Item>(o => o.ID == this.ID);
            }
            
            obj.Description = this.Description;
            obj.Name = this.Name;
            
            if (this.ItemType != null && this.ItemType > 0) obj.ItemType = context.ItemType.FirstOrDefault(o => o.ID == this.ItemType);
            if (this.Parent != null && this.Parent > 0) obj.Parent = context.Item.FirstOrDefault(o => o.ID == this.Parent);
            
            if (_hSCodesWhereThisIsItemSubCategoryLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.HSCodeBO.ToEntityList(this.HSCodesWhereThisIsItemSubCategory, context), 
                    obj.HSCodesWhereThisIsItemSubCategory);
            if (_itemsWhereThisIsParentLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.ItemBO.ToEntityList(this.ItemsWhereThisIsParent, context), 
                    obj.ItemsWhereThisIsParent);
            if (_itemAttributesWhereThisIsItemLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.ItemAttributeBO.ToEntityList(this.ItemAttributesWhereThisIsItem, context), 
                    obj.ItemAttributesWhereThisIsItem);
            if (_itemMeasurementGuideImagesWhereThisIsItemLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.ItemMeasurementGuideImageBO.ToEntityList(this.ItemMeasurementGuideImagesWhereThisIsItem, context), 
                    obj.ItemMeasurementGuideImagesWhereThisIsItem);
            if (_measurementLocationsWhereThisIsItemLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.MeasurementLocationBO.ToEntityList(this.MeasurementLocationsWhereThisIsItem, context), 
                    obj.MeasurementLocationsWhereThisIsItem);
            if (_patternsWhereThisIsItemLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.PatternBO.ToEntityList(this.PatternsWhereThisIsItem, context), 
                    obj.PatternsWhereThisIsItem);
            if (_patternsWhereThisIsSubItemLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.PatternBO.ToEntityList(this.PatternsWhereThisIsSubItem, context), 
                    obj.PatternsWhereThisIsSubItem);
            
            this._doNotUpdateDALObject = false;
            
            return obj;
        }
        
        internal void SetBO(System.Data.Objects.DataClasses.EntityObject eObj)
        {
            this._doNotUpdateDALObject = true;
            
            // Check the received type
            if (eObj.GetType() != typeof(Indico.DAL.Item))
            {
                throw new FormatException("Received wrong parameter type...");
            }

            Indico.DAL.Item obj = (Indico.DAL.Item)eObj;
            
            // set the Indico.BusinessObjects.ItemBO properties
            this.ID = obj.ID;
            
            this.Description = obj.Description;
            this.Name = obj.Name;
            
            this.ItemType = (obj.ItemTypeReference.EntityKey != null && obj.ItemTypeReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.ItemTypeReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.Parent = (obj.ParentReference.EntityKey != null && obj.ParentReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.ParentReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            
            this._doNotUpdateDALObject = false;
        }
        
        internal void SetBO(Indico.BusinessObjects.ItemBO obj)
        {
            this._doNotUpdateDALObject = true;
            
            // set this Indico.BusinessObjects.ItemBO properties
            this.ID = obj.ID;
            
            this.Description = obj.Description;
            this.ItemType = obj.ItemType;
            this.Name = obj.Name;
            this.Parent = obj.Parent;
            
            this._doNotUpdateDALObject = false;
        }
        
        internal List<Indico.BusinessObjects.ItemBO> IQueryableToList(IQueryable<Indico.DAL.Item> oQuery)
        {
            List<Indico.DAL.Item> oList = oQuery.ToList();
            List<Indico.BusinessObjects.ItemBO> rList = new List<Indico.BusinessObjects.ItemBO>(oList.Count);
            foreach (Indico.DAL.Item o in oList)
            {
                Indico.BusinessObjects.ItemBO obj = new Indico.BusinessObjects.ItemBO(o, ref this._context);
                rList.Add(obj);
            }
            return rList;
        }
        
        internal List<Indico.BusinessObjects.ItemBO> ToList(IEnumerable<Indico.DAL.Item> oQuery)
        {
            List<Indico.DAL.Item> oList = oQuery.ToList();
            List<Indico.BusinessObjects.ItemBO> rList = new List<Indico.BusinessObjects.ItemBO>(oList.Count);
            foreach (Indico.DAL.Item o in oList)
            {
                Indico.BusinessObjects.ItemBO obj = new Indico.BusinessObjects.ItemBO(o, ref this._context);
                rList.Add(obj);
            }
            return rList;
        }
        
        internal static List<Indico.DAL.Item> ToEntityList(List<ItemBO> bos, IndicoEntities context)
        {
            // build a List of Item entities from the business objects
            List<Int32> ids = (from o in bos
                                   select o.ID).ToList<Int32>();

            return (context.Item.Count() == 0) ? new List<Indico.DAL.Item>() : (context.Item.Where(BuildContainsExpression<Item, int>(e => e.ID, ids)))
                .ToList<Indico.DAL.Item>();
        }
        
        internal static System.Data.Objects.DataClasses.EntityCollection<Indico.DAL.Item> ToEntityCollection(List<ItemBO> bos, IndicoEntities context)
        {
            // build an EntityCollection of Item entities from the business objects
            List<Int32> ids = (from o in bos
                               select o.ID).ToList<Int32>();

            List<Indico.DAL.Item> el = (context.Item.Count() == 0) ? new List<Indico.DAL.Item>() : 
                context.Item.Where(BuildContainsExpression<Item, int>(e => e.ID, ids))
                .ToList<Indico.DAL.Item>();
                
            System.Data.Objects.DataClasses.EntityCollection<Indico.DAL.Item> ec 
                = new System.Data.Objects.DataClasses.EntityCollection<Indico.DAL.Item>();
                
            foreach (Indico.DAL.Item r in el) 
            {
                ec.Add(r);
            }
            return ec;
        }

        internal Indico.DAL.Item ToEntity(IndicoEntities context)
        {
            return (from o in context.Item
                    where o.ID == this.ID
                    select o).FirstOrDefault();
        }
        #endregion
        
        #region BusinessObject methods
        
        #region Add Object
        
        public void Add()
        {
            if (this.Context != null)
            {
                this.Context.Context.AddToItem(this.ObjDAL);
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                Indico.DAL.Item obj = this.SetDAL(objContext.Context);
                objContext.Context.AddToItem(obj);
                objContext.SaveChanges();
                objContext.Dispose(); 
            }
        }
        
        #endregion
        
        #region Delete Object
        
        public void Delete()
        {
            if (this.Context != null)
            {
                if (this.ObjDAL != null && this.ObjDAL.EntityKey != null)
                {
                    if (this.ObjDAL.EntityState == System.Data.EntityState.Detached)
                    {
                        this.Context.Context.Attach(this.ObjDAL);
                        this.Context.Context.DeleteObject(this.ObjDAL);
                    }
                    else
                    {
                        this.Context.Context.DeleteObject(this.ObjDAL);
                    }
                }
                else
                {
                    Indico.DAL.Item obj = this.SetDAL(this.Context.Context);
                    this.Context.Context.DeleteObject(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                Indico.DAL.Item obj = this.SetDAL(objContext.Context);
                this.Context.Context.DeleteObject(obj);
                objContext.Context.SaveChanges();
                objContext.Dispose();
            }
        }
        
        #endregion
        
        #region Get Single Object
        
        public bool GetObject()
        {
            return GetObject(true);
        }
        public bool GetObject(bool blnCache)
        {
            Indico.BusinessObjects.ItemBO data = null;
            
            if (blnCache)
            {
                data = this.GetFromCache(this.ID) as Indico.BusinessObjects.ItemBO; 
            }

            if (data != null)
            {
                SetBO(data);
            }
            else
            {
                try
                {
                    IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                    IQueryable<Indico.DAL.Item> oQuery =
                        from o in context.Item
                        where o.ID == this.ID
                        select o;

                    List<Indico.DAL.Item> oList = oQuery.ToList();
                    if (oList.Count != 1)
                        return false;
                    else
                    {
                        SetBO(oList[0]);
                        this.Cache();
                    }
                    
                    if (this.Context == null)
                    {
                        context.Dispose();
                    }
                }
                catch (System.Exception e)
                {
                    throw new IndicoException(String.Format(System.Globalization.CultureInfo.InvariantCulture, ResourceManager.GetString("Could not Retrieve a {0} from the data store", System.Globalization.CultureInfo.CurrentCulture), this.ToString()), e, IndicoException.Severities.USER, IndicoException.ERRNO.INT_ERR_BO_SELECT_FAIL);
                }
            }
            return true;
        }
        #endregion
        
        #region GetAllObject
        public List<Indico.BusinessObjects.ItemBO> GetAllObject()
        {
            return GetAllObject(0, 0);
        }
        public List<Indico.BusinessObjects.ItemBO> GetAllObject(int maximumRows)
        {
            return GetAllObject(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.ItemBO> GetAllObject(int maximumRows, int startIndex)
        {
            return GetAllObject(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.ItemBO> GetAllObject(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = new IndicoEntities();
            IQueryable<Indico.DAL.Item> oQuery =
                (from o in context.Item
                 orderby o.ID
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.ID).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.ItemBO> items = IQueryableToList(oQuery);
            context.Dispose();
            return items;
        }
        #endregion
        
        #region SearchObjects
        public List<Indico.BusinessObjects.ItemBO> SearchObjects()
        {
            return SearchObjects(0,0);
        }
        public List<Indico.BusinessObjects.ItemBO> SearchObjects(int maximumRows)
        {
            return SearchObjects(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.ItemBO> SearchObjects(int maximumRows, int startIndex)
        {
            return SearchObjects(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.ItemBO> SearchObjects(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            IQueryable<Indico.DAL.Item> oQuery =
                (from o in context.Item
                 where
                    (this.ID == 0 || this.ID == o.ID) &&
                    (this.Name == string.Empty || this.Name == o.Name) &&
                    (this.Description == string.Empty || this.Description == o.Description) &&
                    (this.Parent == null || this.Parent == o.Parent.ID) &&
                    (this.ItemType == null || this.ItemType == o.ItemType.ID) 
                 orderby o.ID
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.ID).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.ItemBO> items = IQueryableToList(oQuery);
            
            if (this.Context == null)
            {
                context.Dispose();
            }
            
            return items;
        }
        
        public int SearchObjectsCount()
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            return (from o in context.Item
                 where
                    (this.ID == 0 || this.ID == o.ID) &&
                    (this.Name == string.Empty || this.Name == o.Name) &&
                    (this.Description == string.Empty || this.Description == o.Description) &&
                    (this.Parent == null || this.Parent == o.Parent.ID) &&
                    (this.ItemType == null || this.ItemType == o.ItemType.ID) 
                 orderby o.ID
                 select o).Count();
        }
        #endregion
        
        #region SearchObjectsLikeAnd
        public List<Indico.BusinessObjects.ItemBO> SearchLikeAndObjects()
        {
            return SearchLikeAndObjects(0);
        }
        public List<Indico.BusinessObjects.ItemBO> SearchLikeAndObjects(int maximumRows)
        {
            return SearchLikeAndObjects(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.ItemBO> SearchLikeAndObjects(int maximumRows, int startIndex)
        {
            return SearchLikeAndObjects(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.ItemBO> SearchLikeAndObjects(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            IQueryable<Indico.DAL.Item> oQuery =
                (from o in context.Item
                 where
                    (this.ID == 0 || o.ID == this.ID) &&
                    (this.Name == string.Empty || o.Name.Contains(this.Name)) &&
                    (this.Description == string.Empty || o.Description.Contains(this.Description)) &&
                    (this.Parent == null || o.Parent.ID == this.Parent) &&
                    (this.ItemType == null || o.ItemType.ID == this.ItemType) 
                 orderby o.ID
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.ID).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.ItemBO> items = IQueryableToList(oQuery);
            if (this.Context == null)
            {
                context.Dispose();
            }
            
            return items;
        }
        
        public int SearchLikeAndObjectsCount()
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            return (from o in context.Item
                 where
                    (this.ID == 0 || o.ID == this.ID) &&
                    (this.Name == string.Empty || o.Name.Contains(this.Name)) &&
                    (this.Description == string.Empty || o.Description.Contains(this.Description)) &&
                    (this.Parent == null || o.Parent.ID == this.Parent) &&
                    (this.ItemType == null || o.ItemType.ID == this.ItemType) 
                 orderby o.ID
                 select o).Count();
            
        }
        #endregion
        
        #region SearchObjectsLikeOr
        public List<Indico.BusinessObjects.ItemBO> SearchLikeOrObjects()
        {
            return SearchLikeOrObjects(0);
        }
        public List<Indico.BusinessObjects.ItemBO> SearchLikeOrObjects(int maximumRows)
        {
            return SearchLikeOrObjects(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.ItemBO> SearchLikeOrObjects(int maximumRows, int startIndex)
        {
            return SearchLikeOrObjects(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.ItemBO> SearchLikeOrObjects(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            IQueryable<Indico.DAL.Item> oQuery =
                (from o in context.Item
                 where
                    (this.ID == 0 || this.ID == o.ID) && 
                    (this.Parent == null || this.Parent == o.Parent.ID) && 
                    (this.ItemType == null || this.ItemType == o.ItemType.ID) && 
                    ((o.Name.Contains(this.Name)) ||
                    (o.Description.Contains(this.Description)) ||
                    (this.Name == null && this.Description == null ))
                 orderby o.ID
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.ID).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.ItemBO> items = IQueryableToList(oQuery);
            if (this.Context == null)
            {
                context.Dispose();
            }
            
            return items;
        }
        
        public int SearchLikeOrObjectsCount()
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            return (from o in context.Item
                 where
                    (this.ID == 0 || this.ID == o.ID) && 
                    (this.Parent == null || this.Parent == o.Parent.ID) && 
                    (this.ItemType == null || this.ItemType == o.ItemType.ID) && 
                    ((o.Name.Contains(this.Name)) ||
                    (o.Description.Contains(this.Description)) ||
                    (this.Name == null && this.Description == null ))
                 orderby o.ID
                 select o).Count();
            
        }
        #endregion
        
        #region Serialization methods
        /// <summary>
        /// Serializes the Indico.BusinessObjects.ItemBO to an XML representation
        /// </summary>
        /// <returns>a XML string serialized representation</returns>
        public string SerializeObject()
        {
            string strReturn = "";

            System.IO.MemoryStream objStream = new System.IO.MemoryStream();

            System.Xml.Serialization.XmlSerializer x = new System.Xml.Serialization.XmlSerializer(this.GetType());

            x.Serialize(objStream, this);

            System.Text.Encoding encoding = System.Text.Encoding.UTF8;
            // Read string from binary file with UTF8 encoding
            strReturn = encoding.GetString(objStream.GetBuffer());

            objStream.Close();
            return strReturn;

        }

        /// <summary>
        /// Deserializes Indico.BusinessObjects.ItemBO object from an XML representation
        /// </summary>
        /// <param name="strXML">a XML string serialized representation</param>
        public Indico.BusinessObjects.ItemBO DeserializeObject(string strXML)
        {
            Indico.BusinessObjects.ItemBO objTemp = null;
            System.Xml.XmlDocument objXML = new System.Xml.XmlDocument();

            objXML.LoadXml(strXML);
            System.Text.Encoding encoding = System.Text.Encoding.UTF8;

            System.IO.MemoryStream objStream = new System.IO.MemoryStream();
            byte[] b = encoding.GetBytes(objXML.OuterXml);

            objStream.Write(b, 0, (int)b.Length);
            objStream.Position = 0;
            System.Xml.Serialization.XmlSerializer x = new System.Xml.Serialization.XmlSerializer(this.GetType());

            objTemp = (Indico.BusinessObjects.ItemBO)x.Deserialize(objStream);
            objStream.Close();
            return objTemp;
        }

        /// <summary>
        /// Returns a simple XML representation of Indico.BusinessObjects.ItemBO object in an XmlElement
        /// </summary>
        /// <returns>An XML snippet representing the object</returns>
        public string ToXmlString()
        {
            // MW TODO - implement this better.
            return SerializeObject();
        }
        #endregion
        
        #region OnPropertyChange Methods
        partial void OnIDChanged()
        {
            OnItemBOIDChanged();
        }
        
        partial void OnIDChanging(int value)
        {
            if (value < 0)
            {
                throw new Exception(String.Format("ItemBO.ID must be more than or equal to 0. The supplied value was {0}.", value));
            }
            OnItemBOIDChanging(value);
        }
        partial void OnIDChanged();
        partial void OnIDChanging(int value);
        partial void OnItemBOIDChanged();
        partial void OnItemBOIDChanging(int value);
        
        partial void OnNameChanged()
        {
            OnItemBONameChanged();
        }
        
        partial void OnNameChanging(string value)
        {
            if (value != null && value.Length > 64)
            {
                throw new Exception(String.Format("ItemBO.Name has a maximum length of 64. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnItemBONameChanging(value);
        }
        partial void OnNameChanged();
        partial void OnNameChanging(string value);
        partial void OnItemBONameChanged();
        partial void OnItemBONameChanging(string value);
        
        partial void OnDescriptionChanged()
        {
            OnItemBODescriptionChanged();
        }
        
        partial void OnDescriptionChanging(string value)
        {
            if (value != null && value.Length > 512)
            {
                throw new Exception(String.Format("ItemBO.Description has a maximum length of 512. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnItemBODescriptionChanging(value);
        }
        partial void OnDescriptionChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnItemBODescriptionChanged();
        partial void OnItemBODescriptionChanging(string value);
        
        partial void OnParentChanged()
        {
            OnItemBOParentChanged();
        }
        
        partial void OnParentChanging(int? value)
        {
            if (value != null && value < 0)
            {
                throw new Exception(String.Format("ItemBO.Parent must be null or more than or equal to 0. The supplied value was {0}.", value));
            }
            OnItemBOParentChanging(value);
        }
        partial void OnParentChanged();
        partial void OnParentChanging(int? value);
        partial void OnItemBOParentChanged();
        partial void OnItemBOParentChanging(int? value);
        
        partial void OnItemTypeChanged()
        {
            OnItemBOItemTypeChanged();
        }
        
        partial void OnItemTypeChanging(int? value)
        {
            if (value != null && value < 0)
            {
                throw new Exception(String.Format("ItemBO.ItemType must be null or more than or equal to 0. The supplied value was {0}.", value));
            }
            OnItemBOItemTypeChanging(value);
        }
        partial void OnItemTypeChanged();
        partial void OnItemTypeChanging(int? value);
        partial void OnItemBOItemTypeChanged();
        partial void OnItemBOItemTypeChanging(int? value);
        
        #endregion
        
        #region IComparable Members

        public int CompareTo(object obj)
        {
            if (!(obj is Indico.BusinessObjects.ItemBO))
                return 1;
            Indico.BusinessObjects.ItemBOComparer c = new Indico.BusinessObjects.ItemBOComparer();
            return c.Compare(this, obj as Indico.BusinessObjects.ItemBO);
        }

        #endregion
        #endregion
        
        #region Events
        
        void obj_PropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e)
        {
            if (e.PropertyName == "ID")
            {
                // reload me
                this.SetBO((Indico.DAL.Item)sender);
            }
        }
        
        void HSCodesWhereThisIsItemSubCategoryList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.HSCode obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.HSCodeBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.HSCodeBO>)sender)[((IndicoList<Indico.BusinessObjects.HSCodeBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.HSCodesWhereThisIsItemSubCategory.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.HSCodeBO>)sender)[((IndicoList<Indico.BusinessObjects.HSCodeBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.HSCodesWhereThisIsItemSubCategory.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void HSCodesWhereThisIsItemSubCategoryList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.HSCode obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.HSCodeBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.HSCodeBO>)sender)[((IndicoList<Indico.BusinessObjects.HSCodeBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.HSCodesWhereThisIsItemSubCategory.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.HSCodeBO>)sender)[((IndicoList<Indico.BusinessObjects.HSCodeBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.HSCodesWhereThisIsItemSubCategory.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void ItemsWhereThisIsParentList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Item obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.ItemBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.ItemBO>)sender)[((IndicoList<Indico.BusinessObjects.ItemBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.ItemsWhereThisIsParent.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.ItemBO>)sender)[((IndicoList<Indico.BusinessObjects.ItemBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.ItemsWhereThisIsParent.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void ItemsWhereThisIsParentList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Item obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.ItemBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.ItemBO>)sender)[((IndicoList<Indico.BusinessObjects.ItemBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.ItemsWhereThisIsParent.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.ItemBO>)sender)[((IndicoList<Indico.BusinessObjects.ItemBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.ItemsWhereThisIsParent.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void ItemAttributesWhereThisIsItemList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.ItemAttribute obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.ItemAttributeBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.ItemAttributeBO>)sender)[((IndicoList<Indico.BusinessObjects.ItemAttributeBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.ItemAttributesWhereThisIsItem.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.ItemAttributeBO>)sender)[((IndicoList<Indico.BusinessObjects.ItemAttributeBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.ItemAttributesWhereThisIsItem.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void ItemAttributesWhereThisIsItemList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.ItemAttribute obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.ItemAttributeBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.ItemAttributeBO>)sender)[((IndicoList<Indico.BusinessObjects.ItemAttributeBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.ItemAttributesWhereThisIsItem.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.ItemAttributeBO>)sender)[((IndicoList<Indico.BusinessObjects.ItemAttributeBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.ItemAttributesWhereThisIsItem.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void ItemMeasurementGuideImagesWhereThisIsItemList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.ItemMeasurementGuideImage obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.ItemMeasurementGuideImageBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.ItemMeasurementGuideImageBO>)sender)[((IndicoList<Indico.BusinessObjects.ItemMeasurementGuideImageBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.ItemMeasurementGuideImagesWhereThisIsItem.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.ItemMeasurementGuideImageBO>)sender)[((IndicoList<Indico.BusinessObjects.ItemMeasurementGuideImageBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.ItemMeasurementGuideImagesWhereThisIsItem.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void ItemMeasurementGuideImagesWhereThisIsItemList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.ItemMeasurementGuideImage obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.ItemMeasurementGuideImageBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.ItemMeasurementGuideImageBO>)sender)[((IndicoList<Indico.BusinessObjects.ItemMeasurementGuideImageBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.ItemMeasurementGuideImagesWhereThisIsItem.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.ItemMeasurementGuideImageBO>)sender)[((IndicoList<Indico.BusinessObjects.ItemMeasurementGuideImageBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.ItemMeasurementGuideImagesWhereThisIsItem.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void MeasurementLocationsWhereThisIsItemList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.MeasurementLocation obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.MeasurementLocationBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.MeasurementLocationBO>)sender)[((IndicoList<Indico.BusinessObjects.MeasurementLocationBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.MeasurementLocationsWhereThisIsItem.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.MeasurementLocationBO>)sender)[((IndicoList<Indico.BusinessObjects.MeasurementLocationBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.MeasurementLocationsWhereThisIsItem.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void MeasurementLocationsWhereThisIsItemList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.MeasurementLocation obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.MeasurementLocationBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.MeasurementLocationBO>)sender)[((IndicoList<Indico.BusinessObjects.MeasurementLocationBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.MeasurementLocationsWhereThisIsItem.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.MeasurementLocationBO>)sender)[((IndicoList<Indico.BusinessObjects.MeasurementLocationBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.MeasurementLocationsWhereThisIsItem.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PatternsWhereThisIsItemList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Pattern obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PatternBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PatternsWhereThisIsItem.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PatternBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PatternsWhereThisIsItem.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PatternsWhereThisIsItemList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Pattern obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PatternBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PatternsWhereThisIsItem.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PatternBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PatternsWhereThisIsItem.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PatternsWhereThisIsSubItemList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Pattern obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PatternBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PatternsWhereThisIsSubItem.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PatternBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PatternsWhereThisIsSubItem.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PatternsWhereThisIsSubItemList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Pattern obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PatternBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PatternsWhereThisIsSubItem.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PatternBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PatternsWhereThisIsSubItem.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void Context_OnSendBeforeChanges(object sender, EventArgs e)
        {        
            this._hSCodesWhereThisIsItemSubCategoryLoaded = false;
            if (this.hSCodesWhereThisIsItemSubCategoryList != null)
            {
                this.hSCodesWhereThisIsItemSubCategoryList.OnBeforeRemove -= new EventHandler(HSCodesWhereThisIsItemSubCategoryList_OnBeforeRemove);
                this.hSCodesWhereThisIsItemSubCategoryList.OnAfterAdd -= new EventHandler(HSCodesWhereThisIsItemSubCategoryList_OnAfterAdd);
            }
            this._itemsWhereThisIsParentLoaded = false;
            if (this.itemsWhereThisIsParentList != null)
            {
                this.itemsWhereThisIsParentList.OnBeforeRemove -= new EventHandler(ItemsWhereThisIsParentList_OnBeforeRemove);
                this.itemsWhereThisIsParentList.OnAfterAdd -= new EventHandler(ItemsWhereThisIsParentList_OnAfterAdd);
            }
            this._itemAttributesWhereThisIsItemLoaded = false;
            if (this.itemAttributesWhereThisIsItemList != null)
            {
                this.itemAttributesWhereThisIsItemList.OnBeforeRemove -= new EventHandler(ItemAttributesWhereThisIsItemList_OnBeforeRemove);
                this.itemAttributesWhereThisIsItemList.OnAfterAdd -= new EventHandler(ItemAttributesWhereThisIsItemList_OnAfterAdd);
            }
            this._itemMeasurementGuideImagesWhereThisIsItemLoaded = false;
            if (this.itemMeasurementGuideImagesWhereThisIsItemList != null)
            {
                this.itemMeasurementGuideImagesWhereThisIsItemList.OnBeforeRemove -= new EventHandler(ItemMeasurementGuideImagesWhereThisIsItemList_OnBeforeRemove);
                this.itemMeasurementGuideImagesWhereThisIsItemList.OnAfterAdd -= new EventHandler(ItemMeasurementGuideImagesWhereThisIsItemList_OnAfterAdd);
            }
            this._measurementLocationsWhereThisIsItemLoaded = false;
            if (this.measurementLocationsWhereThisIsItemList != null)
            {
                this.measurementLocationsWhereThisIsItemList.OnBeforeRemove -= new EventHandler(MeasurementLocationsWhereThisIsItemList_OnBeforeRemove);
                this.measurementLocationsWhereThisIsItemList.OnAfterAdd -= new EventHandler(MeasurementLocationsWhereThisIsItemList_OnAfterAdd);
            }
            this._patternsWhereThisIsItemLoaded = false;
            if (this.patternsWhereThisIsItemList != null)
            {
                this.patternsWhereThisIsItemList.OnBeforeRemove -= new EventHandler(PatternsWhereThisIsItemList_OnBeforeRemove);
                this.patternsWhereThisIsItemList.OnAfterAdd -= new EventHandler(PatternsWhereThisIsItemList_OnAfterAdd);
            }
            this._patternsWhereThisIsSubItemLoaded = false;
            if (this.patternsWhereThisIsSubItemList != null)
            {
                this.patternsWhereThisIsSubItemList.OnBeforeRemove -= new EventHandler(PatternsWhereThisIsSubItemList_OnBeforeRemove);
                this.patternsWhereThisIsSubItemList.OnAfterAdd -= new EventHandler(PatternsWhereThisIsSubItemList_OnAfterAdd);
            }
        }
        
        void Context_OnSendAfterChanges(object sender, EventArgs e)
        {   
            if (this.ID > 0)
            {
                this.Cache();
            }
        }

        #endregion
    }
    
    #region ItemBOComparer
    public class ItemBOComparer : IComparer<Indico.BusinessObjects.ItemBO>
    {
        private string propertyToCompareName;
        public ItemBOComparer(string propertyToCompare)
        {
            PropertyInfo p = typeof(Indico.BusinessObjects.ItemBO).GetProperty(propertyToCompare);
            if (p == null)
                throw new ArgumentException("is not a public property of Indico.BusinessObjects.ItemBO", "propertyToCompare");
            this.propertyToCompareName = propertyToCompare;
        }
        
        public ItemBOComparer()
        {
        
        }

        #region IComparer<Indico.BusinessObjects.ItemBO> Members
        public int Compare(Indico.BusinessObjects.ItemBO x, Indico.BusinessObjects.ItemBO y)
        {
            if (propertyToCompareName != null)
            {
                PropertyInfo p = typeof(Indico.BusinessObjects.ItemBO).GetProperty(propertyToCompareName);
                return compare(p, x, y);
            }
            else
            {
                PropertyInfo[] arrP = typeof(Indico.BusinessObjects.ItemBO).GetProperties();
                foreach (PropertyInfo p in arrP)
                {
                    int v = compare(p, x, y);
                    if (v != 0)
                        return v;
                }
                return 0;
            }
        }

        private int compare(PropertyInfo p, Indico.BusinessObjects.ItemBO x, Indico.BusinessObjects.ItemBO y)
        {
            object xVal = p.GetValue(x, null);
            object yVal = p.GetValue(y, null);

            if (xVal == null)
            {
                if (yVal == null)
                    return 0;
                else
                    return -1; // x is null, y is not, y is greater
            }
            else
            {
                if (y == null)
                    return 1; // x non null, y is null, x is greater
                else if (xVal is string)
                {
                    return StringComparer.OrdinalIgnoreCase.Compare(xVal, yVal);
                }
                else if (xVal is IComparable)
                {
                    return ((IComparable)xVal).CompareTo((IComparable)yVal);
                }
                else
                    throw new ArgumentException
                        ("is not string or valuetype that implements IComparable", "propertyToCompare");

            }
        }

        #endregion
    }
    #endregion
}
