// This file is generated by CodeSmith. Do not edit. All edits to this file will be lost. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Dynamic;
using System.Linq.Expressions;
using System.Reflection;
using System.Xml.Serialization;

using Indico.DAL;

//namespace Indico.BusinessObjects
namespace Indico.BusinessObjects
{
    /// <summary>
    /// 
    /// </summary>
    public partial class UserBO : BusinessObject, IComparable
    {
        #region fields
        #region Scalar Fields
        private int id;
        private int _company;
        private DateTime _createdDate = DateTime.MinValue;
        private int _creator;
        private DateTime? _dateLastLogin;
        private string _designation;
        private string _emailAddress = string.Empty;
        private string _familyName = string.Empty;
        private string _givenName = string.Empty;
        private string _guid;
        private bool? _haveAccessForHTTPPost;
        private string _homeTelephoneNumber;
        private bool _isActive;
        private bool _isDeleted;
        private bool _isDirectSalesPerson;
        private bool _isDistributor;
        private string _mobileTelephoneNumber;
        private DateTime _modifiedDate = DateTime.MinValue;
        private int _modifier;
        private string _officeTelephoneNumber = string.Empty;
        private string _password = string.Empty;
        private string _photoPath;
        private int _status;
        private string _username = string.Empty;
        #endregion
        
        #region Foreign Key fields
        [NonSerialized][XmlIgnoreAttribute]
        private Indico.BusinessObjects.CompanyBO _objCompany;
        [NonSerialized][XmlIgnoreAttribute]
        private Indico.BusinessObjects.UserBO _objCreator;
        [NonSerialized][XmlIgnoreAttribute]
        private Indico.BusinessObjects.UserBO _objModifier;
        [NonSerialized][XmlIgnoreAttribute]
        private Indico.BusinessObjects.UserStatusBO _objStatus;
        #endregion
        
        #region Foreign Table Foreign Key fields
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.BankBO> banksWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _banksWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.BankBO> banksWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _banksWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.CompanyBO> companysWhereThisIsCoordinatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _companysWhereThisIsCoordinatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.CompanyBO> companysWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _companysWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.CompanyBO> companysWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _companysWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.CompanyBO> companysWhereThisIsOwnerList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _companysWhereThisIsOwnerLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.CompanyBO> companysWhereThisIsSecondaryCoordinatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _companysWhereThisIsSecondaryCoordinatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.CoordinatorEmailAddressBO> coordinatorEmailAddresssWhereThisIsUserList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _coordinatorEmailAddresssWhereThisIsUserLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.CostSheetBO> costSheetsWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _costSheetsWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.CostSheetBO> costSheetsWhereThisIsIndimanModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _costSheetsWhereThisIsIndimanModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.CostSheetBO> costSheetsWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _costSheetsWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.CostSheetRemarksBO> costSheetRemarkssWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _costSheetRemarkssWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO> defaultValuesPriceListsWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _defaultValuesPriceListsWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO> defaultValuesPriceListsWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _defaultValuesPriceListsWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.DistributorPriceLevelCostBO> distributorPriceLevelCostsWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _distributorPriceLevelCostsWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.EmbroideryBO> embroiderysWhereThisIsAssignedList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _embroiderysWhereThisIsAssignedLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.EmbroideryBO> embroiderysWhereThisIsCoordinatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _embroiderysWhereThisIsCoordinatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.EmbroideryBO> embroiderysWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _embroiderysWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.EmbroideryBO> embroiderysWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _embroiderysWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.IndimanCostSheetRemarksBO> indimanCostSheetRemarkssWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _indimanCostSheetRemarkssWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.InvoiceBO> invoicesWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _invoicesWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.InvoiceBO> invoicesWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _invoicesWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.JobNameBO> jobNamesWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _jobNamesWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.JobNameBO> jobNamesWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _jobNamesWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.LabelPriceLevelCostBO> labelPriceLevelCostsWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _labelPriceLevelCostsWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.LabelPriceListDownloadsBO> labelPriceListDownloadssWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _labelPriceListDownloadssWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.OrderBO> ordersWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _ordersWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.OrderBO> ordersWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _ordersWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.PackingListBO> packingListsWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _packingListsWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.PackingListBO> packingListsWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _packingListsWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.PatternBO> patternsWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _patternsWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.PatternBO> patternsWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _patternsWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.PatternHistoryBO> patternHistorysWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _patternHistorysWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.PatternSupplierBO> patternSuppliersWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _patternSuppliersWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.PatternSupplierBO> patternSuppliersWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _patternSuppliersWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.PriceBO> pricesWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _pricesWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.PriceBO> pricesWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _pricesWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.PriceChangeEmailListBO> priceChangeEmailListsWhereThisIsUserList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _priceChangeEmailListsWhereThisIsUserLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.PriceLevelCostBO> priceLevelCostsWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _priceLevelCostsWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.PriceLevelCostBO> priceLevelCostsWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _priceLevelCostsWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.PriceLevelNewBO> priceLevelNewsWhereThisIsLastModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _priceLevelNewsWhereThisIsLastModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.PriceListDownloadsBO> priceListDownloadssWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _priceListDownloadssWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.QuoteBO> quotesWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _quotesWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.QuoteBO> quotesWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _quotesWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.QuoteChangeEmailListBO> quoteChangeEmailListsWhereThisIsUserList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _quoteChangeEmailListsWhereThisIsUserLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.ReservationBO> reservationsWhereThisIsCoordinatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _reservationsWhereThisIsCoordinatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.ReservationBO> reservationsWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _reservationsWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.ReservationBO> reservationsWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _reservationsWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.SupplierBO> suppliersWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _suppliersWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.SupplierBO> suppliersWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _suppliersWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.UserBO> usersWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _usersWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.UserBO> usersWhereThisIsModifierList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _usersWhereThisIsModifierLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.UserHistoryBO> userHistorysWhereThisIsCreatorList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _userHistorysWhereThisIsCreatorLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.UserHistoryBO> userHistorysWhereThisIsUserList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _userHistorysWhereThisIsUserLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.UserLoginBO> userLoginsWhereThisIsUserList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _userLoginsWhereThisIsUserLoaded;
        [NonSerialized][XmlIgnoreAttribute]
        private IndicoList<Indico.BusinessObjects.RoleBO> userRolesWhereThisIsUserList;
        [NonSerialized][XmlIgnoreAttribute]
        private bool _userRolesWhereThisIsUserLoaded;
        #endregion
        
        #region Other fields
        
        private Indico.DAL.User _objDAL = null;
        private bool _doNotUpdateDALObject = false;
        
        #endregion
        
        #endregion
        
        #region Properties
        /// <summary>The Primary Key for this object</summary>
        public int ID
        {   get {return id;}
            set 
            {
                OnIDChanging(value);
                id = value;
                OnIDChanged();
            }
        }
        
        /// <summary>Company that belongs to this user.</summary>
        public int Company
        {   
            get {return _company;}
            set 
            {
                OnCompanyChanging(value);
                _company = value;
                if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && ((int)value != 0))
                {
                    this.ObjDAL.Company = (from o in this._context.Context.Company
                                           where o.ID == (int)value
                                           select o).ToList<Indico.DAL.Company>()[0];
                }
                else if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (int)value == 0)
                    this.ObjDAL.Company = null;
                OnCompanyChanged();
            }
        }
        /// <summary>the DateTime this user was created.</summary>
        public DateTime CreatedDate
        {   
            get {return _createdDate;}
            set 
            {
                OnCreatedDateChanging(value);
                _createdDate = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.CreatedDate = value;
                }
                OnCreatedDateChanged();
            }
        }
        /// <summary>The ID of the user who created this user.</summary>
        public int Creator
        {   
            get {return _creator;}
            set 
            {
                OnCreatorChanging(value);
                _creator = value;
                if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && ((int)value != 0))
                {
                    this.ObjDAL.Creator = (from o in this._context.Context.User
                                           where o.ID == (int)value
                                           select o).ToList<Indico.DAL.User>()[0];
                }
                else if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (int)value == 0)
                    this.ObjDAL.Creator = null;
                OnCreatorChanged();
            }
        }
        /// <summary>The DateTime this user last authenticated with the system.</summary>
        public DateTime? DateLastLogin
        {   
            get {return _dateLastLogin;}
            set 
            {
                OnDateLastLoginChanging(value);
                _dateLastLogin = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.DateLastLogin = value;
                }
                OnDateLastLoginChanged();
            }
        }
        /// <summary>. The maximum length of this property is 255.</summary>
        public string Designation
        {   
            get {return _designation;}
            set 
            {
                OnDesignationChanging(value);
                _designation = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.Designation = value;
                }
                OnDesignationChanged();
            }
        }
        /// <summary>the email address associated with this user - all correspondence is directed to this address. The maximum length of this property is 128.</summary>
        public string EmailAddress
        {   
            get {return _emailAddress;}
            set 
            {
                OnEmailAddressChanging(value);
                _emailAddress = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.EmailAddress = value;
                }
                OnEmailAddressChanged();
            }
        }
        /// <summary>the user's family, or surname. The maximum length of this property is 32.</summary>
        public string FamilyName
        {   
            get {return _familyName;}
            set 
            {
                OnFamilyNameChanging(value);
                _familyName = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.FamilyName = value;
                }
                OnFamilyNameChanged();
            }
        }
        /// <summary>The user's given name. The maximum length of this property is 32.</summary>
        public string GivenName
        {   
            get {return _givenName;}
            set 
            {
                OnGivenNameChanging(value);
                _givenName = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.GivenName = value;
                }
                OnGivenNameChanged();
            }
        }
        /// <summary>The guid associated with this user that can be used instead of authentication under certain circumstances. The maximum length of this property is 36.</summary>
        public string Guid
        {   
            get {return _guid;}
            set 
            {
                OnGuidChanging(value);
                _guid = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.Guid = value;
                }
                OnGuidChanged();
            }
        }
        /// <summary>.</summary>
        public bool? HaveAccessForHTTPPost
        {   
            get {return _haveAccessForHTTPPost;}
            set 
            {
                OnHaveAccessForHTTPPostChanging(value);
                _haveAccessForHTTPPost = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.HaveAccessForHTTPPost = value;
                }
                OnHaveAccessForHTTPPostChanged();
            }
        }
        /// <summary>The office telephone number associated with the user. The maximum length of this property is 20.</summary>
        public string HomeTelephoneNumber
        {   
            get {return _homeTelephoneNumber;}
            set 
            {
                OnHomeTelephoneNumberChanging(value);
                _homeTelephoneNumber = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.HomeTelephoneNumber = value;
                }
                OnHomeTelephoneNumberChanged();
            }
        }
        /// <summary>If true, this user is active and is able to authenticate with the system.</summary>
        public bool IsActive
        {   
            get {return _isActive;}
            set 
            {
                OnIsActiveChanging(value);
                _isActive = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.IsActive = value;
                }
                OnIsActiveChanged();
            }
        }
        /// <summary>If true, this user is deleted and is no longer available to the system.</summary>
        public bool IsDeleted
        {   
            get {return _isDeleted;}
            set 
            {
                OnIsDeletedChanging(value);
                _isDeleted = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.IsDeleted = value;
                }
                OnIsDeletedChanged();
            }
        }
        /// <summary>.</summary>
        public bool IsDirectSalesPerson
        {   
            get {return _isDirectSalesPerson;}
            set 
            {
                OnIsDirectSalesPersonChanging(value);
                _isDirectSalesPerson = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.IsDirectSalesPerson = value;
                }
                OnIsDirectSalesPersonChanged();
            }
        }
        /// <summary>.</summary>
        public bool IsDistributor
        {   
            get {return _isDistributor;}
            set 
            {
                OnIsDistributorChanging(value);
                _isDistributor = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.IsDistributor = value;
                }
                OnIsDistributorChanged();
            }
        }
        /// <summary>The home telephone number associated with the user. The maximum length of this property is 20.</summary>
        public string MobileTelephoneNumber
        {   
            get {return _mobileTelephoneNumber;}
            set 
            {
                OnMobileTelephoneNumberChanging(value);
                _mobileTelephoneNumber = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.MobileTelephoneNumber = value;
                }
                OnMobileTelephoneNumberChanged();
            }
        }
        /// <summary>the DateTime this user was last updated.</summary>
        public DateTime ModifiedDate
        {   
            get {return _modifiedDate;}
            set 
            {
                OnModifiedDateChanging(value);
                _modifiedDate = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.ModifiedDate = value;
                }
                OnModifiedDateChanged();
            }
        }
        /// <summary>The ID of the user who last modified this user.</summary>
        public int Modifier
        {   
            get {return _modifier;}
            set 
            {
                OnModifierChanging(value);
                _modifier = value;
                if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && ((int)value != 0))
                {
                    this.ObjDAL.Modifier = (from o in this._context.Context.User
                                           where o.ID == (int)value
                                           select o).ToList<Indico.DAL.User>()[0];
                }
                else if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (int)value == 0)
                    this.ObjDAL.Modifier = null;
                OnModifierChanged();
            }
        }
        /// <summary>The mobile telephone number number associated with the user. The maximum length of this property is 20.</summary>
        public string OfficeTelephoneNumber
        {   
            get {return _officeTelephoneNumber;}
            set 
            {
                OnOfficeTelephoneNumberChanging(value);
                _officeTelephoneNumber = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.OfficeTelephoneNumber = value;
                }
                OnOfficeTelephoneNumberChanged();
            }
        }
        /// <summary>The password used for authentication. The maximum length of this property is 255.</summary>
        public string Password
        {   
            get {return _password;}
            set 
            {
                OnPasswordChanging(value);
                _password = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.Password = value;
                }
                OnPasswordChanged();
            }
        }
        /// <summary>Photo of the user. The maximum length of this property is 255.</summary>
        public string PhotoPath
        {   
            get {return _photoPath;}
            set 
            {
                OnPhotoPathChanging(value);
                _photoPath = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.PhotoPath = value;
                }
                OnPhotoPathChanged();
            }
        }
        /// <summary>.</summary>
        public int Status
        {   
            get {return _status;}
            set 
            {
                OnStatusChanging(value);
                _status = value;
                if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && ((int)value != 0))
                {
                    this.ObjDAL.Status = (from o in this._context.Context.UserStatus
                                           where o.ID == (int)value
                                           select o).ToList<Indico.DAL.UserStatus>()[0];
                }
                else if (!this._doNotUpdateDALObject && this._context != null && this.ObjDAL != null && (int)value == 0)
                    this.ObjDAL.Status = null;
                OnStatusChanged();
            }
        }
        /// <summary>The username used for authentication. The maximum length of this property is 32.</summary>
        public string Username
        {   
            get {return _username;}
            set 
            {
                OnUsernameChanging(value);
                _username = value;
                if (!this._doNotUpdateDALObject && this.Context != null && this.ObjDAL != null){
                    this.ObjDAL.Username = value;
                }
                OnUsernameChanged();
            }
        }
        
        internal Indico.DAL.User ObjDAL
        {
            get 
            {
                if (_objDAL == null && base._createDAL)
                {
                    _objDAL = this.SetDAL(this.Context.Context);
                    this.ObjDAL.PropertyChanged += new System.ComponentModel.PropertyChangedEventHandler(obj_PropertyChanged);
                }

                return _objDAL;
            }
            set 
            {
                _objDAL = value;
            }
        }
        
        #endregion
        
        #region Non-scalar Properties
        
        #region Foreign Key Objects
        ///<summary>The CompanyBO object identified by the value of Company</summary>
        [XmlIgnoreAttribute]
        public Indico.BusinessObjects.CompanyBO objCompany
        {
            get
            {
                if ( _company > 0 && _objCompany == null)
                {
                        if (this._context == null)
                        {
                            _objCompany = new Indico.BusinessObjects.CompanyBO();
                        }
                        else
                        {
                            _objCompany = new Indico.BusinessObjects.CompanyBO(ref this._context);
                        }
                        _objCompany.ID = _company;
                        _objCompany.GetObject(); 
                }
                return _objCompany;
            }
            set
            { 
                _objCompany = value;
                _company = _objCompany.ID;
            }
        }
        ///<summary>The UserBO object identified by the value of Creator</summary>
        [XmlIgnoreAttribute]
        public Indico.BusinessObjects.UserBO objCreator
        {
            get
            {
                if ( _creator > 0 && _objCreator == null)
                {
                        if (this._context == null)
                        {
                            _objCreator = new Indico.BusinessObjects.UserBO();
                        }
                        else
                        {
                            _objCreator = new Indico.BusinessObjects.UserBO(ref this._context);
                        }
                        _objCreator.ID = _creator;
                        _objCreator.GetObject(); 
                }
                return _objCreator;
            }
            set
            { 
                _objCreator = value;
                _creator = _objCreator.ID;
            }
        }
        ///<summary>The UserBO object identified by the value of Modifier</summary>
        [XmlIgnoreAttribute]
        public Indico.BusinessObjects.UserBO objModifier
        {
            get
            {
                if ( _modifier > 0 && _objModifier == null)
                {
                        if (this._context == null)
                        {
                            _objModifier = new Indico.BusinessObjects.UserBO();
                        }
                        else
                        {
                            _objModifier = new Indico.BusinessObjects.UserBO(ref this._context);
                        }
                        _objModifier.ID = _modifier;
                        _objModifier.GetObject(); 
                }
                return _objModifier;
            }
            set
            { 
                _objModifier = value;
                _modifier = _objModifier.ID;
            }
        }
        ///<summary>The UserStatusBO object identified by the value of Status</summary>
        [XmlIgnoreAttribute]
        public Indico.BusinessObjects.UserStatusBO objStatus
        {
            get
            {
                if ( _status > 0 && _objStatus == null)
                {
                        if (this._context == null)
                        {
                            _objStatus = new Indico.BusinessObjects.UserStatusBO();
                        }
                        else
                        {
                            _objStatus = new Indico.BusinessObjects.UserStatusBO(ref this._context);
                        }
                        _objStatus.ID = _status;
                        _objStatus.GetObject(); 
                }
                return _objStatus;
            }
            set
            { 
                _objStatus = value;
                _status = _objStatus.ID;
            }
        }
        #endregion
        
        #region Foreign Object Foreign Key Collections
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.BankBO> BanksWhereThisIsCreator // FK_Bank_Creator
        {
            get
            {
                if (!_banksWhereThisIsCreatorLoaded)
                {
                    _banksWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.BanksWhereThisIsCreator.Load();
                        banksWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.BankBO>(obj.BanksWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.Bank o in obj.BanksWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.BankBO fkObj = new Indico.BusinessObjects.BankBO(o, ref this._context);
                            banksWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        banksWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.BankBO>();
                    }
                    
                    banksWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(BanksWhereThisIsCreatorList_OnBeforeRemove);
                    banksWhereThisIsCreatorList.OnAfterAdd += new EventHandler(BanksWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return banksWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.BankBO> BanksWhereThisIsModifier // FK_Bank_Modifier
        {
            get
            {
                if (!_banksWhereThisIsModifierLoaded)
                {
                    _banksWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.BanksWhereThisIsModifier.Load();
                        banksWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.BankBO>(obj.BanksWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.Bank o in obj.BanksWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.BankBO fkObj = new Indico.BusinessObjects.BankBO(o, ref this._context);
                            banksWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        banksWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.BankBO>();
                    }
                    
                    banksWhereThisIsModifierList.OnBeforeRemove += new EventHandler(BanksWhereThisIsModifierList_OnBeforeRemove);
                    banksWhereThisIsModifierList.OnAfterAdd += new EventHandler(BanksWhereThisIsModifierList_OnAfterAdd);
                }
                
                return banksWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.CompanyBO> CompanysWhereThisIsCoordinator // FK_Company_Coordinator
        {
            get
            {
                if (!_companysWhereThisIsCoordinatorLoaded)
                {
                    _companysWhereThisIsCoordinatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.CompanysWhereThisIsCoordinator.Load();
                        companysWhereThisIsCoordinatorList = new IndicoList<Indico.BusinessObjects.CompanyBO>(obj.CompanysWhereThisIsCoordinator.Count);
                        
                        foreach (Indico.DAL.Company o in obj.CompanysWhereThisIsCoordinator)
                        {
                            Indico.BusinessObjects.CompanyBO fkObj = new Indico.BusinessObjects.CompanyBO(o, ref this._context);
                            companysWhereThisIsCoordinatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        companysWhereThisIsCoordinatorList = new IndicoList<Indico.BusinessObjects.CompanyBO>();
                    }
                    
                    companysWhereThisIsCoordinatorList.OnBeforeRemove += new EventHandler(CompanysWhereThisIsCoordinatorList_OnBeforeRemove);
                    companysWhereThisIsCoordinatorList.OnAfterAdd += new EventHandler(CompanysWhereThisIsCoordinatorList_OnAfterAdd);
                }
                
                return companysWhereThisIsCoordinatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.CompanyBO> CompanysWhereThisIsCreator // FK_Company_Creator
        {
            get
            {
                if (!_companysWhereThisIsCreatorLoaded)
                {
                    _companysWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.CompanysWhereThisIsCreator.Load();
                        companysWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.CompanyBO>(obj.CompanysWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.Company o in obj.CompanysWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.CompanyBO fkObj = new Indico.BusinessObjects.CompanyBO(o, ref this._context);
                            companysWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        companysWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.CompanyBO>();
                    }
                    
                    companysWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(CompanysWhereThisIsCreatorList_OnBeforeRemove);
                    companysWhereThisIsCreatorList.OnAfterAdd += new EventHandler(CompanysWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return companysWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.CompanyBO> CompanysWhereThisIsModifier // FK_Company_Modifier
        {
            get
            {
                if (!_companysWhereThisIsModifierLoaded)
                {
                    _companysWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.CompanysWhereThisIsModifier.Load();
                        companysWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.CompanyBO>(obj.CompanysWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.Company o in obj.CompanysWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.CompanyBO fkObj = new Indico.BusinessObjects.CompanyBO(o, ref this._context);
                            companysWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        companysWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.CompanyBO>();
                    }
                    
                    companysWhereThisIsModifierList.OnBeforeRemove += new EventHandler(CompanysWhereThisIsModifierList_OnBeforeRemove);
                    companysWhereThisIsModifierList.OnAfterAdd += new EventHandler(CompanysWhereThisIsModifierList_OnAfterAdd);
                }
                
                return companysWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.CompanyBO> CompanysWhereThisIsOwner // FK_Company_Owner
        {
            get
            {
                if (!_companysWhereThisIsOwnerLoaded)
                {
                    _companysWhereThisIsOwnerLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.CompanysWhereThisIsOwner.Load();
                        companysWhereThisIsOwnerList = new IndicoList<Indico.BusinessObjects.CompanyBO>(obj.CompanysWhereThisIsOwner.Count);
                        
                        foreach (Indico.DAL.Company o in obj.CompanysWhereThisIsOwner)
                        {
                            Indico.BusinessObjects.CompanyBO fkObj = new Indico.BusinessObjects.CompanyBO(o, ref this._context);
                            companysWhereThisIsOwnerList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        companysWhereThisIsOwnerList = new IndicoList<Indico.BusinessObjects.CompanyBO>();
                    }
                    
                    companysWhereThisIsOwnerList.OnBeforeRemove += new EventHandler(CompanysWhereThisIsOwnerList_OnBeforeRemove);
                    companysWhereThisIsOwnerList.OnAfterAdd += new EventHandler(CompanysWhereThisIsOwnerList_OnAfterAdd);
                }
                
                return companysWhereThisIsOwnerList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.CompanyBO> CompanysWhereThisIsSecondaryCoordinator // FK_SecondaryCoordinator_User
        {
            get
            {
                if (!_companysWhereThisIsSecondaryCoordinatorLoaded)
                {
                    _companysWhereThisIsSecondaryCoordinatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.CompanysWhereThisIsSecondaryCoordinator.Load();
                        companysWhereThisIsSecondaryCoordinatorList = new IndicoList<Indico.BusinessObjects.CompanyBO>(obj.CompanysWhereThisIsSecondaryCoordinator.Count);
                        
                        foreach (Indico.DAL.Company o in obj.CompanysWhereThisIsSecondaryCoordinator)
                        {
                            Indico.BusinessObjects.CompanyBO fkObj = new Indico.BusinessObjects.CompanyBO(o, ref this._context);
                            companysWhereThisIsSecondaryCoordinatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        companysWhereThisIsSecondaryCoordinatorList = new IndicoList<Indico.BusinessObjects.CompanyBO>();
                    }
                    
                    companysWhereThisIsSecondaryCoordinatorList.OnBeforeRemove += new EventHandler(CompanysWhereThisIsSecondaryCoordinatorList_OnBeforeRemove);
                    companysWhereThisIsSecondaryCoordinatorList.OnAfterAdd += new EventHandler(CompanysWhereThisIsSecondaryCoordinatorList_OnAfterAdd);
                }
                
                return companysWhereThisIsSecondaryCoordinatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.CoordinatorEmailAddressBO> CoordinatorEmailAddresssWhereThisIsUser // FK_CoordinatorEmailAddress_Distributor
        {
            get
            {
                if (!_coordinatorEmailAddresssWhereThisIsUserLoaded)
                {
                    _coordinatorEmailAddresssWhereThisIsUserLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.CoordinatorEmailAddresssWhereThisIsUser.Load();
                        coordinatorEmailAddresssWhereThisIsUserList = new IndicoList<Indico.BusinessObjects.CoordinatorEmailAddressBO>(obj.CoordinatorEmailAddresssWhereThisIsUser.Count);
                        
                        foreach (Indico.DAL.CoordinatorEmailAddress o in obj.CoordinatorEmailAddresssWhereThisIsUser)
                        {
                            Indico.BusinessObjects.CoordinatorEmailAddressBO fkObj = new Indico.BusinessObjects.CoordinatorEmailAddressBO(o, ref this._context);
                            coordinatorEmailAddresssWhereThisIsUserList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        coordinatorEmailAddresssWhereThisIsUserList = new IndicoList<Indico.BusinessObjects.CoordinatorEmailAddressBO>();
                    }
                    
                    coordinatorEmailAddresssWhereThisIsUserList.OnBeforeRemove += new EventHandler(CoordinatorEmailAddresssWhereThisIsUserList_OnBeforeRemove);
                    coordinatorEmailAddresssWhereThisIsUserList.OnAfterAdd += new EventHandler(CoordinatorEmailAddresssWhereThisIsUserList_OnAfterAdd);
                }
                
                return coordinatorEmailAddresssWhereThisIsUserList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.CostSheetBO> CostSheetsWhereThisIsCreator // FK_CostSheet_Creator
        {
            get
            {
                if (!_costSheetsWhereThisIsCreatorLoaded)
                {
                    _costSheetsWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.CostSheetsWhereThisIsCreator.Load();
                        costSheetsWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.CostSheetBO>(obj.CostSheetsWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.CostSheet o in obj.CostSheetsWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.CostSheetBO fkObj = new Indico.BusinessObjects.CostSheetBO(o, ref this._context);
                            costSheetsWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        costSheetsWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.CostSheetBO>();
                    }
                    
                    costSheetsWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(CostSheetsWhereThisIsCreatorList_OnBeforeRemove);
                    costSheetsWhereThisIsCreatorList.OnAfterAdd += new EventHandler(CostSheetsWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return costSheetsWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.CostSheetBO> CostSheetsWhereThisIsIndimanModifier // FK_CostSheet_IndimanModifier
        {
            get
            {
                if (!_costSheetsWhereThisIsIndimanModifierLoaded)
                {
                    _costSheetsWhereThisIsIndimanModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.CostSheetsWhereThisIsIndimanModifier.Load();
                        costSheetsWhereThisIsIndimanModifierList = new IndicoList<Indico.BusinessObjects.CostSheetBO>(obj.CostSheetsWhereThisIsIndimanModifier.Count);
                        
                        foreach (Indico.DAL.CostSheet o in obj.CostSheetsWhereThisIsIndimanModifier)
                        {
                            Indico.BusinessObjects.CostSheetBO fkObj = new Indico.BusinessObjects.CostSheetBO(o, ref this._context);
                            costSheetsWhereThisIsIndimanModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        costSheetsWhereThisIsIndimanModifierList = new IndicoList<Indico.BusinessObjects.CostSheetBO>();
                    }
                    
                    costSheetsWhereThisIsIndimanModifierList.OnBeforeRemove += new EventHandler(CostSheetsWhereThisIsIndimanModifierList_OnBeforeRemove);
                    costSheetsWhereThisIsIndimanModifierList.OnAfterAdd += new EventHandler(CostSheetsWhereThisIsIndimanModifierList_OnAfterAdd);
                }
                
                return costSheetsWhereThisIsIndimanModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.CostSheetBO> CostSheetsWhereThisIsModifier // FK_CostSheet_Modifier
        {
            get
            {
                if (!_costSheetsWhereThisIsModifierLoaded)
                {
                    _costSheetsWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.CostSheetsWhereThisIsModifier.Load();
                        costSheetsWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.CostSheetBO>(obj.CostSheetsWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.CostSheet o in obj.CostSheetsWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.CostSheetBO fkObj = new Indico.BusinessObjects.CostSheetBO(o, ref this._context);
                            costSheetsWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        costSheetsWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.CostSheetBO>();
                    }
                    
                    costSheetsWhereThisIsModifierList.OnBeforeRemove += new EventHandler(CostSheetsWhereThisIsModifierList_OnBeforeRemove);
                    costSheetsWhereThisIsModifierList.OnAfterAdd += new EventHandler(CostSheetsWhereThisIsModifierList_OnAfterAdd);
                }
                
                return costSheetsWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.CostSheetRemarksBO> CostSheetRemarkssWhereThisIsModifier // FK_CostSheetRemarks_Modifier
        {
            get
            {
                if (!_costSheetRemarkssWhereThisIsModifierLoaded)
                {
                    _costSheetRemarkssWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.CostSheetRemarkssWhereThisIsModifier.Load();
                        costSheetRemarkssWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.CostSheetRemarksBO>(obj.CostSheetRemarkssWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.CostSheetRemarks o in obj.CostSheetRemarkssWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.CostSheetRemarksBO fkObj = new Indico.BusinessObjects.CostSheetRemarksBO(o, ref this._context);
                            costSheetRemarkssWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        costSheetRemarkssWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.CostSheetRemarksBO>();
                    }
                    
                    costSheetRemarkssWhereThisIsModifierList.OnBeforeRemove += new EventHandler(CostSheetRemarkssWhereThisIsModifierList_OnBeforeRemove);
                    costSheetRemarkssWhereThisIsModifierList.OnAfterAdd += new EventHandler(CostSheetRemarkssWhereThisIsModifierList_OnAfterAdd);
                }
                
                return costSheetRemarkssWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO> DefaultValuesPriceListsWhereThisIsCreator // FK__DefaultVa__Creat__1D7209DB
        {
            get
            {
                if (!_defaultValuesPriceListsWhereThisIsCreatorLoaded)
                {
                    _defaultValuesPriceListsWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.DefaultValuesPriceListsWhereThisIsCreator.Load();
                        defaultValuesPriceListsWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>(obj.DefaultValuesPriceListsWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.DefaultValuesPriceList o in obj.DefaultValuesPriceListsWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.DefaultValuesPriceListBO fkObj = new Indico.BusinessObjects.DefaultValuesPriceListBO(o, ref this._context);
                            defaultValuesPriceListsWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        defaultValuesPriceListsWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>();
                    }
                    
                    defaultValuesPriceListsWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(DefaultValuesPriceListsWhereThisIsCreatorList_OnBeforeRemove);
                    defaultValuesPriceListsWhereThisIsCreatorList.OnAfterAdd += new EventHandler(DefaultValuesPriceListsWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return defaultValuesPriceListsWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO> DefaultValuesPriceListsWhereThisIsModifier // FK__DefaultVa__Modif__1E662E14
        {
            get
            {
                if (!_defaultValuesPriceListsWhereThisIsModifierLoaded)
                {
                    _defaultValuesPriceListsWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.DefaultValuesPriceListsWhereThisIsModifier.Load();
                        defaultValuesPriceListsWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>(obj.DefaultValuesPriceListsWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.DefaultValuesPriceList o in obj.DefaultValuesPriceListsWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.DefaultValuesPriceListBO fkObj = new Indico.BusinessObjects.DefaultValuesPriceListBO(o, ref this._context);
                            defaultValuesPriceListsWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        defaultValuesPriceListsWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>();
                    }
                    
                    defaultValuesPriceListsWhereThisIsModifierList.OnBeforeRemove += new EventHandler(DefaultValuesPriceListsWhereThisIsModifierList_OnBeforeRemove);
                    defaultValuesPriceListsWhereThisIsModifierList.OnAfterAdd += new EventHandler(DefaultValuesPriceListsWhereThisIsModifierList_OnAfterAdd);
                }
                
                return defaultValuesPriceListsWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.DistributorPriceLevelCostBO> DistributorPriceLevelCostsWhereThisIsModifier // FK_DistributorPriceLevelCost_Modifier
        {
            get
            {
                if (!_distributorPriceLevelCostsWhereThisIsModifierLoaded)
                {
                    _distributorPriceLevelCostsWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.DistributorPriceLevelCostsWhereThisIsModifier.Load();
                        distributorPriceLevelCostsWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.DistributorPriceLevelCostBO>(obj.DistributorPriceLevelCostsWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.DistributorPriceLevelCost o in obj.DistributorPriceLevelCostsWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.DistributorPriceLevelCostBO fkObj = new Indico.BusinessObjects.DistributorPriceLevelCostBO(o, ref this._context);
                            distributorPriceLevelCostsWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        distributorPriceLevelCostsWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.DistributorPriceLevelCostBO>();
                    }
                    
                    distributorPriceLevelCostsWhereThisIsModifierList.OnBeforeRemove += new EventHandler(DistributorPriceLevelCostsWhereThisIsModifierList_OnBeforeRemove);
                    distributorPriceLevelCostsWhereThisIsModifierList.OnAfterAdd += new EventHandler(DistributorPriceLevelCostsWhereThisIsModifierList_OnAfterAdd);
                }
                
                return distributorPriceLevelCostsWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.EmbroideryBO> EmbroiderysWhereThisIsAssigned // FK_Embroidery_Assigned
        {
            get
            {
                if (!_embroiderysWhereThisIsAssignedLoaded)
                {
                    _embroiderysWhereThisIsAssignedLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.EmbroiderysWhereThisIsAssigned.Load();
                        embroiderysWhereThisIsAssignedList = new IndicoList<Indico.BusinessObjects.EmbroideryBO>(obj.EmbroiderysWhereThisIsAssigned.Count);
                        
                        foreach (Indico.DAL.Embroidery o in obj.EmbroiderysWhereThisIsAssigned)
                        {
                            Indico.BusinessObjects.EmbroideryBO fkObj = new Indico.BusinessObjects.EmbroideryBO(o, ref this._context);
                            embroiderysWhereThisIsAssignedList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        embroiderysWhereThisIsAssignedList = new IndicoList<Indico.BusinessObjects.EmbroideryBO>();
                    }
                    
                    embroiderysWhereThisIsAssignedList.OnBeforeRemove += new EventHandler(EmbroiderysWhereThisIsAssignedList_OnBeforeRemove);
                    embroiderysWhereThisIsAssignedList.OnAfterAdd += new EventHandler(EmbroiderysWhereThisIsAssignedList_OnAfterAdd);
                }
                
                return embroiderysWhereThisIsAssignedList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.EmbroideryBO> EmbroiderysWhereThisIsCoordinator // FK_Embroidery_Coordinator
        {
            get
            {
                if (!_embroiderysWhereThisIsCoordinatorLoaded)
                {
                    _embroiderysWhereThisIsCoordinatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.EmbroiderysWhereThisIsCoordinator.Load();
                        embroiderysWhereThisIsCoordinatorList = new IndicoList<Indico.BusinessObjects.EmbroideryBO>(obj.EmbroiderysWhereThisIsCoordinator.Count);
                        
                        foreach (Indico.DAL.Embroidery o in obj.EmbroiderysWhereThisIsCoordinator)
                        {
                            Indico.BusinessObjects.EmbroideryBO fkObj = new Indico.BusinessObjects.EmbroideryBO(o, ref this._context);
                            embroiderysWhereThisIsCoordinatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        embroiderysWhereThisIsCoordinatorList = new IndicoList<Indico.BusinessObjects.EmbroideryBO>();
                    }
                    
                    embroiderysWhereThisIsCoordinatorList.OnBeforeRemove += new EventHandler(EmbroiderysWhereThisIsCoordinatorList_OnBeforeRemove);
                    embroiderysWhereThisIsCoordinatorList.OnAfterAdd += new EventHandler(EmbroiderysWhereThisIsCoordinatorList_OnAfterAdd);
                }
                
                return embroiderysWhereThisIsCoordinatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.EmbroideryBO> EmbroiderysWhereThisIsCreator // FK_Embroidery_Creator
        {
            get
            {
                if (!_embroiderysWhereThisIsCreatorLoaded)
                {
                    _embroiderysWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.EmbroiderysWhereThisIsCreator.Load();
                        embroiderysWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.EmbroideryBO>(obj.EmbroiderysWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.Embroidery o in obj.EmbroiderysWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.EmbroideryBO fkObj = new Indico.BusinessObjects.EmbroideryBO(o, ref this._context);
                            embroiderysWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        embroiderysWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.EmbroideryBO>();
                    }
                    
                    embroiderysWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(EmbroiderysWhereThisIsCreatorList_OnBeforeRemove);
                    embroiderysWhereThisIsCreatorList.OnAfterAdd += new EventHandler(EmbroiderysWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return embroiderysWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.EmbroideryBO> EmbroiderysWhereThisIsModifier // FK_Embroidery_Modifier
        {
            get
            {
                if (!_embroiderysWhereThisIsModifierLoaded)
                {
                    _embroiderysWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.EmbroiderysWhereThisIsModifier.Load();
                        embroiderysWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.EmbroideryBO>(obj.EmbroiderysWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.Embroidery o in obj.EmbroiderysWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.EmbroideryBO fkObj = new Indico.BusinessObjects.EmbroideryBO(o, ref this._context);
                            embroiderysWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        embroiderysWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.EmbroideryBO>();
                    }
                    
                    embroiderysWhereThisIsModifierList.OnBeforeRemove += new EventHandler(EmbroiderysWhereThisIsModifierList_OnBeforeRemove);
                    embroiderysWhereThisIsModifierList.OnAfterAdd += new EventHandler(EmbroiderysWhereThisIsModifierList_OnAfterAdd);
                }
                
                return embroiderysWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.IndimanCostSheetRemarksBO> IndimanCostSheetRemarkssWhereThisIsModifier // FK_IndimanCostSheetRemarks_Modifier
        {
            get
            {
                if (!_indimanCostSheetRemarkssWhereThisIsModifierLoaded)
                {
                    _indimanCostSheetRemarkssWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.IndimanCostSheetRemarkssWhereThisIsModifier.Load();
                        indimanCostSheetRemarkssWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.IndimanCostSheetRemarksBO>(obj.IndimanCostSheetRemarkssWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.IndimanCostSheetRemarks o in obj.IndimanCostSheetRemarkssWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.IndimanCostSheetRemarksBO fkObj = new Indico.BusinessObjects.IndimanCostSheetRemarksBO(o, ref this._context);
                            indimanCostSheetRemarkssWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        indimanCostSheetRemarkssWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.IndimanCostSheetRemarksBO>();
                    }
                    
                    indimanCostSheetRemarkssWhereThisIsModifierList.OnBeforeRemove += new EventHandler(IndimanCostSheetRemarkssWhereThisIsModifierList_OnBeforeRemove);
                    indimanCostSheetRemarkssWhereThisIsModifierList.OnAfterAdd += new EventHandler(IndimanCostSheetRemarkssWhereThisIsModifierList_OnAfterAdd);
                }
                
                return indimanCostSheetRemarkssWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.InvoiceBO> InvoicesWhereThisIsCreator // FK_Invoice_Creator
        {
            get
            {
                if (!_invoicesWhereThisIsCreatorLoaded)
                {
                    _invoicesWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.InvoicesWhereThisIsCreator.Load();
                        invoicesWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.InvoiceBO>(obj.InvoicesWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.Invoice o in obj.InvoicesWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.InvoiceBO fkObj = new Indico.BusinessObjects.InvoiceBO(o, ref this._context);
                            invoicesWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        invoicesWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.InvoiceBO>();
                    }
                    
                    invoicesWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(InvoicesWhereThisIsCreatorList_OnBeforeRemove);
                    invoicesWhereThisIsCreatorList.OnAfterAdd += new EventHandler(InvoicesWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return invoicesWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.InvoiceBO> InvoicesWhereThisIsModifier // FK_Invoice_Modifier
        {
            get
            {
                if (!_invoicesWhereThisIsModifierLoaded)
                {
                    _invoicesWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.InvoicesWhereThisIsModifier.Load();
                        invoicesWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.InvoiceBO>(obj.InvoicesWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.Invoice o in obj.InvoicesWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.InvoiceBO fkObj = new Indico.BusinessObjects.InvoiceBO(o, ref this._context);
                            invoicesWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        invoicesWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.InvoiceBO>();
                    }
                    
                    invoicesWhereThisIsModifierList.OnBeforeRemove += new EventHandler(InvoicesWhereThisIsModifierList_OnBeforeRemove);
                    invoicesWhereThisIsModifierList.OnAfterAdd += new EventHandler(InvoicesWhereThisIsModifierList_OnAfterAdd);
                }
                
                return invoicesWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.JobNameBO> JobNamesWhereThisIsCreator // FK_Client_Creator
        {
            get
            {
                if (!_jobNamesWhereThisIsCreatorLoaded)
                {
                    _jobNamesWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.JobNamesWhereThisIsCreator.Load();
                        jobNamesWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.JobNameBO>(obj.JobNamesWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.JobName o in obj.JobNamesWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.JobNameBO fkObj = new Indico.BusinessObjects.JobNameBO(o, ref this._context);
                            jobNamesWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        jobNamesWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.JobNameBO>();
                    }
                    
                    jobNamesWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(JobNamesWhereThisIsCreatorList_OnBeforeRemove);
                    jobNamesWhereThisIsCreatorList.OnAfterAdd += new EventHandler(JobNamesWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return jobNamesWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.JobNameBO> JobNamesWhereThisIsModifier // FK_Client_Modifier
        {
            get
            {
                if (!_jobNamesWhereThisIsModifierLoaded)
                {
                    _jobNamesWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.JobNamesWhereThisIsModifier.Load();
                        jobNamesWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.JobNameBO>(obj.JobNamesWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.JobName o in obj.JobNamesWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.JobNameBO fkObj = new Indico.BusinessObjects.JobNameBO(o, ref this._context);
                            jobNamesWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        jobNamesWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.JobNameBO>();
                    }
                    
                    jobNamesWhereThisIsModifierList.OnBeforeRemove += new EventHandler(JobNamesWhereThisIsModifierList_OnBeforeRemove);
                    jobNamesWhereThisIsModifierList.OnAfterAdd += new EventHandler(JobNamesWhereThisIsModifierList_OnAfterAdd);
                }
                
                return jobNamesWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.LabelPriceLevelCostBO> LabelPriceLevelCostsWhereThisIsModifier // FK_LabelPriceLevelCost_Modifier
        {
            get
            {
                if (!_labelPriceLevelCostsWhereThisIsModifierLoaded)
                {
                    _labelPriceLevelCostsWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.LabelPriceLevelCostsWhereThisIsModifier.Load();
                        labelPriceLevelCostsWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.LabelPriceLevelCostBO>(obj.LabelPriceLevelCostsWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.LabelPriceLevelCost o in obj.LabelPriceLevelCostsWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.LabelPriceLevelCostBO fkObj = new Indico.BusinessObjects.LabelPriceLevelCostBO(o, ref this._context);
                            labelPriceLevelCostsWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        labelPriceLevelCostsWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.LabelPriceLevelCostBO>();
                    }
                    
                    labelPriceLevelCostsWhereThisIsModifierList.OnBeforeRemove += new EventHandler(LabelPriceLevelCostsWhereThisIsModifierList_OnBeforeRemove);
                    labelPriceLevelCostsWhereThisIsModifierList.OnAfterAdd += new EventHandler(LabelPriceLevelCostsWhereThisIsModifierList_OnAfterAdd);
                }
                
                return labelPriceLevelCostsWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.LabelPriceListDownloadsBO> LabelPriceListDownloadssWhereThisIsCreator // FK_LabelPriceListDownloads_Creator
        {
            get
            {
                if (!_labelPriceListDownloadssWhereThisIsCreatorLoaded)
                {
                    _labelPriceListDownloadssWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.LabelPriceListDownloadssWhereThisIsCreator.Load();
                        labelPriceListDownloadssWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.LabelPriceListDownloadsBO>(obj.LabelPriceListDownloadssWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.LabelPriceListDownloads o in obj.LabelPriceListDownloadssWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.LabelPriceListDownloadsBO fkObj = new Indico.BusinessObjects.LabelPriceListDownloadsBO(o, ref this._context);
                            labelPriceListDownloadssWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        labelPriceListDownloadssWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.LabelPriceListDownloadsBO>();
                    }
                    
                    labelPriceListDownloadssWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(LabelPriceListDownloadssWhereThisIsCreatorList_OnBeforeRemove);
                    labelPriceListDownloadssWhereThisIsCreatorList.OnAfterAdd += new EventHandler(LabelPriceListDownloadssWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return labelPriceListDownloadssWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.OrderBO> OrdersWhereThisIsCreator // FK_Order_Creator
        {
            get
            {
                if (!_ordersWhereThisIsCreatorLoaded)
                {
                    _ordersWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.OrdersWhereThisIsCreator.Load();
                        ordersWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.OrderBO>(obj.OrdersWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.Order o in obj.OrdersWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.OrderBO fkObj = new Indico.BusinessObjects.OrderBO(o, ref this._context);
                            ordersWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        ordersWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.OrderBO>();
                    }
                    
                    ordersWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(OrdersWhereThisIsCreatorList_OnBeforeRemove);
                    ordersWhereThisIsCreatorList.OnAfterAdd += new EventHandler(OrdersWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return ordersWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.OrderBO> OrdersWhereThisIsModifier // FK_Order_Modifier
        {
            get
            {
                if (!_ordersWhereThisIsModifierLoaded)
                {
                    _ordersWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.OrdersWhereThisIsModifier.Load();
                        ordersWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.OrderBO>(obj.OrdersWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.Order o in obj.OrdersWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.OrderBO fkObj = new Indico.BusinessObjects.OrderBO(o, ref this._context);
                            ordersWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        ordersWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.OrderBO>();
                    }
                    
                    ordersWhereThisIsModifierList.OnBeforeRemove += new EventHandler(OrdersWhereThisIsModifierList_OnBeforeRemove);
                    ordersWhereThisIsModifierList.OnAfterAdd += new EventHandler(OrdersWhereThisIsModifierList_OnAfterAdd);
                }
                
                return ordersWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.PackingListBO> PackingListsWhereThisIsCreator // FK_PackingList_Creator
        {
            get
            {
                if (!_packingListsWhereThisIsCreatorLoaded)
                {
                    _packingListsWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.PackingListsWhereThisIsCreator.Load();
                        packingListsWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.PackingListBO>(obj.PackingListsWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.PackingList o in obj.PackingListsWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.PackingListBO fkObj = new Indico.BusinessObjects.PackingListBO(o, ref this._context);
                            packingListsWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        packingListsWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.PackingListBO>();
                    }
                    
                    packingListsWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(PackingListsWhereThisIsCreatorList_OnBeforeRemove);
                    packingListsWhereThisIsCreatorList.OnAfterAdd += new EventHandler(PackingListsWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return packingListsWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.PackingListBO> PackingListsWhereThisIsModifier // FK_PackingList_Modifier
        {
            get
            {
                if (!_packingListsWhereThisIsModifierLoaded)
                {
                    _packingListsWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.PackingListsWhereThisIsModifier.Load();
                        packingListsWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.PackingListBO>(obj.PackingListsWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.PackingList o in obj.PackingListsWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.PackingListBO fkObj = new Indico.BusinessObjects.PackingListBO(o, ref this._context);
                            packingListsWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        packingListsWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.PackingListBO>();
                    }
                    
                    packingListsWhereThisIsModifierList.OnBeforeRemove += new EventHandler(PackingListsWhereThisIsModifierList_OnBeforeRemove);
                    packingListsWhereThisIsModifierList.OnAfterAdd += new EventHandler(PackingListsWhereThisIsModifierList_OnAfterAdd);
                }
                
                return packingListsWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.PatternBO> PatternsWhereThisIsCreator // FK_Pattern_Creator
        {
            get
            {
                if (!_patternsWhereThisIsCreatorLoaded)
                {
                    _patternsWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.PatternsWhereThisIsCreator.Load();
                        patternsWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.PatternBO>(obj.PatternsWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.Pattern o in obj.PatternsWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.PatternBO fkObj = new Indico.BusinessObjects.PatternBO(o, ref this._context);
                            patternsWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        patternsWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.PatternBO>();
                    }
                    
                    patternsWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(PatternsWhereThisIsCreatorList_OnBeforeRemove);
                    patternsWhereThisIsCreatorList.OnAfterAdd += new EventHandler(PatternsWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return patternsWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.PatternBO> PatternsWhereThisIsModifier // FK_Pattern_Modifier
        {
            get
            {
                if (!_patternsWhereThisIsModifierLoaded)
                {
                    _patternsWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.PatternsWhereThisIsModifier.Load();
                        patternsWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.PatternBO>(obj.PatternsWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.Pattern o in obj.PatternsWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.PatternBO fkObj = new Indico.BusinessObjects.PatternBO(o, ref this._context);
                            patternsWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        patternsWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.PatternBO>();
                    }
                    
                    patternsWhereThisIsModifierList.OnBeforeRemove += new EventHandler(PatternsWhereThisIsModifierList_OnBeforeRemove);
                    patternsWhereThisIsModifierList.OnAfterAdd += new EventHandler(PatternsWhereThisIsModifierList_OnAfterAdd);
                }
                
                return patternsWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.PatternHistoryBO> PatternHistorysWhereThisIsModifier // FK_PatternHistory_Modifier
        {
            get
            {
                if (!_patternHistorysWhereThisIsModifierLoaded)
                {
                    _patternHistorysWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.PatternHistorysWhereThisIsModifier.Load();
                        patternHistorysWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.PatternHistoryBO>(obj.PatternHistorysWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.PatternHistory o in obj.PatternHistorysWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.PatternHistoryBO fkObj = new Indico.BusinessObjects.PatternHistoryBO(o, ref this._context);
                            patternHistorysWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        patternHistorysWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.PatternHistoryBO>();
                    }
                    
                    patternHistorysWhereThisIsModifierList.OnBeforeRemove += new EventHandler(PatternHistorysWhereThisIsModifierList_OnBeforeRemove);
                    patternHistorysWhereThisIsModifierList.OnAfterAdd += new EventHandler(PatternHistorysWhereThisIsModifierList_OnAfterAdd);
                }
                
                return patternHistorysWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.PatternSupplierBO> PatternSuppliersWhereThisIsCreator // FK_PatternSupplier_Creator
        {
            get
            {
                if (!_patternSuppliersWhereThisIsCreatorLoaded)
                {
                    _patternSuppliersWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.PatternSuppliersWhereThisIsCreator.Load();
                        patternSuppliersWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.PatternSupplierBO>(obj.PatternSuppliersWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.PatternSupplier o in obj.PatternSuppliersWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.PatternSupplierBO fkObj = new Indico.BusinessObjects.PatternSupplierBO(o, ref this._context);
                            patternSuppliersWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        patternSuppliersWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.PatternSupplierBO>();
                    }
                    
                    patternSuppliersWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(PatternSuppliersWhereThisIsCreatorList_OnBeforeRemove);
                    patternSuppliersWhereThisIsCreatorList.OnAfterAdd += new EventHandler(PatternSuppliersWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return patternSuppliersWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.PatternSupplierBO> PatternSuppliersWhereThisIsModifier // FK_PatternSupplier_Modifier
        {
            get
            {
                if (!_patternSuppliersWhereThisIsModifierLoaded)
                {
                    _patternSuppliersWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.PatternSuppliersWhereThisIsModifier.Load();
                        patternSuppliersWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.PatternSupplierBO>(obj.PatternSuppliersWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.PatternSupplier o in obj.PatternSuppliersWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.PatternSupplierBO fkObj = new Indico.BusinessObjects.PatternSupplierBO(o, ref this._context);
                            patternSuppliersWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        patternSuppliersWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.PatternSupplierBO>();
                    }
                    
                    patternSuppliersWhereThisIsModifierList.OnBeforeRemove += new EventHandler(PatternSuppliersWhereThisIsModifierList_OnBeforeRemove);
                    patternSuppliersWhereThisIsModifierList.OnAfterAdd += new EventHandler(PatternSuppliersWhereThisIsModifierList_OnAfterAdd);
                }
                
                return patternSuppliersWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.PriceBO> PricesWhereThisIsCreator // FK_Price_Creator
        {
            get
            {
                if (!_pricesWhereThisIsCreatorLoaded)
                {
                    _pricesWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.PricesWhereThisIsCreator.Load();
                        pricesWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.PriceBO>(obj.PricesWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.Price o in obj.PricesWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.PriceBO fkObj = new Indico.BusinessObjects.PriceBO(o, ref this._context);
                            pricesWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        pricesWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.PriceBO>();
                    }
                    
                    pricesWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(PricesWhereThisIsCreatorList_OnBeforeRemove);
                    pricesWhereThisIsCreatorList.OnAfterAdd += new EventHandler(PricesWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return pricesWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.PriceBO> PricesWhereThisIsModifier // FK_Price_Modifier
        {
            get
            {
                if (!_pricesWhereThisIsModifierLoaded)
                {
                    _pricesWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.PricesWhereThisIsModifier.Load();
                        pricesWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.PriceBO>(obj.PricesWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.Price o in obj.PricesWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.PriceBO fkObj = new Indico.BusinessObjects.PriceBO(o, ref this._context);
                            pricesWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        pricesWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.PriceBO>();
                    }
                    
                    pricesWhereThisIsModifierList.OnBeforeRemove += new EventHandler(PricesWhereThisIsModifierList_OnBeforeRemove);
                    pricesWhereThisIsModifierList.OnAfterAdd += new EventHandler(PricesWhereThisIsModifierList_OnAfterAdd);
                }
                
                return pricesWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.PriceChangeEmailListBO> PriceChangeEmailListsWhereThisIsUser // FK_Price_User
        {
            get
            {
                if (!_priceChangeEmailListsWhereThisIsUserLoaded)
                {
                    _priceChangeEmailListsWhereThisIsUserLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.PriceChangeEmailListsWhereThisIsUser.Load();
                        priceChangeEmailListsWhereThisIsUserList = new IndicoList<Indico.BusinessObjects.PriceChangeEmailListBO>(obj.PriceChangeEmailListsWhereThisIsUser.Count);
                        
                        foreach (Indico.DAL.PriceChangeEmailList o in obj.PriceChangeEmailListsWhereThisIsUser)
                        {
                            Indico.BusinessObjects.PriceChangeEmailListBO fkObj = new Indico.BusinessObjects.PriceChangeEmailListBO(o, ref this._context);
                            priceChangeEmailListsWhereThisIsUserList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        priceChangeEmailListsWhereThisIsUserList = new IndicoList<Indico.BusinessObjects.PriceChangeEmailListBO>();
                    }
                    
                    priceChangeEmailListsWhereThisIsUserList.OnBeforeRemove += new EventHandler(PriceChangeEmailListsWhereThisIsUserList_OnBeforeRemove);
                    priceChangeEmailListsWhereThisIsUserList.OnAfterAdd += new EventHandler(PriceChangeEmailListsWhereThisIsUserList_OnAfterAdd);
                }
                
                return priceChangeEmailListsWhereThisIsUserList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.PriceLevelCostBO> PriceLevelCostsWhereThisIsCreator // FK_PriceLevelCost_Creator
        {
            get
            {
                if (!_priceLevelCostsWhereThisIsCreatorLoaded)
                {
                    _priceLevelCostsWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.PriceLevelCostsWhereThisIsCreator.Load();
                        priceLevelCostsWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.PriceLevelCostBO>(obj.PriceLevelCostsWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.PriceLevelCost o in obj.PriceLevelCostsWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.PriceLevelCostBO fkObj = new Indico.BusinessObjects.PriceLevelCostBO(o, ref this._context);
                            priceLevelCostsWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        priceLevelCostsWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.PriceLevelCostBO>();
                    }
                    
                    priceLevelCostsWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(PriceLevelCostsWhereThisIsCreatorList_OnBeforeRemove);
                    priceLevelCostsWhereThisIsCreatorList.OnAfterAdd += new EventHandler(PriceLevelCostsWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return priceLevelCostsWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.PriceLevelCostBO> PriceLevelCostsWhereThisIsModifier // FK_PriceLevelCost_Modifier
        {
            get
            {
                if (!_priceLevelCostsWhereThisIsModifierLoaded)
                {
                    _priceLevelCostsWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.PriceLevelCostsWhereThisIsModifier.Load();
                        priceLevelCostsWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.PriceLevelCostBO>(obj.PriceLevelCostsWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.PriceLevelCost o in obj.PriceLevelCostsWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.PriceLevelCostBO fkObj = new Indico.BusinessObjects.PriceLevelCostBO(o, ref this._context);
                            priceLevelCostsWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        priceLevelCostsWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.PriceLevelCostBO>();
                    }
                    
                    priceLevelCostsWhereThisIsModifierList.OnBeforeRemove += new EventHandler(PriceLevelCostsWhereThisIsModifierList_OnBeforeRemove);
                    priceLevelCostsWhereThisIsModifierList.OnAfterAdd += new EventHandler(PriceLevelCostsWhereThisIsModifierList_OnAfterAdd);
                }
                
                return priceLevelCostsWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.PriceLevelNewBO> PriceLevelNewsWhereThisIsLastModifier // FK_PriceLevelNew_User
        {
            get
            {
                if (!_priceLevelNewsWhereThisIsLastModifierLoaded)
                {
                    _priceLevelNewsWhereThisIsLastModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.PriceLevelNewsWhereThisIsLastModifier.Load();
                        priceLevelNewsWhereThisIsLastModifierList = new IndicoList<Indico.BusinessObjects.PriceLevelNewBO>(obj.PriceLevelNewsWhereThisIsLastModifier.Count);
                        
                        foreach (Indico.DAL.PriceLevelNew o in obj.PriceLevelNewsWhereThisIsLastModifier)
                        {
                            Indico.BusinessObjects.PriceLevelNewBO fkObj = new Indico.BusinessObjects.PriceLevelNewBO(o, ref this._context);
                            priceLevelNewsWhereThisIsLastModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        priceLevelNewsWhereThisIsLastModifierList = new IndicoList<Indico.BusinessObjects.PriceLevelNewBO>();
                    }
                    
                    priceLevelNewsWhereThisIsLastModifierList.OnBeforeRemove += new EventHandler(PriceLevelNewsWhereThisIsLastModifierList_OnBeforeRemove);
                    priceLevelNewsWhereThisIsLastModifierList.OnAfterAdd += new EventHandler(PriceLevelNewsWhereThisIsLastModifierList_OnAfterAdd);
                }
                
                return priceLevelNewsWhereThisIsLastModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.PriceListDownloadsBO> PriceListDownloadssWhereThisIsCreator // FK_PriceListDownloads_Creator
        {
            get
            {
                if (!_priceListDownloadssWhereThisIsCreatorLoaded)
                {
                    _priceListDownloadssWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.PriceListDownloadssWhereThisIsCreator.Load();
                        priceListDownloadssWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.PriceListDownloadsBO>(obj.PriceListDownloadssWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.PriceListDownloads o in obj.PriceListDownloadssWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.PriceListDownloadsBO fkObj = new Indico.BusinessObjects.PriceListDownloadsBO(o, ref this._context);
                            priceListDownloadssWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        priceListDownloadssWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.PriceListDownloadsBO>();
                    }
                    
                    priceListDownloadssWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(PriceListDownloadssWhereThisIsCreatorList_OnBeforeRemove);
                    priceListDownloadssWhereThisIsCreatorList.OnAfterAdd += new EventHandler(PriceListDownloadssWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return priceListDownloadssWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.QuoteBO> QuotesWhereThisIsCreator // FK_Quote_Creator
        {
            get
            {
                if (!_quotesWhereThisIsCreatorLoaded)
                {
                    _quotesWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.QuotesWhereThisIsCreator.Load();
                        quotesWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.QuoteBO>(obj.QuotesWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.Quote o in obj.QuotesWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.QuoteBO fkObj = new Indico.BusinessObjects.QuoteBO(o, ref this._context);
                            quotesWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        quotesWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.QuoteBO>();
                    }
                    
                    quotesWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(QuotesWhereThisIsCreatorList_OnBeforeRemove);
                    quotesWhereThisIsCreatorList.OnAfterAdd += new EventHandler(QuotesWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return quotesWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.QuoteBO> QuotesWhereThisIsModifier // FK_Quote_Modifier
        {
            get
            {
                if (!_quotesWhereThisIsModifierLoaded)
                {
                    _quotesWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.QuotesWhereThisIsModifier.Load();
                        quotesWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.QuoteBO>(obj.QuotesWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.Quote o in obj.QuotesWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.QuoteBO fkObj = new Indico.BusinessObjects.QuoteBO(o, ref this._context);
                            quotesWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        quotesWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.QuoteBO>();
                    }
                    
                    quotesWhereThisIsModifierList.OnBeforeRemove += new EventHandler(QuotesWhereThisIsModifierList_OnBeforeRemove);
                    quotesWhereThisIsModifierList.OnAfterAdd += new EventHandler(QuotesWhereThisIsModifierList_OnAfterAdd);
                }
                
                return quotesWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.QuoteChangeEmailListBO> QuoteChangeEmailListsWhereThisIsUser // FK_QuoteChangeEmailList_User
        {
            get
            {
                if (!_quoteChangeEmailListsWhereThisIsUserLoaded)
                {
                    _quoteChangeEmailListsWhereThisIsUserLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.QuoteChangeEmailListsWhereThisIsUser.Load();
                        quoteChangeEmailListsWhereThisIsUserList = new IndicoList<Indico.BusinessObjects.QuoteChangeEmailListBO>(obj.QuoteChangeEmailListsWhereThisIsUser.Count);
                        
                        foreach (Indico.DAL.QuoteChangeEmailList o in obj.QuoteChangeEmailListsWhereThisIsUser)
                        {
                            Indico.BusinessObjects.QuoteChangeEmailListBO fkObj = new Indico.BusinessObjects.QuoteChangeEmailListBO(o, ref this._context);
                            quoteChangeEmailListsWhereThisIsUserList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        quoteChangeEmailListsWhereThisIsUserList = new IndicoList<Indico.BusinessObjects.QuoteChangeEmailListBO>();
                    }
                    
                    quoteChangeEmailListsWhereThisIsUserList.OnBeforeRemove += new EventHandler(QuoteChangeEmailListsWhereThisIsUserList_OnBeforeRemove);
                    quoteChangeEmailListsWhereThisIsUserList.OnAfterAdd += new EventHandler(QuoteChangeEmailListsWhereThisIsUserList_OnAfterAdd);
                }
                
                return quoteChangeEmailListsWhereThisIsUserList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.ReservationBO> ReservationsWhereThisIsCoordinator // FK_Reservation_Coordinator
        {
            get
            {
                if (!_reservationsWhereThisIsCoordinatorLoaded)
                {
                    _reservationsWhereThisIsCoordinatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.ReservationsWhereThisIsCoordinator.Load();
                        reservationsWhereThisIsCoordinatorList = new IndicoList<Indico.BusinessObjects.ReservationBO>(obj.ReservationsWhereThisIsCoordinator.Count);
                        
                        foreach (Indico.DAL.Reservation o in obj.ReservationsWhereThisIsCoordinator)
                        {
                            Indico.BusinessObjects.ReservationBO fkObj = new Indico.BusinessObjects.ReservationBO(o, ref this._context);
                            reservationsWhereThisIsCoordinatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        reservationsWhereThisIsCoordinatorList = new IndicoList<Indico.BusinessObjects.ReservationBO>();
                    }
                    
                    reservationsWhereThisIsCoordinatorList.OnBeforeRemove += new EventHandler(ReservationsWhereThisIsCoordinatorList_OnBeforeRemove);
                    reservationsWhereThisIsCoordinatorList.OnAfterAdd += new EventHandler(ReservationsWhereThisIsCoordinatorList_OnAfterAdd);
                }
                
                return reservationsWhereThisIsCoordinatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.ReservationBO> ReservationsWhereThisIsCreator // FK_Reservation_Creator
        {
            get
            {
                if (!_reservationsWhereThisIsCreatorLoaded)
                {
                    _reservationsWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.ReservationsWhereThisIsCreator.Load();
                        reservationsWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.ReservationBO>(obj.ReservationsWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.Reservation o in obj.ReservationsWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.ReservationBO fkObj = new Indico.BusinessObjects.ReservationBO(o, ref this._context);
                            reservationsWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        reservationsWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.ReservationBO>();
                    }
                    
                    reservationsWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(ReservationsWhereThisIsCreatorList_OnBeforeRemove);
                    reservationsWhereThisIsCreatorList.OnAfterAdd += new EventHandler(ReservationsWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return reservationsWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.ReservationBO> ReservationsWhereThisIsModifier // FK_Reservation_Modifier
        {
            get
            {
                if (!_reservationsWhereThisIsModifierLoaded)
                {
                    _reservationsWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.ReservationsWhereThisIsModifier.Load();
                        reservationsWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.ReservationBO>(obj.ReservationsWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.Reservation o in obj.ReservationsWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.ReservationBO fkObj = new Indico.BusinessObjects.ReservationBO(o, ref this._context);
                            reservationsWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        reservationsWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.ReservationBO>();
                    }
                    
                    reservationsWhereThisIsModifierList.OnBeforeRemove += new EventHandler(ReservationsWhereThisIsModifierList_OnBeforeRemove);
                    reservationsWhereThisIsModifierList.OnAfterAdd += new EventHandler(ReservationsWhereThisIsModifierList_OnAfterAdd);
                }
                
                return reservationsWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.SupplierBO> SuppliersWhereThisIsCreator // FK_Supplier_Creator
        {
            get
            {
                if (!_suppliersWhereThisIsCreatorLoaded)
                {
                    _suppliersWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.SuppliersWhereThisIsCreator.Load();
                        suppliersWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.SupplierBO>(obj.SuppliersWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.Supplier o in obj.SuppliersWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.SupplierBO fkObj = new Indico.BusinessObjects.SupplierBO(o, ref this._context);
                            suppliersWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        suppliersWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.SupplierBO>();
                    }
                    
                    suppliersWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(SuppliersWhereThisIsCreatorList_OnBeforeRemove);
                    suppliersWhereThisIsCreatorList.OnAfterAdd += new EventHandler(SuppliersWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return suppliersWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.SupplierBO> SuppliersWhereThisIsModifier // FK_Supplier_Modifier
        {
            get
            {
                if (!_suppliersWhereThisIsModifierLoaded)
                {
                    _suppliersWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.SuppliersWhereThisIsModifier.Load();
                        suppliersWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.SupplierBO>(obj.SuppliersWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.Supplier o in obj.SuppliersWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.SupplierBO fkObj = new Indico.BusinessObjects.SupplierBO(o, ref this._context);
                            suppliersWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        suppliersWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.SupplierBO>();
                    }
                    
                    suppliersWhereThisIsModifierList.OnBeforeRemove += new EventHandler(SuppliersWhereThisIsModifierList_OnBeforeRemove);
                    suppliersWhereThisIsModifierList.OnAfterAdd += new EventHandler(SuppliersWhereThisIsModifierList_OnAfterAdd);
                }
                
                return suppliersWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.UserBO> UsersWhereThisIsCreator // FK_User_Creator
        {
            get
            {
                if (!_usersWhereThisIsCreatorLoaded)
                {
                    _usersWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.UsersWhereThisIsCreator.Load();
                        usersWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.UserBO>(obj.UsersWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.User o in obj.UsersWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.UserBO fkObj = new Indico.BusinessObjects.UserBO(o, ref this._context);
                            usersWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        usersWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.UserBO>();
                    }
                    
                    usersWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(UsersWhereThisIsCreatorList_OnBeforeRemove);
                    usersWhereThisIsCreatorList.OnAfterAdd += new EventHandler(UsersWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return usersWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.UserBO> UsersWhereThisIsModifier // FK_User_Modifier
        {
            get
            {
                if (!_usersWhereThisIsModifierLoaded)
                {
                    _usersWhereThisIsModifierLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.UsersWhereThisIsModifier.Load();
                        usersWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.UserBO>(obj.UsersWhereThisIsModifier.Count);
                        
                        foreach (Indico.DAL.User o in obj.UsersWhereThisIsModifier)
                        {
                            Indico.BusinessObjects.UserBO fkObj = new Indico.BusinessObjects.UserBO(o, ref this._context);
                            usersWhereThisIsModifierList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        usersWhereThisIsModifierList = new IndicoList<Indico.BusinessObjects.UserBO>();
                    }
                    
                    usersWhereThisIsModifierList.OnBeforeRemove += new EventHandler(UsersWhereThisIsModifierList_OnBeforeRemove);
                    usersWhereThisIsModifierList.OnAfterAdd += new EventHandler(UsersWhereThisIsModifierList_OnAfterAdd);
                }
                
                return usersWhereThisIsModifierList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.UserHistoryBO> UserHistorysWhereThisIsCreator // FK_UserHistory_Creator
        {
            get
            {
                if (!_userHistorysWhereThisIsCreatorLoaded)
                {
                    _userHistorysWhereThisIsCreatorLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.UserHistorysWhereThisIsCreator.Load();
                        userHistorysWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.UserHistoryBO>(obj.UserHistorysWhereThisIsCreator.Count);
                        
                        foreach (Indico.DAL.UserHistory o in obj.UserHistorysWhereThisIsCreator)
                        {
                            Indico.BusinessObjects.UserHistoryBO fkObj = new Indico.BusinessObjects.UserHistoryBO(o, ref this._context);
                            userHistorysWhereThisIsCreatorList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        userHistorysWhereThisIsCreatorList = new IndicoList<Indico.BusinessObjects.UserHistoryBO>();
                    }
                    
                    userHistorysWhereThisIsCreatorList.OnBeforeRemove += new EventHandler(UserHistorysWhereThisIsCreatorList_OnBeforeRemove);
                    userHistorysWhereThisIsCreatorList.OnAfterAdd += new EventHandler(UserHistorysWhereThisIsCreatorList_OnAfterAdd);
                }
                
                return userHistorysWhereThisIsCreatorList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.UserHistoryBO> UserHistorysWhereThisIsUser // FK_UserHistory_User
        {
            get
            {
                if (!_userHistorysWhereThisIsUserLoaded)
                {
                    _userHistorysWhereThisIsUserLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.UserHistorysWhereThisIsUser.Load();
                        userHistorysWhereThisIsUserList = new IndicoList<Indico.BusinessObjects.UserHistoryBO>(obj.UserHistorysWhereThisIsUser.Count);
                        
                        foreach (Indico.DAL.UserHistory o in obj.UserHistorysWhereThisIsUser)
                        {
                            Indico.BusinessObjects.UserHistoryBO fkObj = new Indico.BusinessObjects.UserHistoryBO(o, ref this._context);
                            userHistorysWhereThisIsUserList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        userHistorysWhereThisIsUserList = new IndicoList<Indico.BusinessObjects.UserHistoryBO>();
                    }
                    
                    userHistorysWhereThisIsUserList.OnBeforeRemove += new EventHandler(UserHistorysWhereThisIsUserList_OnBeforeRemove);
                    userHistorysWhereThisIsUserList.OnAfterAdd += new EventHandler(UserHistorysWhereThisIsUserList_OnAfterAdd);
                }
                
                return userHistorysWhereThisIsUserList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.UserLoginBO> UserLoginsWhereThisIsUser // FK_UserLogin_User
        {
            get
            {
                if (!_userLoginsWhereThisIsUserLoaded)
                {
                    _userLoginsWhereThisIsUserLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.UserLoginsWhereThisIsUser.Load();
                        userLoginsWhereThisIsUserList = new IndicoList<Indico.BusinessObjects.UserLoginBO>(obj.UserLoginsWhereThisIsUser.Count);
                        
                        foreach (Indico.DAL.UserLogin o in obj.UserLoginsWhereThisIsUser)
                        {
                            Indico.BusinessObjects.UserLoginBO fkObj = new Indico.BusinessObjects.UserLoginBO(o, ref this._context);
                            userLoginsWhereThisIsUserList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        userLoginsWhereThisIsUserList = new IndicoList<Indico.BusinessObjects.UserLoginBO>();
                    }
                    
                    userLoginsWhereThisIsUserList.OnBeforeRemove += new EventHandler(UserLoginsWhereThisIsUserList_OnBeforeRemove);
                    userLoginsWhereThisIsUserList.OnAfterAdd += new EventHandler(UserLoginsWhereThisIsUserList_OnAfterAdd);
                }
                
                return userLoginsWhereThisIsUserList;
            }
        }
        [XmlIgnoreAttribute]
        public IndicoList<Indico.BusinessObjects.RoleBO> UserRolesWhereThisIsUser // FK_UserRole_User
        {
            get
            {
                if (!_userRolesWhereThisIsUserLoaded)
                {
                    _userRolesWhereThisIsUserLoaded = true;
                    if (this.ID > 0)
                    {
                         IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                        Indico.DAL.User obj = (from o in context.User
                                     where o.ID == this.ID
                                     select o).FirstOrDefault();

                        obj.UserRolesWhereThisIsUser.Load();
                        userRolesWhereThisIsUserList = new IndicoList<Indico.BusinessObjects.RoleBO>(obj.UserRolesWhereThisIsUser.Count);
                        
                        foreach (Indico.DAL.Role o in obj.UserRolesWhereThisIsUser)
                        {
                            Indico.BusinessObjects.RoleBO fkObj = new Indico.BusinessObjects.RoleBO(o, ref this._context);
                            userRolesWhereThisIsUserList.Add(fkObj);
                        }
                        
                        if (this.Context == null)
                        {
                            context.Dispose();
                        }
                    }
                    else
                    {
                        userRolesWhereThisIsUserList = new IndicoList<Indico.BusinessObjects.RoleBO>();
                    }
                    
                    userRolesWhereThisIsUserList.OnBeforeRemove += new EventHandler(UserRolesWhereThisIsUserList_OnBeforeRemove);
                    userRolesWhereThisIsUserList.OnAfterAdd += new EventHandler(UserRolesWhereThisIsUserList_OnAfterAdd);
                }
                
                return userRolesWhereThisIsUserList;
            }
        }
        #endregion
        
        #endregion
        
        #region Internal Constructors
        /// <summary>
        /// Creates an instance of the UserBO class using the supplied Indico.DAL.User. 
        /// </summary>
        /// <param name="obj">a Indico.DAL.User whose properties will be used to initialise the UserBO</param>
        internal UserBO(Indico.DAL.User obj, ref IndicoContext context)
        {
            this._doNotUpdateDALObject = true;
            
            this.Context = context;
        
            // set the properties from the Indico.DAL.User 
            this.ID = obj.ID;
            
            this.Company = (obj.CompanyReference.EntityKey != null && obj.CompanyReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.CompanyReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.CreatedDate = obj.CreatedDate;
            this.Creator = (obj.CreatorReference.EntityKey != null && obj.CreatorReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.CreatorReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.DateLastLogin = obj.DateLastLogin;
            this.Designation = obj.Designation;
            this.EmailAddress = obj.EmailAddress;
            this.FamilyName = obj.FamilyName;
            this.GivenName = obj.GivenName;
            this.Guid = obj.Guid;
            this.HaveAccessForHTTPPost = obj.HaveAccessForHTTPPost;
            this.HomeTelephoneNumber = obj.HomeTelephoneNumber;
            this.IsActive = obj.IsActive;
            this.IsDeleted = obj.IsDeleted;
            this.IsDirectSalesPerson = obj.IsDirectSalesPerson;
            this.IsDistributor = obj.IsDistributor;
            this.MobileTelephoneNumber = obj.MobileTelephoneNumber;
            this.ModifiedDate = obj.ModifiedDate;
            this.Modifier = (obj.ModifierReference.EntityKey != null && obj.ModifierReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.ModifierReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.OfficeTelephoneNumber = obj.OfficeTelephoneNumber;
            this.Password = obj.Password;
            this.PhotoPath = obj.PhotoPath;
            this.Status = (obj.StatusReference.EntityKey != null && obj.StatusReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.StatusReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.Username = obj.Username;
            
            this._doNotUpdateDALObject = false;
        }
        #endregion
        
        #region Internal utility methods
        internal Indico.DAL.User SetDAL(IndicoEntities context)
        {
            this._doNotUpdateDALObject = true;
        
            // set the Indico.DAL.User properties
            Indico.DAL.User obj = new Indico.DAL.User();
            
            if (this.ID > 0)
            {
                obj = context.User.FirstOrDefault<User>(o => o.ID == this.ID);
            }
            
            obj.CreatedDate = this.CreatedDate;
            obj.DateLastLogin = this.DateLastLogin;
            obj.Designation = this.Designation;
            obj.EmailAddress = this.EmailAddress;
            obj.FamilyName = this.FamilyName;
            obj.GivenName = this.GivenName;
            obj.Guid = this.Guid;
            obj.HaveAccessForHTTPPost = this.HaveAccessForHTTPPost;
            obj.HomeTelephoneNumber = this.HomeTelephoneNumber;
            obj.IsActive = this.IsActive;
            obj.IsDeleted = this.IsDeleted;
            obj.IsDirectSalesPerson = this.IsDirectSalesPerson;
            obj.IsDistributor = this.IsDistributor;
            obj.MobileTelephoneNumber = this.MobileTelephoneNumber;
            obj.ModifiedDate = this.ModifiedDate;
            obj.OfficeTelephoneNumber = this.OfficeTelephoneNumber;
            obj.Password = this.Password;
            obj.PhotoPath = this.PhotoPath;
            obj.Username = this.Username;
            
            if (this.Company > 0) obj.Company = context.Company.FirstOrDefault(o => o.ID == this.Company);
            if (this.Creator > 0) obj.Creator = context.User.FirstOrDefault(o => o.ID == this.Creator);
            if (this.Modifier > 0) obj.Modifier = context.User.FirstOrDefault(o => o.ID == this.Modifier);
            if (this.Status > 0) obj.Status = context.UserStatus.FirstOrDefault(o => o.ID == this.Status);
            
            if (_banksWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.BankBO.ToEntityList(this.BanksWhereThisIsCreator, context), 
                    obj.BanksWhereThisIsCreator);
            if (_banksWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.BankBO.ToEntityList(this.BanksWhereThisIsModifier, context), 
                    obj.BanksWhereThisIsModifier);
            if (_companysWhereThisIsCoordinatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.CompanyBO.ToEntityList(this.CompanysWhereThisIsCoordinator, context), 
                    obj.CompanysWhereThisIsCoordinator);
            if (_companysWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.CompanyBO.ToEntityList(this.CompanysWhereThisIsCreator, context), 
                    obj.CompanysWhereThisIsCreator);
            if (_companysWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.CompanyBO.ToEntityList(this.CompanysWhereThisIsModifier, context), 
                    obj.CompanysWhereThisIsModifier);
            if (_companysWhereThisIsOwnerLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.CompanyBO.ToEntityList(this.CompanysWhereThisIsOwner, context), 
                    obj.CompanysWhereThisIsOwner);
            if (_companysWhereThisIsSecondaryCoordinatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.CompanyBO.ToEntityList(this.CompanysWhereThisIsSecondaryCoordinator, context), 
                    obj.CompanysWhereThisIsSecondaryCoordinator);
            if (_coordinatorEmailAddresssWhereThisIsUserLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.CoordinatorEmailAddressBO.ToEntityList(this.CoordinatorEmailAddresssWhereThisIsUser, context), 
                    obj.CoordinatorEmailAddresssWhereThisIsUser);
            if (_costSheetsWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.CostSheetBO.ToEntityList(this.CostSheetsWhereThisIsCreator, context), 
                    obj.CostSheetsWhereThisIsCreator);
            if (_costSheetsWhereThisIsIndimanModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.CostSheetBO.ToEntityList(this.CostSheetsWhereThisIsIndimanModifier, context), 
                    obj.CostSheetsWhereThisIsIndimanModifier);
            if (_costSheetsWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.CostSheetBO.ToEntityList(this.CostSheetsWhereThisIsModifier, context), 
                    obj.CostSheetsWhereThisIsModifier);
            if (_costSheetRemarkssWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.CostSheetRemarksBO.ToEntityList(this.CostSheetRemarkssWhereThisIsModifier, context), 
                    obj.CostSheetRemarkssWhereThisIsModifier);
            if (_defaultValuesPriceListsWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.DefaultValuesPriceListBO.ToEntityList(this.DefaultValuesPriceListsWhereThisIsCreator, context), 
                    obj.DefaultValuesPriceListsWhereThisIsCreator);
            if (_defaultValuesPriceListsWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.DefaultValuesPriceListBO.ToEntityList(this.DefaultValuesPriceListsWhereThisIsModifier, context), 
                    obj.DefaultValuesPriceListsWhereThisIsModifier);
            if (_distributorPriceLevelCostsWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.DistributorPriceLevelCostBO.ToEntityList(this.DistributorPriceLevelCostsWhereThisIsModifier, context), 
                    obj.DistributorPriceLevelCostsWhereThisIsModifier);
            if (_embroiderysWhereThisIsAssignedLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.EmbroideryBO.ToEntityList(this.EmbroiderysWhereThisIsAssigned, context), 
                    obj.EmbroiderysWhereThisIsAssigned);
            if (_embroiderysWhereThisIsCoordinatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.EmbroideryBO.ToEntityList(this.EmbroiderysWhereThisIsCoordinator, context), 
                    obj.EmbroiderysWhereThisIsCoordinator);
            if (_embroiderysWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.EmbroideryBO.ToEntityList(this.EmbroiderysWhereThisIsCreator, context), 
                    obj.EmbroiderysWhereThisIsCreator);
            if (_embroiderysWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.EmbroideryBO.ToEntityList(this.EmbroiderysWhereThisIsModifier, context), 
                    obj.EmbroiderysWhereThisIsModifier);
            if (_indimanCostSheetRemarkssWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.IndimanCostSheetRemarksBO.ToEntityList(this.IndimanCostSheetRemarkssWhereThisIsModifier, context), 
                    obj.IndimanCostSheetRemarkssWhereThisIsModifier);
            if (_invoicesWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.InvoiceBO.ToEntityList(this.InvoicesWhereThisIsCreator, context), 
                    obj.InvoicesWhereThisIsCreator);
            if (_invoicesWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.InvoiceBO.ToEntityList(this.InvoicesWhereThisIsModifier, context), 
                    obj.InvoicesWhereThisIsModifier);
            if (_jobNamesWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.JobNameBO.ToEntityList(this.JobNamesWhereThisIsCreator, context), 
                    obj.JobNamesWhereThisIsCreator);
            if (_jobNamesWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.JobNameBO.ToEntityList(this.JobNamesWhereThisIsModifier, context), 
                    obj.JobNamesWhereThisIsModifier);
            if (_labelPriceLevelCostsWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.LabelPriceLevelCostBO.ToEntityList(this.LabelPriceLevelCostsWhereThisIsModifier, context), 
                    obj.LabelPriceLevelCostsWhereThisIsModifier);
            if (_labelPriceListDownloadssWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.LabelPriceListDownloadsBO.ToEntityList(this.LabelPriceListDownloadssWhereThisIsCreator, context), 
                    obj.LabelPriceListDownloadssWhereThisIsCreator);
            if (_ordersWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.OrderBO.ToEntityList(this.OrdersWhereThisIsCreator, context), 
                    obj.OrdersWhereThisIsCreator);
            if (_ordersWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.OrderBO.ToEntityList(this.OrdersWhereThisIsModifier, context), 
                    obj.OrdersWhereThisIsModifier);
            if (_packingListsWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.PackingListBO.ToEntityList(this.PackingListsWhereThisIsCreator, context), 
                    obj.PackingListsWhereThisIsCreator);
            if (_packingListsWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.PackingListBO.ToEntityList(this.PackingListsWhereThisIsModifier, context), 
                    obj.PackingListsWhereThisIsModifier);
            if (_patternsWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.PatternBO.ToEntityList(this.PatternsWhereThisIsCreator, context), 
                    obj.PatternsWhereThisIsCreator);
            if (_patternsWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.PatternBO.ToEntityList(this.PatternsWhereThisIsModifier, context), 
                    obj.PatternsWhereThisIsModifier);
            if (_patternHistorysWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.PatternHistoryBO.ToEntityList(this.PatternHistorysWhereThisIsModifier, context), 
                    obj.PatternHistorysWhereThisIsModifier);
            if (_patternSuppliersWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.PatternSupplierBO.ToEntityList(this.PatternSuppliersWhereThisIsCreator, context), 
                    obj.PatternSuppliersWhereThisIsCreator);
            if (_patternSuppliersWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.PatternSupplierBO.ToEntityList(this.PatternSuppliersWhereThisIsModifier, context), 
                    obj.PatternSuppliersWhereThisIsModifier);
            if (_pricesWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.PriceBO.ToEntityList(this.PricesWhereThisIsCreator, context), 
                    obj.PricesWhereThisIsCreator);
            if (_pricesWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.PriceBO.ToEntityList(this.PricesWhereThisIsModifier, context), 
                    obj.PricesWhereThisIsModifier);
            if (_priceChangeEmailListsWhereThisIsUserLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.PriceChangeEmailListBO.ToEntityList(this.PriceChangeEmailListsWhereThisIsUser, context), 
                    obj.PriceChangeEmailListsWhereThisIsUser);
            if (_priceLevelCostsWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.PriceLevelCostBO.ToEntityList(this.PriceLevelCostsWhereThisIsCreator, context), 
                    obj.PriceLevelCostsWhereThisIsCreator);
            if (_priceLevelCostsWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.PriceLevelCostBO.ToEntityList(this.PriceLevelCostsWhereThisIsModifier, context), 
                    obj.PriceLevelCostsWhereThisIsModifier);
            if (_priceLevelNewsWhereThisIsLastModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.PriceLevelNewBO.ToEntityList(this.PriceLevelNewsWhereThisIsLastModifier, context), 
                    obj.PriceLevelNewsWhereThisIsLastModifier);
            if (_priceListDownloadssWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.PriceListDownloadsBO.ToEntityList(this.PriceListDownloadssWhereThisIsCreator, context), 
                    obj.PriceListDownloadssWhereThisIsCreator);
            if (_quotesWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.QuoteBO.ToEntityList(this.QuotesWhereThisIsCreator, context), 
                    obj.QuotesWhereThisIsCreator);
            if (_quotesWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.QuoteBO.ToEntityList(this.QuotesWhereThisIsModifier, context), 
                    obj.QuotesWhereThisIsModifier);
            if (_quoteChangeEmailListsWhereThisIsUserLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.QuoteChangeEmailListBO.ToEntityList(this.QuoteChangeEmailListsWhereThisIsUser, context), 
                    obj.QuoteChangeEmailListsWhereThisIsUser);
            if (_reservationsWhereThisIsCoordinatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.ReservationBO.ToEntityList(this.ReservationsWhereThisIsCoordinator, context), 
                    obj.ReservationsWhereThisIsCoordinator);
            if (_reservationsWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.ReservationBO.ToEntityList(this.ReservationsWhereThisIsCreator, context), 
                    obj.ReservationsWhereThisIsCreator);
            if (_reservationsWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.ReservationBO.ToEntityList(this.ReservationsWhereThisIsModifier, context), 
                    obj.ReservationsWhereThisIsModifier);
            if (_suppliersWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.SupplierBO.ToEntityList(this.SuppliersWhereThisIsCreator, context), 
                    obj.SuppliersWhereThisIsCreator);
            if (_suppliersWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.SupplierBO.ToEntityList(this.SuppliersWhereThisIsModifier, context), 
                    obj.SuppliersWhereThisIsModifier);
            if (_usersWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.UserBO.ToEntityList(this.UsersWhereThisIsCreator, context), 
                    obj.UsersWhereThisIsCreator);
            if (_usersWhereThisIsModifierLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.UserBO.ToEntityList(this.UsersWhereThisIsModifier, context), 
                    obj.UsersWhereThisIsModifier);
            if (_userHistorysWhereThisIsCreatorLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.UserHistoryBO.ToEntityList(this.UserHistorysWhereThisIsCreator, context), 
                    obj.UserHistorysWhereThisIsCreator);
            if (_userHistorysWhereThisIsUserLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.UserHistoryBO.ToEntityList(this.UserHistorysWhereThisIsUser, context), 
                    obj.UserHistorysWhereThisIsUser);
            if (_userLoginsWhereThisIsUserLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.UserLoginBO.ToEntityList(this.UserLoginsWhereThisIsUser, context), 
                    obj.UserLoginsWhereThisIsUser);
            if (_userRolesWhereThisIsUserLoaded)
                BusinessObject.SynchroniseEntityList(
                    Indico.BusinessObjects.RoleBO.ToEntityList(this.UserRolesWhereThisIsUser, context), 
                    obj.UserRolesWhereThisIsUser);
            
            this._doNotUpdateDALObject = false;
            
            return obj;
        }
        
        internal void SetBO(System.Data.Objects.DataClasses.EntityObject eObj)
        {
            this._doNotUpdateDALObject = true;
            
            // Check the received type
            if (eObj.GetType() != typeof(Indico.DAL.User))
            {
                throw new FormatException("Received wrong parameter type...");
            }

            Indico.DAL.User obj = (Indico.DAL.User)eObj;
            
            // set the Indico.BusinessObjects.UserBO properties
            this.ID = obj.ID;
            
            this.CreatedDate = obj.CreatedDate;
            this.DateLastLogin = obj.DateLastLogin;
            this.Designation = obj.Designation;
            this.EmailAddress = obj.EmailAddress;
            this.FamilyName = obj.FamilyName;
            this.GivenName = obj.GivenName;
            this.Guid = obj.Guid;
            this.HaveAccessForHTTPPost = obj.HaveAccessForHTTPPost;
            this.HomeTelephoneNumber = obj.HomeTelephoneNumber;
            this.IsActive = obj.IsActive;
            this.IsDeleted = obj.IsDeleted;
            this.IsDirectSalesPerson = obj.IsDirectSalesPerson;
            this.IsDistributor = obj.IsDistributor;
            this.MobileTelephoneNumber = obj.MobileTelephoneNumber;
            this.ModifiedDate = obj.ModifiedDate;
            this.OfficeTelephoneNumber = obj.OfficeTelephoneNumber;
            this.Password = obj.Password;
            this.PhotoPath = obj.PhotoPath;
            this.Username = obj.Username;
            
            this.Company = (obj.CompanyReference.EntityKey != null && obj.CompanyReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.CompanyReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.Creator = (obj.CreatorReference.EntityKey != null && obj.CreatorReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.CreatorReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.Modifier = (obj.ModifierReference.EntityKey != null && obj.ModifierReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.ModifierReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            this.Status = (obj.StatusReference.EntityKey != null && obj.StatusReference.EntityKey.EntityKeyValues.Count() > 0)
                ? (int)((System.Data.EntityKeyMember)obj.StatusReference.EntityKey.EntityKeyValues.GetValue(0)).Value
                : 0;
            
            this._doNotUpdateDALObject = false;
        }
        
        internal void SetBO(Indico.BusinessObjects.UserBO obj)
        {
            this._doNotUpdateDALObject = true;
            
            // set this Indico.BusinessObjects.UserBO properties
            this.ID = obj.ID;
            
            this.Company = obj.Company;
            this.CreatedDate = obj.CreatedDate;
            this.Creator = obj.Creator;
            this.DateLastLogin = obj.DateLastLogin;
            this.Designation = obj.Designation;
            this.EmailAddress = obj.EmailAddress;
            this.FamilyName = obj.FamilyName;
            this.GivenName = obj.GivenName;
            this.Guid = obj.Guid;
            this.HaveAccessForHTTPPost = obj.HaveAccessForHTTPPost;
            this.HomeTelephoneNumber = obj.HomeTelephoneNumber;
            this.IsActive = obj.IsActive;
            this.IsDeleted = obj.IsDeleted;
            this.IsDirectSalesPerson = obj.IsDirectSalesPerson;
            this.IsDistributor = obj.IsDistributor;
            this.MobileTelephoneNumber = obj.MobileTelephoneNumber;
            this.ModifiedDate = obj.ModifiedDate;
            this.Modifier = obj.Modifier;
            this.OfficeTelephoneNumber = obj.OfficeTelephoneNumber;
            this.Password = obj.Password;
            this.PhotoPath = obj.PhotoPath;
            this.Status = obj.Status;
            this.Username = obj.Username;
            
            this._doNotUpdateDALObject = false;
        }
        
        internal List<Indico.BusinessObjects.UserBO> IQueryableToList(IQueryable<Indico.DAL.User> oQuery)
        {
            List<Indico.DAL.User> oList = oQuery.ToList();
            List<Indico.BusinessObjects.UserBO> rList = new List<Indico.BusinessObjects.UserBO>(oList.Count);
            foreach (Indico.DAL.User o in oList)
            {
                Indico.BusinessObjects.UserBO obj = new Indico.BusinessObjects.UserBO(o, ref this._context);
                rList.Add(obj);
            }
            return rList;
        }
        
        internal List<Indico.BusinessObjects.UserBO> ToList(IEnumerable<Indico.DAL.User> oQuery)
        {
            List<Indico.DAL.User> oList = oQuery.ToList();
            List<Indico.BusinessObjects.UserBO> rList = new List<Indico.BusinessObjects.UserBO>(oList.Count);
            foreach (Indico.DAL.User o in oList)
            {
                Indico.BusinessObjects.UserBO obj = new Indico.BusinessObjects.UserBO(o, ref this._context);
                rList.Add(obj);
            }
            return rList;
        }
        
        internal static List<Indico.DAL.User> ToEntityList(List<UserBO> bos, IndicoEntities context)
        {
            // build a List of User entities from the business objects
            List<Int32> ids = (from o in bos
                                   select o.ID).ToList<Int32>();

            return (context.User.Count() == 0) ? new List<Indico.DAL.User>() : (context.User.Where(BuildContainsExpression<User, int>(e => e.ID, ids)))
                .ToList<Indico.DAL.User>();
        }
        
        internal static System.Data.Objects.DataClasses.EntityCollection<Indico.DAL.User> ToEntityCollection(List<UserBO> bos, IndicoEntities context)
        {
            // build an EntityCollection of User entities from the business objects
            List<Int32> ids = (from o in bos
                               select o.ID).ToList<Int32>();

            List<Indico.DAL.User> el = (context.User.Count() == 0) ? new List<Indico.DAL.User>() : 
                context.User.Where(BuildContainsExpression<User, int>(e => e.ID, ids))
                .ToList<Indico.DAL.User>();
                
            System.Data.Objects.DataClasses.EntityCollection<Indico.DAL.User> ec 
                = new System.Data.Objects.DataClasses.EntityCollection<Indico.DAL.User>();
                
            foreach (Indico.DAL.User r in el) 
            {
                ec.Add(r);
            }
            return ec;
        }

        internal Indico.DAL.User ToEntity(IndicoEntities context)
        {
            return (from o in context.User
                    where o.ID == this.ID
                    select o).FirstOrDefault();
        }
        #endregion
        
        #region BusinessObject methods
        
        #region Add Object
        
        public void Add()
        {
            if (this.Context != null)
            {
                this.Context.Context.AddToUser(this.ObjDAL);
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                Indico.DAL.User obj = this.SetDAL(objContext.Context);
                objContext.Context.AddToUser(obj);
                objContext.SaveChanges();
                objContext.Dispose(); 
            }
        }
        
        #endregion
        
        #region Delete Object
        
        public void Delete()
        {
            if (this.Context != null)
            {
                if (this.ObjDAL != null && this.ObjDAL.EntityKey != null)
                {
                    if (this.ObjDAL.EntityState == System.Data.EntityState.Detached)
                    {
                        this.Context.Context.Attach(this.ObjDAL);
                        this.Context.Context.DeleteObject(this.ObjDAL);
                    }
                    else
                    {
                        this.Context.Context.DeleteObject(this.ObjDAL);
                    }
                }
                else
                {
                    Indico.DAL.User obj = this.SetDAL(this.Context.Context);
                    this.Context.Context.DeleteObject(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                Indico.DAL.User obj = this.SetDAL(objContext.Context);
                this.Context.Context.DeleteObject(obj);
                objContext.Context.SaveChanges();
                objContext.Dispose();
            }
        }
        
        #endregion
        
        #region Get Single Object
        
        public bool GetObject()
        {
            return GetObject(true);
        }
        public bool GetObject(bool blnCache)
        {
            Indico.BusinessObjects.UserBO data = null;
            
            if (blnCache)
            {
                data = this.GetFromCache(this.ID) as Indico.BusinessObjects.UserBO; 
            }

            if (data != null)
            {
                SetBO(data);
            }
            else
            {
                try
                {
                    IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
                    IQueryable<Indico.DAL.User> oQuery =
                        from o in context.User
                        where o.ID == this.ID
                        select o;

                    List<Indico.DAL.User> oList = oQuery.ToList();
                    if (oList.Count != 1)
                        return false;
                    else
                    {
                        SetBO(oList[0]);
                        this.Cache();
                    }
                    
                    if (this.Context == null)
                    {
                        context.Dispose();
                    }
                }
                catch (System.Exception e)
                {
                    throw new IndicoException(String.Format(System.Globalization.CultureInfo.InvariantCulture, ResourceManager.GetString("Could not Retrieve a {0} from the data store", System.Globalization.CultureInfo.CurrentCulture), this.ToString()), e, IndicoException.Severities.USER, IndicoException.ERRNO.INT_ERR_BO_SELECT_FAIL);
                }
            }
            return true;
        }
        #endregion
        
        #region GetAllObject
        public List<Indico.BusinessObjects.UserBO> GetAllObject()
        {
            return GetAllObject(0, 0);
        }
        public List<Indico.BusinessObjects.UserBO> GetAllObject(int maximumRows)
        {
            return GetAllObject(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.UserBO> GetAllObject(int maximumRows, int startIndex)
        {
            return GetAllObject(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.UserBO> GetAllObject(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = new IndicoEntities();
            IQueryable<Indico.DAL.User> oQuery =
                (from o in context.User
                 orderby o.ID
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.ID).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.UserBO> users = IQueryableToList(oQuery);
            context.Dispose();
            return users;
        }
        #endregion
        
        #region SearchObjects
        public List<Indico.BusinessObjects.UserBO> SearchObjects()
        {
            return SearchObjects(0,0);
        }
        public List<Indico.BusinessObjects.UserBO> SearchObjects(int maximumRows)
        {
            return SearchObjects(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.UserBO> SearchObjects(int maximumRows, int startIndex)
        {
            return SearchObjects(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.UserBO> SearchObjects(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            IQueryable<Indico.DAL.User> oQuery =
                (from o in context.User
                 where
                    (this.ID == 0 || this.ID == o.ID) &&
                    (this.Company == 0 || this.Company == o.Company.ID) &&
                    (this.IsDistributor == false || this.IsDistributor == o.IsDistributor) &&
                    (this.Status == 0 || this.Status == o.Status.ID) &&
                    (this.Username == string.Empty || this.Username == o.Username) &&
                    (this.Password == string.Empty || this.Password == o.Password) &&
                    (this.GivenName == string.Empty || this.GivenName == o.GivenName) &&
                    (this.FamilyName == string.Empty || this.FamilyName == o.FamilyName) &&
                    (this.EmailAddress == string.Empty || this.EmailAddress == o.EmailAddress) &&
                    (this.PhotoPath == null || this.PhotoPath == o.PhotoPath) &&
                    (this.Creator == 0 || this.Creator == o.Creator.ID) &&
                    (this.CreatedDate == DateTime.MinValue || this.CreatedDate == o.CreatedDate) &&
                    (this.Modifier == 0 || this.Modifier == o.Modifier.ID) &&
                    (this.ModifiedDate == DateTime.MinValue || this.ModifiedDate == o.ModifiedDate) &&
                    (this.IsActive == false || this.IsActive == o.IsActive) &&
                    (this.IsDeleted == false || this.IsDeleted == o.IsDeleted) &&
                    (this.Guid == null || this.Guid == o.Guid) &&
                    (this.OfficeTelephoneNumber == string.Empty || this.OfficeTelephoneNumber == o.OfficeTelephoneNumber) &&
                    (this.MobileTelephoneNumber == null || this.MobileTelephoneNumber == o.MobileTelephoneNumber) &&
                    (this.HomeTelephoneNumber == null || this.HomeTelephoneNumber == o.HomeTelephoneNumber) &&
                    (this.DateLastLogin == null || this.DateLastLogin == o.DateLastLogin) &&
                    (this.HaveAccessForHTTPPost == null || this.HaveAccessForHTTPPost == o.HaveAccessForHTTPPost) &&
                    (this.Designation == null || this.Designation == o.Designation) &&
                    (this.IsDirectSalesPerson == false || this.IsDirectSalesPerson == o.IsDirectSalesPerson) 
                 orderby o.ID
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.ID).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.UserBO> users = IQueryableToList(oQuery);
            
            if (this.Context == null)
            {
                context.Dispose();
            }
            
            return users;
        }
        
        public int SearchObjectsCount()
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            return (from o in context.User
                 where
                    (this.ID == 0 || this.ID == o.ID) &&
                    (this.Company == 0 || this.Company == o.Company.ID) &&
                    (this.IsDistributor == false || this.IsDistributor == o.IsDistributor) &&
                    (this.Status == 0 || this.Status == o.Status.ID) &&
                    (this.Username == string.Empty || this.Username == o.Username) &&
                    (this.Password == string.Empty || this.Password == o.Password) &&
                    (this.GivenName == string.Empty || this.GivenName == o.GivenName) &&
                    (this.FamilyName == string.Empty || this.FamilyName == o.FamilyName) &&
                    (this.EmailAddress == string.Empty || this.EmailAddress == o.EmailAddress) &&
                    (this.PhotoPath == null || this.PhotoPath == o.PhotoPath) &&
                    (this.Creator == 0 || this.Creator == o.Creator.ID) &&
                    (this.CreatedDate == DateTime.MinValue || this.CreatedDate == o.CreatedDate) &&
                    (this.Modifier == 0 || this.Modifier == o.Modifier.ID) &&
                    (this.ModifiedDate == DateTime.MinValue || this.ModifiedDate == o.ModifiedDate) &&
                    (this.IsActive == false || this.IsActive == o.IsActive) &&
                    (this.IsDeleted == false || this.IsDeleted == o.IsDeleted) &&
                    (this.Guid == null || this.Guid == o.Guid) &&
                    (this.OfficeTelephoneNumber == string.Empty || this.OfficeTelephoneNumber == o.OfficeTelephoneNumber) &&
                    (this.MobileTelephoneNumber == null || this.MobileTelephoneNumber == o.MobileTelephoneNumber) &&
                    (this.HomeTelephoneNumber == null || this.HomeTelephoneNumber == o.HomeTelephoneNumber) &&
                    (this.DateLastLogin == null || this.DateLastLogin == o.DateLastLogin) &&
                    (this.HaveAccessForHTTPPost == null || this.HaveAccessForHTTPPost == o.HaveAccessForHTTPPost) &&
                    (this.Designation == null || this.Designation == o.Designation) &&
                    (this.IsDirectSalesPerson == false || this.IsDirectSalesPerson == o.IsDirectSalesPerson) 
                 orderby o.ID
                 select o).Count();
        }
        #endregion
        
        #region SearchObjectsLikeAnd
        public List<Indico.BusinessObjects.UserBO> SearchLikeAndObjects()
        {
            return SearchLikeAndObjects(0);
        }
        public List<Indico.BusinessObjects.UserBO> SearchLikeAndObjects(int maximumRows)
        {
            return SearchLikeAndObjects(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.UserBO> SearchLikeAndObjects(int maximumRows, int startIndex)
        {
            return SearchLikeAndObjects(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.UserBO> SearchLikeAndObjects(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            IQueryable<Indico.DAL.User> oQuery =
                (from o in context.User
                 where
                    (this.ID == 0 || o.ID == this.ID) &&
                    (this.Company == 0 || o.Company.ID == this.Company) &&
                    (this.IsDistributor == false || o.IsDistributor == this.IsDistributor) &&
                    (this.Status == 0 || o.Status.ID == this.Status) &&
                    (this.Username == string.Empty || o.Username.Contains(this.Username)) &&
                    (this.Password == string.Empty || o.Password.Contains(this.Password)) &&
                    (this.GivenName == string.Empty || o.GivenName.Contains(this.GivenName)) &&
                    (this.FamilyName == string.Empty || o.FamilyName.Contains(this.FamilyName)) &&
                    (this.EmailAddress == string.Empty || o.EmailAddress.Contains(this.EmailAddress)) &&
                    (this.PhotoPath == null || o.PhotoPath.Contains(this.PhotoPath)) &&
                    (this.Creator == 0 || o.Creator.ID == this.Creator) &&
                    (this.CreatedDate == DateTime.MinValue || o.CreatedDate == this.CreatedDate) &&
                    (this.Modifier == 0 || o.Modifier.ID == this.Modifier) &&
                    (this.ModifiedDate == DateTime.MinValue || o.ModifiedDate == this.ModifiedDate) &&
                    (this.IsActive == false || o.IsActive == this.IsActive) &&
                    (this.IsDeleted == false || o.IsDeleted == this.IsDeleted) &&
                    (this.Guid == null || o.Guid.Contains(this.Guid)) &&
                    (this.OfficeTelephoneNumber == string.Empty || o.OfficeTelephoneNumber.Contains(this.OfficeTelephoneNumber)) &&
                    (this.MobileTelephoneNumber == null || o.MobileTelephoneNumber.Contains(this.MobileTelephoneNumber)) &&
                    (this.HomeTelephoneNumber == null || o.HomeTelephoneNumber.Contains(this.HomeTelephoneNumber)) &&
                    (this.DateLastLogin == null || o.DateLastLogin == this.DateLastLogin) &&
                    (this.HaveAccessForHTTPPost == null || o.HaveAccessForHTTPPost == this.HaveAccessForHTTPPost) &&
                    (this.Designation == null || o.Designation.Contains(this.Designation)) &&
                    (this.IsDirectSalesPerson == false || o.IsDirectSalesPerson == this.IsDirectSalesPerson) 
                 orderby o.ID
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.ID).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.UserBO> users = IQueryableToList(oQuery);
            if (this.Context == null)
            {
                context.Dispose();
            }
            
            return users;
        }
        
        public int SearchLikeAndObjectsCount()
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            return (from o in context.User
                 where
                    (this.ID == 0 || o.ID == this.ID) &&
                    (this.Company == 0 || o.Company.ID == this.Company) &&
                    (this.IsDistributor == false || o.IsDistributor == this.IsDistributor) &&
                    (this.Status == 0 || o.Status.ID == this.Status) &&
                    (this.Username == string.Empty || o.Username.Contains(this.Username)) &&
                    (this.Password == string.Empty || o.Password.Contains(this.Password)) &&
                    (this.GivenName == string.Empty || o.GivenName.Contains(this.GivenName)) &&
                    (this.FamilyName == string.Empty || o.FamilyName.Contains(this.FamilyName)) &&
                    (this.EmailAddress == string.Empty || o.EmailAddress.Contains(this.EmailAddress)) &&
                    (this.PhotoPath == null || o.PhotoPath.Contains(this.PhotoPath)) &&
                    (this.Creator == 0 || o.Creator.ID == this.Creator) &&
                    (this.CreatedDate == DateTime.MinValue || o.CreatedDate == this.CreatedDate) &&
                    (this.Modifier == 0 || o.Modifier.ID == this.Modifier) &&
                    (this.ModifiedDate == DateTime.MinValue || o.ModifiedDate == this.ModifiedDate) &&
                    (this.IsActive == false || o.IsActive == this.IsActive) &&
                    (this.IsDeleted == false || o.IsDeleted == this.IsDeleted) &&
                    (this.Guid == null || o.Guid.Contains(this.Guid)) &&
                    (this.OfficeTelephoneNumber == string.Empty || o.OfficeTelephoneNumber.Contains(this.OfficeTelephoneNumber)) &&
                    (this.MobileTelephoneNumber == null || o.MobileTelephoneNumber.Contains(this.MobileTelephoneNumber)) &&
                    (this.HomeTelephoneNumber == null || o.HomeTelephoneNumber.Contains(this.HomeTelephoneNumber)) &&
                    (this.DateLastLogin == null || o.DateLastLogin == this.DateLastLogin) &&
                    (this.HaveAccessForHTTPPost == null || o.HaveAccessForHTTPPost == this.HaveAccessForHTTPPost) &&
                    (this.Designation == null || o.Designation.Contains(this.Designation)) &&
                    (this.IsDirectSalesPerson == false || o.IsDirectSalesPerson == this.IsDirectSalesPerson) 
                 orderby o.ID
                 select o).Count();
            
        }
        #endregion
        
        #region SearchObjectsLikeOr
        public List<Indico.BusinessObjects.UserBO> SearchLikeOrObjects()
        {
            return SearchLikeOrObjects(0);
        }
        public List<Indico.BusinessObjects.UserBO> SearchLikeOrObjects(int maximumRows)
        {
            return SearchLikeOrObjects(maximumRows, 0);
        }
        public List<Indico.BusinessObjects.UserBO> SearchLikeOrObjects(int maximumRows, int startIndex)
        {
            return SearchLikeOrObjects(maximumRows, startIndex, null, false);
        }
        public List<Indico.BusinessObjects.UserBO> SearchLikeOrObjects(int maximumRows, int startIndex, string sortExpression, bool sortDescending)
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            IQueryable<Indico.DAL.User> oQuery =
                (from o in context.User
                 where
                    (this.ID == 0 || this.ID == o.ID) && 
                    (this.Company == 0 || this.Company == o.Company.ID) && 
                    (this.IsDistributor == false || this.IsDistributor == o.IsDistributor) && 
                    (this.Status == 0 || this.Status == o.Status.ID) && 
                    (this.Creator == 0 || this.Creator == o.Creator.ID) && 
                    (this.CreatedDate == DateTime.MinValue || this.CreatedDate == o.CreatedDate) && 
                    (this.Modifier == 0 || this.Modifier == o.Modifier.ID) && 
                    (this.ModifiedDate == DateTime.MinValue || this.ModifiedDate == o.ModifiedDate) && 
                    (this.IsActive == false || this.IsActive == o.IsActive) && 
                    (this.IsDeleted == false || this.IsDeleted == o.IsDeleted) && 
                    (this.DateLastLogin == null || this.DateLastLogin == o.DateLastLogin) && 
                    (this.HaveAccessForHTTPPost == null || this.HaveAccessForHTTPPost == o.HaveAccessForHTTPPost) && 
                    (this.IsDirectSalesPerson == false || this.IsDirectSalesPerson == o.IsDirectSalesPerson) && 
                    ((o.Username.Contains(this.Username)) ||
                    (o.Password.Contains(this.Password)) ||
                    (o.GivenName.Contains(this.GivenName)) ||
                    (o.FamilyName.Contains(this.FamilyName)) ||
                    (o.EmailAddress.Contains(this.EmailAddress)) ||
                    (o.PhotoPath.Contains(this.PhotoPath)) ||
                    (o.Guid.Contains(this.Guid)) ||
                    (o.OfficeTelephoneNumber.Contains(this.OfficeTelephoneNumber)) ||
                    (o.MobileTelephoneNumber.Contains(this.MobileTelephoneNumber)) ||
                    (o.HomeTelephoneNumber.Contains(this.HomeTelephoneNumber)) ||
                    (o.Designation.Contains(this.Designation)) ||
                    (this.Username == null && this.Password == null && this.GivenName == null && this.FamilyName == null && this.EmailAddress == null && this.PhotoPath == null && this.Guid == null && this.OfficeTelephoneNumber == null && this.MobileTelephoneNumber == null && this.HomeTelephoneNumber == null && this.Designation == null ))
                 orderby o.ID
                 select o);

            if (sortExpression != null && sortExpression.Length > 0)
            {
                // using System.Linq.Dynamic here in Dynamic.cs;
                if (sortDescending)
                    oQuery = oQuery.OrderBy(sortExpression + " desc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
                else
                    oQuery = oQuery.OrderBy(sortExpression + " asc").Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);
            }
            else
                oQuery = oQuery.OrderBy(obj => obj.ID).Skip(startIndex).Take((maximumRows == 0) ? Int32.MaxValue : maximumRows);

            List<Indico.BusinessObjects.UserBO> users = IQueryableToList(oQuery);
            if (this.Context == null)
            {
                context.Dispose();
            }
            
            return users;
        }
        
        public int SearchLikeOrObjectsCount()
        {
            IndicoEntities context = (this.Context != null) ? this.Context.Context : new IndicoEntities();
            return (from o in context.User
                 where
                    (this.ID == 0 || this.ID == o.ID) && 
                    (this.Company == 0 || this.Company == o.Company.ID) && 
                    (this.IsDistributor == false || this.IsDistributor == o.IsDistributor) && 
                    (this.Status == 0 || this.Status == o.Status.ID) && 
                    (this.Creator == 0 || this.Creator == o.Creator.ID) && 
                    (this.CreatedDate == DateTime.MinValue || this.CreatedDate == o.CreatedDate) && 
                    (this.Modifier == 0 || this.Modifier == o.Modifier.ID) && 
                    (this.ModifiedDate == DateTime.MinValue || this.ModifiedDate == o.ModifiedDate) && 
                    (this.IsActive == false || this.IsActive == o.IsActive) && 
                    (this.IsDeleted == false || this.IsDeleted == o.IsDeleted) && 
                    (this.DateLastLogin == null || this.DateLastLogin == o.DateLastLogin) && 
                    (this.HaveAccessForHTTPPost == null || this.HaveAccessForHTTPPost == o.HaveAccessForHTTPPost) && 
                    (this.IsDirectSalesPerson == false || this.IsDirectSalesPerson == o.IsDirectSalesPerson) && 
                    ((o.Username.Contains(this.Username)) ||
                    (o.Password.Contains(this.Password)) ||
                    (o.GivenName.Contains(this.GivenName)) ||
                    (o.FamilyName.Contains(this.FamilyName)) ||
                    (o.EmailAddress.Contains(this.EmailAddress)) ||
                    (o.PhotoPath.Contains(this.PhotoPath)) ||
                    (o.Guid.Contains(this.Guid)) ||
                    (o.OfficeTelephoneNumber.Contains(this.OfficeTelephoneNumber)) ||
                    (o.MobileTelephoneNumber.Contains(this.MobileTelephoneNumber)) ||
                    (o.HomeTelephoneNumber.Contains(this.HomeTelephoneNumber)) ||
                    (o.Designation.Contains(this.Designation)) ||
                    (this.Username == null && this.Password == null && this.GivenName == null && this.FamilyName == null && this.EmailAddress == null && this.PhotoPath == null && this.Guid == null && this.OfficeTelephoneNumber == null && this.MobileTelephoneNumber == null && this.HomeTelephoneNumber == null && this.Designation == null ))
                 orderby o.ID
                 select o).Count();
            
        }
        #endregion
        
        #region Serialization methods
        /// <summary>
        /// Serializes the Indico.BusinessObjects.UserBO to an XML representation
        /// </summary>
        /// <returns>a XML string serialized representation</returns>
        public string SerializeObject()
        {
            string strReturn = "";

            System.IO.MemoryStream objStream = new System.IO.MemoryStream();

            System.Xml.Serialization.XmlSerializer x = new System.Xml.Serialization.XmlSerializer(this.GetType());

            x.Serialize(objStream, this);

            System.Text.Encoding encoding = System.Text.Encoding.UTF8;
            // Read string from binary file with UTF8 encoding
            strReturn = encoding.GetString(objStream.GetBuffer());

            objStream.Close();
            return strReturn;

        }

        /// <summary>
        /// Deserializes Indico.BusinessObjects.UserBO object from an XML representation
        /// </summary>
        /// <param name="strXML">a XML string serialized representation</param>
        public Indico.BusinessObjects.UserBO DeserializeObject(string strXML)
        {
            Indico.BusinessObjects.UserBO objTemp = null;
            System.Xml.XmlDocument objXML = new System.Xml.XmlDocument();

            objXML.LoadXml(strXML);
            System.Text.Encoding encoding = System.Text.Encoding.UTF8;

            System.IO.MemoryStream objStream = new System.IO.MemoryStream();
            byte[] b = encoding.GetBytes(objXML.OuterXml);

            objStream.Write(b, 0, (int)b.Length);
            objStream.Position = 0;
            System.Xml.Serialization.XmlSerializer x = new System.Xml.Serialization.XmlSerializer(this.GetType());

            objTemp = (Indico.BusinessObjects.UserBO)x.Deserialize(objStream);
            objStream.Close();
            return objTemp;
        }

        /// <summary>
        /// Returns a simple XML representation of Indico.BusinessObjects.UserBO object in an XmlElement
        /// </summary>
        /// <returns>An XML snippet representing the object</returns>
        public string ToXmlString()
        {
            // MW TODO - implement this better.
            return SerializeObject();
        }
        #endregion
        
        #region OnPropertyChange Methods
        partial void OnIDChanged()
        {
            OnUserBOIDChanged();
        }
        
        partial void OnIDChanging(int value)
        {
            if (value < 0)
            {
                throw new Exception(String.Format("UserBO.ID must be more than or equal to 0. The supplied value was {0}.", value));
            }
            OnUserBOIDChanging(value);
        }
        partial void OnIDChanged();
        partial void OnIDChanging(int value);
        partial void OnUserBOIDChanged();
        partial void OnUserBOIDChanging(int value);
        
        partial void OnCompanyChanged()
        {
            OnUserBOCompanyChanged();
        }
        
        partial void OnCompanyChanging(int value)
        {
            if (value < 0)
            {
                throw new Exception(String.Format("UserBO.Company must be more than or equal to 0. The supplied value was {0}.", value));
            }
            OnUserBOCompanyChanging(value);
        }
        partial void OnCompanyChanged();
        partial void OnCompanyChanging(int value);
        partial void OnUserBOCompanyChanged();
        partial void OnUserBOCompanyChanging(int value);
        
        partial void OnIsDistributorChanged()
        {
            OnUserBOIsDistributorChanged();
        }
        
        partial void OnIsDistributorChanging(bool value)
        {
            OnUserBOIsDistributorChanging(value);
        }
        partial void OnIsDistributorChanged();
        partial void OnIsDistributorChanging(bool value);
        partial void OnUserBOIsDistributorChanged();
        partial void OnUserBOIsDistributorChanging(bool value);
        
        partial void OnStatusChanged()
        {
            OnUserBOStatusChanged();
        }
        
        partial void OnStatusChanging(int value)
        {
            if (value < 0)
            {
                throw new Exception(String.Format("UserBO.Status must be more than or equal to 0. The supplied value was {0}.", value));
            }
            OnUserBOStatusChanging(value);
        }
        partial void OnStatusChanged();
        partial void OnStatusChanging(int value);
        partial void OnUserBOStatusChanged();
        partial void OnUserBOStatusChanging(int value);
        
        partial void OnUsernameChanged()
        {
            OnUserBOUsernameChanged();
        }
        
        partial void OnUsernameChanging(string value)
        {
            if (value != null && value.Length > 32)
            {
                throw new Exception(String.Format("UserBO.Username has a maximum length of 32. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnUserBOUsernameChanging(value);
        }
        partial void OnUsernameChanged();
        partial void OnUsernameChanging(string value);
        partial void OnUserBOUsernameChanged();
        partial void OnUserBOUsernameChanging(string value);
        
        partial void OnPasswordChanged()
        {
            OnUserBOPasswordChanged();
        }
        
        partial void OnPasswordChanging(string value)
        {
            if (value != null && value.Length > 255)
            {
                throw new Exception(String.Format("UserBO.Password has a maximum length of 255. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnUserBOPasswordChanging(value);
        }
        partial void OnPasswordChanged();
        partial void OnPasswordChanging(string value);
        partial void OnUserBOPasswordChanged();
        partial void OnUserBOPasswordChanging(string value);
        
        partial void OnGivenNameChanged()
        {
            OnUserBOGivenNameChanged();
        }
        
        partial void OnGivenNameChanging(string value)
        {
            if (value != null && value.Length > 32)
            {
                throw new Exception(String.Format("UserBO.GivenName has a maximum length of 32. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnUserBOGivenNameChanging(value);
        }
        partial void OnGivenNameChanged();
        partial void OnGivenNameChanging(string value);
        partial void OnUserBOGivenNameChanged();
        partial void OnUserBOGivenNameChanging(string value);
        
        partial void OnFamilyNameChanged()
        {
            OnUserBOFamilyNameChanged();
        }
        
        partial void OnFamilyNameChanging(string value)
        {
            if (value != null && value.Length > 32)
            {
                throw new Exception(String.Format("UserBO.FamilyName has a maximum length of 32. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnUserBOFamilyNameChanging(value);
        }
        partial void OnFamilyNameChanged();
        partial void OnFamilyNameChanging(string value);
        partial void OnUserBOFamilyNameChanged();
        partial void OnUserBOFamilyNameChanging(string value);
        
        partial void OnEmailAddressChanged()
        {
            OnUserBOEmailAddressChanged();
        }
        
        partial void OnEmailAddressChanging(string value)
        {
            if (value != null && value.Length > 128)
            {
                throw new Exception(String.Format("UserBO.EmailAddress has a maximum length of 128. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnUserBOEmailAddressChanging(value);
        }
        partial void OnEmailAddressChanged();
        partial void OnEmailAddressChanging(string value);
        partial void OnUserBOEmailAddressChanged();
        partial void OnUserBOEmailAddressChanging(string value);
        
        partial void OnPhotoPathChanged()
        {
            OnUserBOPhotoPathChanged();
        }
        
        partial void OnPhotoPathChanging(string value)
        {
            if (value != null && value.Length > 255)
            {
                throw new Exception(String.Format("UserBO.PhotoPath has a maximum length of 255. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnUserBOPhotoPathChanging(value);
        }
        partial void OnPhotoPathChanged();
        partial void OnPhotoPathChanging(string value);
        partial void OnUserBOPhotoPathChanged();
        partial void OnUserBOPhotoPathChanging(string value);
        
        partial void OnCreatorChanged()
        {
            OnUserBOCreatorChanged();
        }
        
        partial void OnCreatorChanging(int value)
        {
            if (value < 0)
            {
                throw new Exception(String.Format("UserBO.Creator must be more than or equal to 0. The supplied value was {0}.", value));
            }
            OnUserBOCreatorChanging(value);
        }
        partial void OnCreatorChanged();
        partial void OnCreatorChanging(int value);
        partial void OnUserBOCreatorChanged();
        partial void OnUserBOCreatorChanging(int value);
        
        partial void OnCreatedDateChanged()
        {
            OnUserBOCreatedDateChanged();
        }
        
        partial void OnCreatedDateChanging(DateTime value)
        {
            OnUserBOCreatedDateChanging(value);
        }
        partial void OnCreatedDateChanged();
        partial void OnCreatedDateChanging(DateTime value);
        partial void OnUserBOCreatedDateChanged();
        partial void OnUserBOCreatedDateChanging(DateTime value);
        
        partial void OnModifierChanged()
        {
            OnUserBOModifierChanged();
        }
        
        partial void OnModifierChanging(int value)
        {
            if (value < 0)
            {
                throw new Exception(String.Format("UserBO.Modifier must be more than or equal to 0. The supplied value was {0}.", value));
            }
            OnUserBOModifierChanging(value);
        }
        partial void OnModifierChanged();
        partial void OnModifierChanging(int value);
        partial void OnUserBOModifierChanged();
        partial void OnUserBOModifierChanging(int value);
        
        partial void OnModifiedDateChanged()
        {
            OnUserBOModifiedDateChanged();
        }
        
        partial void OnModifiedDateChanging(DateTime value)
        {
            OnUserBOModifiedDateChanging(value);
        }
        partial void OnModifiedDateChanged();
        partial void OnModifiedDateChanging(DateTime value);
        partial void OnUserBOModifiedDateChanged();
        partial void OnUserBOModifiedDateChanging(DateTime value);
        
        partial void OnIsActiveChanged()
        {
            OnUserBOIsActiveChanged();
        }
        
        partial void OnIsActiveChanging(bool value)
        {
            OnUserBOIsActiveChanging(value);
        }
        partial void OnIsActiveChanged();
        partial void OnIsActiveChanging(bool value);
        partial void OnUserBOIsActiveChanged();
        partial void OnUserBOIsActiveChanging(bool value);
        
        partial void OnIsDeletedChanged()
        {
            OnUserBOIsDeletedChanged();
        }
        
        partial void OnIsDeletedChanging(bool value)
        {
            OnUserBOIsDeletedChanging(value);
        }
        partial void OnIsDeletedChanged();
        partial void OnIsDeletedChanging(bool value);
        partial void OnUserBOIsDeletedChanged();
        partial void OnUserBOIsDeletedChanging(bool value);
        
        partial void OnGuidChanged()
        {
            OnUserBOGuidChanged();
        }
        
        partial void OnGuidChanging(string value)
        {
            if (value != null && value.Length > 36)
            {
                throw new Exception(String.Format("UserBO.Guid has a maximum length of 36. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnUserBOGuidChanging(value);
        }
        partial void OnGuidChanged();
        partial void OnGuidChanging(string value);
        partial void OnUserBOGuidChanged();
        partial void OnUserBOGuidChanging(string value);
        
        partial void OnOfficeTelephoneNumberChanged()
        {
            OnUserBOOfficeTelephoneNumberChanged();
        }
        
        partial void OnOfficeTelephoneNumberChanging(string value)
        {
            if (value != null && value.Length > 20)
            {
                throw new Exception(String.Format("UserBO.OfficeTelephoneNumber has a maximum length of 20. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnUserBOOfficeTelephoneNumberChanging(value);
        }
        partial void OnOfficeTelephoneNumberChanged();
        partial void OnOfficeTelephoneNumberChanging(string value);
        partial void OnUserBOOfficeTelephoneNumberChanged();
        partial void OnUserBOOfficeTelephoneNumberChanging(string value);
        
        partial void OnMobileTelephoneNumberChanged()
        {
            OnUserBOMobileTelephoneNumberChanged();
        }
        
        partial void OnMobileTelephoneNumberChanging(string value)
        {
            if (value != null && value.Length > 20)
            {
                throw new Exception(String.Format("UserBO.MobileTelephoneNumber has a maximum length of 20. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnUserBOMobileTelephoneNumberChanging(value);
        }
        partial void OnMobileTelephoneNumberChanged();
        partial void OnMobileTelephoneNumberChanging(string value);
        partial void OnUserBOMobileTelephoneNumberChanged();
        partial void OnUserBOMobileTelephoneNumberChanging(string value);
        
        partial void OnHomeTelephoneNumberChanged()
        {
            OnUserBOHomeTelephoneNumberChanged();
        }
        
        partial void OnHomeTelephoneNumberChanging(string value)
        {
            if (value != null && value.Length > 20)
            {
                throw new Exception(String.Format("UserBO.HomeTelephoneNumber has a maximum length of 20. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnUserBOHomeTelephoneNumberChanging(value);
        }
        partial void OnHomeTelephoneNumberChanged();
        partial void OnHomeTelephoneNumberChanging(string value);
        partial void OnUserBOHomeTelephoneNumberChanged();
        partial void OnUserBOHomeTelephoneNumberChanging(string value);
        
        partial void OnDateLastLoginChanged()
        {
            OnUserBODateLastLoginChanged();
        }
        
        partial void OnDateLastLoginChanging(DateTime? value)
        {
            OnUserBODateLastLoginChanging(value);
        }
        partial void OnDateLastLoginChanged();
        partial void OnDateLastLoginChanging(DateTime? value);
        partial void OnUserBODateLastLoginChanged();
        partial void OnUserBODateLastLoginChanging(DateTime? value);
        
        partial void OnHaveAccessForHTTPPostChanged()
        {
            OnUserBOHaveAccessForHTTPPostChanged();
        }
        
        partial void OnHaveAccessForHTTPPostChanging(bool? value)
        {
            OnUserBOHaveAccessForHTTPPostChanging(value);
        }
        partial void OnHaveAccessForHTTPPostChanged();
        partial void OnHaveAccessForHTTPPostChanging(bool? value);
        partial void OnUserBOHaveAccessForHTTPPostChanged();
        partial void OnUserBOHaveAccessForHTTPPostChanging(bool? value);
        
        partial void OnDesignationChanged()
        {
            OnUserBODesignationChanged();
        }
        
        partial void OnDesignationChanging(string value)
        {
            if (value != null && value.Length > 255)
            {
                throw new Exception(String.Format("UserBO.Designation has a maximum length of 255. The supplied value \"{0}\" has a length of {1}", value, value.Length));
            }
            OnUserBODesignationChanging(value);
        }
        partial void OnDesignationChanged();
        partial void OnDesignationChanging(string value);
        partial void OnUserBODesignationChanged();
        partial void OnUserBODesignationChanging(string value);
        
        partial void OnIsDirectSalesPersonChanged()
        {
            OnUserBOIsDirectSalesPersonChanged();
        }
        
        partial void OnIsDirectSalesPersonChanging(bool value)
        {
            OnUserBOIsDirectSalesPersonChanging(value);
        }
        partial void OnIsDirectSalesPersonChanged();
        partial void OnIsDirectSalesPersonChanging(bool value);
        partial void OnUserBOIsDirectSalesPersonChanged();
        partial void OnUserBOIsDirectSalesPersonChanging(bool value);
        
        #endregion
        
        #region IComparable Members

        public int CompareTo(object obj)
        {
            if (!(obj is Indico.BusinessObjects.UserBO))
                return 1;
            Indico.BusinessObjects.UserBOComparer c = new Indico.BusinessObjects.UserBOComparer();
            return c.Compare(this, obj as Indico.BusinessObjects.UserBO);
        }

        #endregion
        #endregion
        
        #region Events
        
        void obj_PropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e)
        {
            if (e.PropertyName == "ID")
            {
                // reload me
                this.SetBO((Indico.DAL.User)sender);
            }
        }
        
        void BanksWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Bank obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.BankBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.BankBO>)sender)[((IndicoList<Indico.BusinessObjects.BankBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.BanksWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.BankBO>)sender)[((IndicoList<Indico.BusinessObjects.BankBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.BanksWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void BanksWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Bank obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.BankBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.BankBO>)sender)[((IndicoList<Indico.BusinessObjects.BankBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.BanksWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.BankBO>)sender)[((IndicoList<Indico.BusinessObjects.BankBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.BanksWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void BanksWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Bank obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.BankBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.BankBO>)sender)[((IndicoList<Indico.BusinessObjects.BankBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.BanksWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.BankBO>)sender)[((IndicoList<Indico.BusinessObjects.BankBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.BanksWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void BanksWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Bank obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.BankBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.BankBO>)sender)[((IndicoList<Indico.BusinessObjects.BankBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.BanksWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.BankBO>)sender)[((IndicoList<Indico.BusinessObjects.BankBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.BanksWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CompanysWhereThisIsCoordinatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Company obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CompanysWhereThisIsCoordinator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CompanysWhereThisIsCoordinator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CompanysWhereThisIsCoordinatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Company obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CompanysWhereThisIsCoordinator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CompanysWhereThisIsCoordinator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CompanysWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Company obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CompanysWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CompanysWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CompanysWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Company obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CompanysWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CompanysWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CompanysWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Company obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CompanysWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CompanysWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CompanysWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Company obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CompanysWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CompanysWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CompanysWhereThisIsOwnerList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Company obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CompanysWhereThisIsOwner.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CompanysWhereThisIsOwner.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CompanysWhereThisIsOwnerList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Company obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CompanysWhereThisIsOwner.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CompanysWhereThisIsOwner.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CompanysWhereThisIsSecondaryCoordinatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Company obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CompanysWhereThisIsSecondaryCoordinator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CompanysWhereThisIsSecondaryCoordinator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CompanysWhereThisIsSecondaryCoordinatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Company obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CompanysWhereThisIsSecondaryCoordinator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CompanyBO>)sender)[((IndicoList<Indico.BusinessObjects.CompanyBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CompanysWhereThisIsSecondaryCoordinator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CoordinatorEmailAddresssWhereThisIsUserList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.CoordinatorEmailAddress obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CoordinatorEmailAddressBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CoordinatorEmailAddressBO>)sender)[((IndicoList<Indico.BusinessObjects.CoordinatorEmailAddressBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CoordinatorEmailAddresssWhereThisIsUser.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CoordinatorEmailAddressBO>)sender)[((IndicoList<Indico.BusinessObjects.CoordinatorEmailAddressBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CoordinatorEmailAddresssWhereThisIsUser.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CoordinatorEmailAddresssWhereThisIsUserList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.CoordinatorEmailAddress obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CoordinatorEmailAddressBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CoordinatorEmailAddressBO>)sender)[((IndicoList<Indico.BusinessObjects.CoordinatorEmailAddressBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CoordinatorEmailAddresssWhereThisIsUser.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CoordinatorEmailAddressBO>)sender)[((IndicoList<Indico.BusinessObjects.CoordinatorEmailAddressBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CoordinatorEmailAddresssWhereThisIsUser.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CostSheetsWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.CostSheet obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CostSheetsWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CostSheetsWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CostSheetsWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.CostSheet obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CostSheetsWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CostSheetsWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CostSheetsWhereThisIsIndimanModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.CostSheet obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CostSheetsWhereThisIsIndimanModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CostSheetsWhereThisIsIndimanModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CostSheetsWhereThisIsIndimanModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.CostSheet obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CostSheetsWhereThisIsIndimanModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CostSheetsWhereThisIsIndimanModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CostSheetsWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.CostSheet obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CostSheetsWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CostSheetsWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CostSheetsWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.CostSheet obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CostSheetsWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CostSheetsWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CostSheetRemarkssWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.CostSheetRemarks obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CostSheetRemarksBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CostSheetRemarksBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetRemarksBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CostSheetRemarkssWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CostSheetRemarksBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetRemarksBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CostSheetRemarkssWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void CostSheetRemarkssWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.CostSheetRemarks obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.CostSheetRemarksBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.CostSheetRemarksBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetRemarksBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.CostSheetRemarkssWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.CostSheetRemarksBO>)sender)[((IndicoList<Indico.BusinessObjects.CostSheetRemarksBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.CostSheetRemarkssWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void DefaultValuesPriceListsWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.DefaultValuesPriceList obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender)[((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.DefaultValuesPriceListsWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender)[((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.DefaultValuesPriceListsWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void DefaultValuesPriceListsWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.DefaultValuesPriceList obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender)[((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.DefaultValuesPriceListsWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender)[((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.DefaultValuesPriceListsWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void DefaultValuesPriceListsWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.DefaultValuesPriceList obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender)[((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.DefaultValuesPriceListsWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender)[((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.DefaultValuesPriceListsWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void DefaultValuesPriceListsWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.DefaultValuesPriceList obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender)[((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.DefaultValuesPriceListsWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender)[((IndicoList<Indico.BusinessObjects.DefaultValuesPriceListBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.DefaultValuesPriceListsWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void DistributorPriceLevelCostsWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.DistributorPriceLevelCost obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.DistributorPriceLevelCostBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.DistributorPriceLevelCostBO>)sender)[((IndicoList<Indico.BusinessObjects.DistributorPriceLevelCostBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.DistributorPriceLevelCostsWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.DistributorPriceLevelCostBO>)sender)[((IndicoList<Indico.BusinessObjects.DistributorPriceLevelCostBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.DistributorPriceLevelCostsWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void DistributorPriceLevelCostsWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.DistributorPriceLevelCost obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.DistributorPriceLevelCostBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.DistributorPriceLevelCostBO>)sender)[((IndicoList<Indico.BusinessObjects.DistributorPriceLevelCostBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.DistributorPriceLevelCostsWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.DistributorPriceLevelCostBO>)sender)[((IndicoList<Indico.BusinessObjects.DistributorPriceLevelCostBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.DistributorPriceLevelCostsWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void EmbroiderysWhereThisIsAssignedList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Embroidery obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender)[((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.EmbroiderysWhereThisIsAssigned.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender)[((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.EmbroiderysWhereThisIsAssigned.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void EmbroiderysWhereThisIsAssignedList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Embroidery obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender)[((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.EmbroiderysWhereThisIsAssigned.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender)[((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.EmbroiderysWhereThisIsAssigned.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void EmbroiderysWhereThisIsCoordinatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Embroidery obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender)[((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.EmbroiderysWhereThisIsCoordinator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender)[((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.EmbroiderysWhereThisIsCoordinator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void EmbroiderysWhereThisIsCoordinatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Embroidery obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender)[((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.EmbroiderysWhereThisIsCoordinator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender)[((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.EmbroiderysWhereThisIsCoordinator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void EmbroiderysWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Embroidery obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender)[((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.EmbroiderysWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender)[((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.EmbroiderysWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void EmbroiderysWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Embroidery obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender)[((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.EmbroiderysWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender)[((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.EmbroiderysWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void EmbroiderysWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Embroidery obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender)[((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.EmbroiderysWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender)[((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.EmbroiderysWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void EmbroiderysWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Embroidery obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender)[((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.EmbroiderysWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender)[((IndicoList<Indico.BusinessObjects.EmbroideryBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.EmbroiderysWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void IndimanCostSheetRemarkssWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.IndimanCostSheetRemarks obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.IndimanCostSheetRemarksBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.IndimanCostSheetRemarksBO>)sender)[((IndicoList<Indico.BusinessObjects.IndimanCostSheetRemarksBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.IndimanCostSheetRemarkssWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.IndimanCostSheetRemarksBO>)sender)[((IndicoList<Indico.BusinessObjects.IndimanCostSheetRemarksBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.IndimanCostSheetRemarkssWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void IndimanCostSheetRemarkssWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.IndimanCostSheetRemarks obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.IndimanCostSheetRemarksBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.IndimanCostSheetRemarksBO>)sender)[((IndicoList<Indico.BusinessObjects.IndimanCostSheetRemarksBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.IndimanCostSheetRemarkssWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.IndimanCostSheetRemarksBO>)sender)[((IndicoList<Indico.BusinessObjects.IndimanCostSheetRemarksBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.IndimanCostSheetRemarkssWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void InvoicesWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Invoice obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender)[((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.InvoicesWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender)[((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.InvoicesWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void InvoicesWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Invoice obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender)[((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.InvoicesWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender)[((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.InvoicesWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void InvoicesWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Invoice obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender)[((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.InvoicesWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender)[((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.InvoicesWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void InvoicesWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Invoice obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender)[((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.InvoicesWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender)[((IndicoList<Indico.BusinessObjects.InvoiceBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.InvoicesWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void JobNamesWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.JobName obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.JobNameBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.JobNameBO>)sender)[((IndicoList<Indico.BusinessObjects.JobNameBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.JobNamesWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.JobNameBO>)sender)[((IndicoList<Indico.BusinessObjects.JobNameBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.JobNamesWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void JobNamesWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.JobName obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.JobNameBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.JobNameBO>)sender)[((IndicoList<Indico.BusinessObjects.JobNameBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.JobNamesWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.JobNameBO>)sender)[((IndicoList<Indico.BusinessObjects.JobNameBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.JobNamesWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void JobNamesWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.JobName obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.JobNameBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.JobNameBO>)sender)[((IndicoList<Indico.BusinessObjects.JobNameBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.JobNamesWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.JobNameBO>)sender)[((IndicoList<Indico.BusinessObjects.JobNameBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.JobNamesWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void JobNamesWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.JobName obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.JobNameBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.JobNameBO>)sender)[((IndicoList<Indico.BusinessObjects.JobNameBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.JobNamesWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.JobNameBO>)sender)[((IndicoList<Indico.BusinessObjects.JobNameBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.JobNamesWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void LabelPriceLevelCostsWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.LabelPriceLevelCost obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.LabelPriceLevelCostBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.LabelPriceLevelCostBO>)sender)[((IndicoList<Indico.BusinessObjects.LabelPriceLevelCostBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.LabelPriceLevelCostsWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.LabelPriceLevelCostBO>)sender)[((IndicoList<Indico.BusinessObjects.LabelPriceLevelCostBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.LabelPriceLevelCostsWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void LabelPriceLevelCostsWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.LabelPriceLevelCost obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.LabelPriceLevelCostBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.LabelPriceLevelCostBO>)sender)[((IndicoList<Indico.BusinessObjects.LabelPriceLevelCostBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.LabelPriceLevelCostsWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.LabelPriceLevelCostBO>)sender)[((IndicoList<Indico.BusinessObjects.LabelPriceLevelCostBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.LabelPriceLevelCostsWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void LabelPriceListDownloadssWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.LabelPriceListDownloads obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.LabelPriceListDownloadsBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.LabelPriceListDownloadsBO>)sender)[((IndicoList<Indico.BusinessObjects.LabelPriceListDownloadsBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.LabelPriceListDownloadssWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.LabelPriceListDownloadsBO>)sender)[((IndicoList<Indico.BusinessObjects.LabelPriceListDownloadsBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.LabelPriceListDownloadssWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void LabelPriceListDownloadssWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.LabelPriceListDownloads obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.LabelPriceListDownloadsBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.LabelPriceListDownloadsBO>)sender)[((IndicoList<Indico.BusinessObjects.LabelPriceListDownloadsBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.LabelPriceListDownloadssWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.LabelPriceListDownloadsBO>)sender)[((IndicoList<Indico.BusinessObjects.LabelPriceListDownloadsBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.LabelPriceListDownloadssWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void OrdersWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Order obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.OrderBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.OrderBO>)sender)[((IndicoList<Indico.BusinessObjects.OrderBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.OrdersWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.OrderBO>)sender)[((IndicoList<Indico.BusinessObjects.OrderBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.OrdersWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void OrdersWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Order obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.OrderBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.OrderBO>)sender)[((IndicoList<Indico.BusinessObjects.OrderBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.OrdersWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.OrderBO>)sender)[((IndicoList<Indico.BusinessObjects.OrderBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.OrdersWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void OrdersWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Order obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.OrderBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.OrderBO>)sender)[((IndicoList<Indico.BusinessObjects.OrderBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.OrdersWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.OrderBO>)sender)[((IndicoList<Indico.BusinessObjects.OrderBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.OrdersWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void OrdersWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Order obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.OrderBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.OrderBO>)sender)[((IndicoList<Indico.BusinessObjects.OrderBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.OrdersWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.OrderBO>)sender)[((IndicoList<Indico.BusinessObjects.OrderBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.OrdersWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PackingListsWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.PackingList obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PackingListBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PackingListBO>)sender)[((IndicoList<Indico.BusinessObjects.PackingListBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PackingListsWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PackingListBO>)sender)[((IndicoList<Indico.BusinessObjects.PackingListBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PackingListsWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PackingListsWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.PackingList obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PackingListBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PackingListBO>)sender)[((IndicoList<Indico.BusinessObjects.PackingListBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PackingListsWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PackingListBO>)sender)[((IndicoList<Indico.BusinessObjects.PackingListBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PackingListsWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PackingListsWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.PackingList obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PackingListBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PackingListBO>)sender)[((IndicoList<Indico.BusinessObjects.PackingListBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PackingListsWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PackingListBO>)sender)[((IndicoList<Indico.BusinessObjects.PackingListBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PackingListsWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PackingListsWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.PackingList obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PackingListBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PackingListBO>)sender)[((IndicoList<Indico.BusinessObjects.PackingListBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PackingListsWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PackingListBO>)sender)[((IndicoList<Indico.BusinessObjects.PackingListBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PackingListsWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PatternsWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Pattern obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PatternBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PatternsWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PatternBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PatternsWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PatternsWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Pattern obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PatternBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PatternsWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PatternBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PatternsWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PatternsWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Pattern obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PatternBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PatternsWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PatternBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PatternsWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PatternsWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Pattern obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PatternBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PatternsWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PatternBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PatternsWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PatternHistorysWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.PatternHistory obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PatternHistoryBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PatternHistoryBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternHistoryBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PatternHistorysWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PatternHistoryBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternHistoryBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PatternHistorysWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PatternHistorysWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.PatternHistory obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PatternHistoryBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PatternHistoryBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternHistoryBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PatternHistorysWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PatternHistoryBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternHistoryBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PatternHistorysWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PatternSuppliersWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.PatternSupplier obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PatternSuppliersWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PatternSuppliersWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PatternSuppliersWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.PatternSupplier obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PatternSuppliersWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PatternSuppliersWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PatternSuppliersWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.PatternSupplier obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PatternSuppliersWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PatternSuppliersWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PatternSuppliersWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.PatternSupplier obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PatternSuppliersWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender)[((IndicoList<Indico.BusinessObjects.PatternSupplierBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PatternSuppliersWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PricesWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Price obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PriceBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PriceBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PricesWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PriceBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PricesWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PricesWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Price obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PriceBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PriceBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PricesWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PriceBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PricesWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PricesWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Price obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PriceBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PriceBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PricesWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PriceBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PricesWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PricesWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Price obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PriceBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PriceBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PricesWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PriceBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PricesWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PriceChangeEmailListsWhereThisIsUserList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.PriceChangeEmailList obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PriceChangeEmailListBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PriceChangeEmailListBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceChangeEmailListBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PriceChangeEmailListsWhereThisIsUser.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PriceChangeEmailListBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceChangeEmailListBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PriceChangeEmailListsWhereThisIsUser.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PriceChangeEmailListsWhereThisIsUserList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.PriceChangeEmailList obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PriceChangeEmailListBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PriceChangeEmailListBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceChangeEmailListBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PriceChangeEmailListsWhereThisIsUser.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PriceChangeEmailListBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceChangeEmailListBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PriceChangeEmailListsWhereThisIsUser.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PriceLevelCostsWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.PriceLevelCost obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PriceLevelCostsWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PriceLevelCostsWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PriceLevelCostsWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.PriceLevelCost obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PriceLevelCostsWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PriceLevelCostsWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PriceLevelCostsWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.PriceLevelCost obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PriceLevelCostsWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PriceLevelCostsWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PriceLevelCostsWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.PriceLevelCost obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PriceLevelCostsWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceLevelCostBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PriceLevelCostsWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PriceLevelNewsWhereThisIsLastModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.PriceLevelNew obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PriceLevelNewBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PriceLevelNewBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceLevelNewBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PriceLevelNewsWhereThisIsLastModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PriceLevelNewBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceLevelNewBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PriceLevelNewsWhereThisIsLastModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PriceLevelNewsWhereThisIsLastModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.PriceLevelNew obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PriceLevelNewBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PriceLevelNewBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceLevelNewBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PriceLevelNewsWhereThisIsLastModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PriceLevelNewBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceLevelNewBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PriceLevelNewsWhereThisIsLastModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PriceListDownloadssWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.PriceListDownloads obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PriceListDownloadsBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PriceListDownloadsBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceListDownloadsBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PriceListDownloadssWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PriceListDownloadsBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceListDownloadsBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PriceListDownloadssWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void PriceListDownloadssWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.PriceListDownloads obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.PriceListDownloadsBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.PriceListDownloadsBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceListDownloadsBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.PriceListDownloadssWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.PriceListDownloadsBO>)sender)[((IndicoList<Indico.BusinessObjects.PriceListDownloadsBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.PriceListDownloadssWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void QuotesWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Quote obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.QuoteBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.QuoteBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.QuotesWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.QuoteBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.QuotesWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void QuotesWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Quote obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.QuoteBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.QuoteBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.QuotesWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.QuoteBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.QuotesWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void QuotesWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Quote obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.QuoteBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.QuoteBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.QuotesWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.QuoteBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.QuotesWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void QuotesWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Quote obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.QuoteBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.QuoteBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.QuotesWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.QuoteBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.QuotesWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void QuoteChangeEmailListsWhereThisIsUserList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.QuoteChangeEmailList obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.QuoteChangeEmailListBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.QuoteChangeEmailListBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteChangeEmailListBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.QuoteChangeEmailListsWhereThisIsUser.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.QuoteChangeEmailListBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteChangeEmailListBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.QuoteChangeEmailListsWhereThisIsUser.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void QuoteChangeEmailListsWhereThisIsUserList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.QuoteChangeEmailList obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.QuoteChangeEmailListBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.QuoteChangeEmailListBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteChangeEmailListBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.QuoteChangeEmailListsWhereThisIsUser.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.QuoteChangeEmailListBO>)sender)[((IndicoList<Indico.BusinessObjects.QuoteChangeEmailListBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.QuoteChangeEmailListsWhereThisIsUser.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void ReservationsWhereThisIsCoordinatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Reservation obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.ReservationBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.ReservationBO>)sender)[((IndicoList<Indico.BusinessObjects.ReservationBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.ReservationsWhereThisIsCoordinator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.ReservationBO>)sender)[((IndicoList<Indico.BusinessObjects.ReservationBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.ReservationsWhereThisIsCoordinator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void ReservationsWhereThisIsCoordinatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Reservation obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.ReservationBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.ReservationBO>)sender)[((IndicoList<Indico.BusinessObjects.ReservationBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.ReservationsWhereThisIsCoordinator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.ReservationBO>)sender)[((IndicoList<Indico.BusinessObjects.ReservationBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.ReservationsWhereThisIsCoordinator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void ReservationsWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Reservation obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.ReservationBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.ReservationBO>)sender)[((IndicoList<Indico.BusinessObjects.ReservationBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.ReservationsWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.ReservationBO>)sender)[((IndicoList<Indico.BusinessObjects.ReservationBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.ReservationsWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void ReservationsWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Reservation obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.ReservationBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.ReservationBO>)sender)[((IndicoList<Indico.BusinessObjects.ReservationBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.ReservationsWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.ReservationBO>)sender)[((IndicoList<Indico.BusinessObjects.ReservationBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.ReservationsWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void ReservationsWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Reservation obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.ReservationBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.ReservationBO>)sender)[((IndicoList<Indico.BusinessObjects.ReservationBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.ReservationsWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.ReservationBO>)sender)[((IndicoList<Indico.BusinessObjects.ReservationBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.ReservationsWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void ReservationsWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Reservation obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.ReservationBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.ReservationBO>)sender)[((IndicoList<Indico.BusinessObjects.ReservationBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.ReservationsWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.ReservationBO>)sender)[((IndicoList<Indico.BusinessObjects.ReservationBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.ReservationsWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void SuppliersWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Supplier obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.SupplierBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.SupplierBO>)sender)[((IndicoList<Indico.BusinessObjects.SupplierBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.SuppliersWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.SupplierBO>)sender)[((IndicoList<Indico.BusinessObjects.SupplierBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.SuppliersWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void SuppliersWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Supplier obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.SupplierBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.SupplierBO>)sender)[((IndicoList<Indico.BusinessObjects.SupplierBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.SuppliersWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.SupplierBO>)sender)[((IndicoList<Indico.BusinessObjects.SupplierBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.SuppliersWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void SuppliersWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Supplier obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.SupplierBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.SupplierBO>)sender)[((IndicoList<Indico.BusinessObjects.SupplierBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.SuppliersWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.SupplierBO>)sender)[((IndicoList<Indico.BusinessObjects.SupplierBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.SuppliersWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void SuppliersWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Supplier obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.SupplierBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.SupplierBO>)sender)[((IndicoList<Indico.BusinessObjects.SupplierBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.SuppliersWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.SupplierBO>)sender)[((IndicoList<Indico.BusinessObjects.SupplierBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.SuppliersWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void UsersWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.User obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.UserBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.UserBO>)sender)[((IndicoList<Indico.BusinessObjects.UserBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.UsersWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.UserBO>)sender)[((IndicoList<Indico.BusinessObjects.UserBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.UsersWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void UsersWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.User obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.UserBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.UserBO>)sender)[((IndicoList<Indico.BusinessObjects.UserBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.UsersWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.UserBO>)sender)[((IndicoList<Indico.BusinessObjects.UserBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.UsersWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void UsersWhereThisIsModifierList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.User obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.UserBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.UserBO>)sender)[((IndicoList<Indico.BusinessObjects.UserBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.UsersWhereThisIsModifier.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.UserBO>)sender)[((IndicoList<Indico.BusinessObjects.UserBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.UsersWhereThisIsModifier.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void UsersWhereThisIsModifierList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.User obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.UserBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.UserBO>)sender)[((IndicoList<Indico.BusinessObjects.UserBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.UsersWhereThisIsModifier.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.UserBO>)sender)[((IndicoList<Indico.BusinessObjects.UserBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.UsersWhereThisIsModifier.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void UserHistorysWhereThisIsCreatorList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.UserHistory obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender)[((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.UserHistorysWhereThisIsCreator.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender)[((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.UserHistorysWhereThisIsCreator.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void UserHistorysWhereThisIsCreatorList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.UserHistory obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender)[((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.UserHistorysWhereThisIsCreator.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender)[((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.UserHistorysWhereThisIsCreator.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void UserHistorysWhereThisIsUserList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.UserHistory obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender)[((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.UserHistorysWhereThisIsUser.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender)[((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.UserHistorysWhereThisIsUser.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void UserHistorysWhereThisIsUserList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.UserHistory obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender)[((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.UserHistorysWhereThisIsUser.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender)[((IndicoList<Indico.BusinessObjects.UserHistoryBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.UserHistorysWhereThisIsUser.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void UserLoginsWhereThisIsUserList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.UserLogin obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.UserLoginBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.UserLoginBO>)sender)[((IndicoList<Indico.BusinessObjects.UserLoginBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.UserLoginsWhereThisIsUser.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.UserLoginBO>)sender)[((IndicoList<Indico.BusinessObjects.UserLoginBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.UserLoginsWhereThisIsUser.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void UserLoginsWhereThisIsUserList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.UserLogin obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.UserLoginBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.UserLoginBO>)sender)[((IndicoList<Indico.BusinessObjects.UserLoginBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.UserLoginsWhereThisIsUser.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.UserLoginBO>)sender)[((IndicoList<Indico.BusinessObjects.UserLoginBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.UserLoginsWhereThisIsUser.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void UserRolesWhereThisIsUserList_OnAfterAdd(object sender, EventArgs e)
        {
            Indico.DAL.Role obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.RoleBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.RoleBO>)sender)[((IndicoList<Indico.BusinessObjects.RoleBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.UserRolesWhereThisIsUser.Add(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.RoleBO>)sender)[((IndicoList<Indico.BusinessObjects.RoleBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.UserRolesWhereThisIsUser.Add(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void UserRolesWhereThisIsUserList_OnBeforeRemove(object sender, EventArgs e)
        {
            Indico.DAL.Role obj = null;
            if (this.Context != null)
            {
                if (((IndicoList<Indico.BusinessObjects.RoleBO>)sender).Count > 0)
                {
                    obj = ((IndicoList<Indico.BusinessObjects.RoleBO>)sender)[((IndicoList<Indico.BusinessObjects.RoleBO>)sender).Count - 1].ObjDAL;
                    this.ObjDAL.UserRolesWhereThisIsUser.Remove(obj);
                }
            }
            else
            {
                IndicoContext objContext = new IndicoContext();
                obj = ((IndicoList<Indico.BusinessObjects.RoleBO>)sender)[((IndicoList<Indico.BusinessObjects.RoleBO>)sender).Count - 1].SetDAL(objContext.Context);
                this.ObjDAL.UserRolesWhereThisIsUser.Remove(obj);
                objContext.SaveChanges();
                objContext.Dispose();
            }
        }
        
        void Context_OnSendBeforeChanges(object sender, EventArgs e)
        {        
            this._banksWhereThisIsCreatorLoaded = false;
            if (this.banksWhereThisIsCreatorList != null)
            {
                this.banksWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(BanksWhereThisIsCreatorList_OnBeforeRemove);
                this.banksWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(BanksWhereThisIsCreatorList_OnAfterAdd);
            }
            this._banksWhereThisIsModifierLoaded = false;
            if (this.banksWhereThisIsModifierList != null)
            {
                this.banksWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(BanksWhereThisIsModifierList_OnBeforeRemove);
                this.banksWhereThisIsModifierList.OnAfterAdd -= new EventHandler(BanksWhereThisIsModifierList_OnAfterAdd);
            }
            this._companysWhereThisIsCoordinatorLoaded = false;
            if (this.companysWhereThisIsCoordinatorList != null)
            {
                this.companysWhereThisIsCoordinatorList.OnBeforeRemove -= new EventHandler(CompanysWhereThisIsCoordinatorList_OnBeforeRemove);
                this.companysWhereThisIsCoordinatorList.OnAfterAdd -= new EventHandler(CompanysWhereThisIsCoordinatorList_OnAfterAdd);
            }
            this._companysWhereThisIsCreatorLoaded = false;
            if (this.companysWhereThisIsCreatorList != null)
            {
                this.companysWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(CompanysWhereThisIsCreatorList_OnBeforeRemove);
                this.companysWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(CompanysWhereThisIsCreatorList_OnAfterAdd);
            }
            this._companysWhereThisIsModifierLoaded = false;
            if (this.companysWhereThisIsModifierList != null)
            {
                this.companysWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(CompanysWhereThisIsModifierList_OnBeforeRemove);
                this.companysWhereThisIsModifierList.OnAfterAdd -= new EventHandler(CompanysWhereThisIsModifierList_OnAfterAdd);
            }
            this._companysWhereThisIsOwnerLoaded = false;
            if (this.companysWhereThisIsOwnerList != null)
            {
                this.companysWhereThisIsOwnerList.OnBeforeRemove -= new EventHandler(CompanysWhereThisIsOwnerList_OnBeforeRemove);
                this.companysWhereThisIsOwnerList.OnAfterAdd -= new EventHandler(CompanysWhereThisIsOwnerList_OnAfterAdd);
            }
            this._companysWhereThisIsSecondaryCoordinatorLoaded = false;
            if (this.companysWhereThisIsSecondaryCoordinatorList != null)
            {
                this.companysWhereThisIsSecondaryCoordinatorList.OnBeforeRemove -= new EventHandler(CompanysWhereThisIsSecondaryCoordinatorList_OnBeforeRemove);
                this.companysWhereThisIsSecondaryCoordinatorList.OnAfterAdd -= new EventHandler(CompanysWhereThisIsSecondaryCoordinatorList_OnAfterAdd);
            }
            this._coordinatorEmailAddresssWhereThisIsUserLoaded = false;
            if (this.coordinatorEmailAddresssWhereThisIsUserList != null)
            {
                this.coordinatorEmailAddresssWhereThisIsUserList.OnBeforeRemove -= new EventHandler(CoordinatorEmailAddresssWhereThisIsUserList_OnBeforeRemove);
                this.coordinatorEmailAddresssWhereThisIsUserList.OnAfterAdd -= new EventHandler(CoordinatorEmailAddresssWhereThisIsUserList_OnAfterAdd);
            }
            this._costSheetsWhereThisIsCreatorLoaded = false;
            if (this.costSheetsWhereThisIsCreatorList != null)
            {
                this.costSheetsWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(CostSheetsWhereThisIsCreatorList_OnBeforeRemove);
                this.costSheetsWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(CostSheetsWhereThisIsCreatorList_OnAfterAdd);
            }
            this._costSheetsWhereThisIsIndimanModifierLoaded = false;
            if (this.costSheetsWhereThisIsIndimanModifierList != null)
            {
                this.costSheetsWhereThisIsIndimanModifierList.OnBeforeRemove -= new EventHandler(CostSheetsWhereThisIsIndimanModifierList_OnBeforeRemove);
                this.costSheetsWhereThisIsIndimanModifierList.OnAfterAdd -= new EventHandler(CostSheetsWhereThisIsIndimanModifierList_OnAfterAdd);
            }
            this._costSheetsWhereThisIsModifierLoaded = false;
            if (this.costSheetsWhereThisIsModifierList != null)
            {
                this.costSheetsWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(CostSheetsWhereThisIsModifierList_OnBeforeRemove);
                this.costSheetsWhereThisIsModifierList.OnAfterAdd -= new EventHandler(CostSheetsWhereThisIsModifierList_OnAfterAdd);
            }
            this._costSheetRemarkssWhereThisIsModifierLoaded = false;
            if (this.costSheetRemarkssWhereThisIsModifierList != null)
            {
                this.costSheetRemarkssWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(CostSheetRemarkssWhereThisIsModifierList_OnBeforeRemove);
                this.costSheetRemarkssWhereThisIsModifierList.OnAfterAdd -= new EventHandler(CostSheetRemarkssWhereThisIsModifierList_OnAfterAdd);
            }
            this._defaultValuesPriceListsWhereThisIsCreatorLoaded = false;
            if (this.defaultValuesPriceListsWhereThisIsCreatorList != null)
            {
                this.defaultValuesPriceListsWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(DefaultValuesPriceListsWhereThisIsCreatorList_OnBeforeRemove);
                this.defaultValuesPriceListsWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(DefaultValuesPriceListsWhereThisIsCreatorList_OnAfterAdd);
            }
            this._defaultValuesPriceListsWhereThisIsModifierLoaded = false;
            if (this.defaultValuesPriceListsWhereThisIsModifierList != null)
            {
                this.defaultValuesPriceListsWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(DefaultValuesPriceListsWhereThisIsModifierList_OnBeforeRemove);
                this.defaultValuesPriceListsWhereThisIsModifierList.OnAfterAdd -= new EventHandler(DefaultValuesPriceListsWhereThisIsModifierList_OnAfterAdd);
            }
            this._distributorPriceLevelCostsWhereThisIsModifierLoaded = false;
            if (this.distributorPriceLevelCostsWhereThisIsModifierList != null)
            {
                this.distributorPriceLevelCostsWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(DistributorPriceLevelCostsWhereThisIsModifierList_OnBeforeRemove);
                this.distributorPriceLevelCostsWhereThisIsModifierList.OnAfterAdd -= new EventHandler(DistributorPriceLevelCostsWhereThisIsModifierList_OnAfterAdd);
            }
            this._embroiderysWhereThisIsAssignedLoaded = false;
            if (this.embroiderysWhereThisIsAssignedList != null)
            {
                this.embroiderysWhereThisIsAssignedList.OnBeforeRemove -= new EventHandler(EmbroiderysWhereThisIsAssignedList_OnBeforeRemove);
                this.embroiderysWhereThisIsAssignedList.OnAfterAdd -= new EventHandler(EmbroiderysWhereThisIsAssignedList_OnAfterAdd);
            }
            this._embroiderysWhereThisIsCoordinatorLoaded = false;
            if (this.embroiderysWhereThisIsCoordinatorList != null)
            {
                this.embroiderysWhereThisIsCoordinatorList.OnBeforeRemove -= new EventHandler(EmbroiderysWhereThisIsCoordinatorList_OnBeforeRemove);
                this.embroiderysWhereThisIsCoordinatorList.OnAfterAdd -= new EventHandler(EmbroiderysWhereThisIsCoordinatorList_OnAfterAdd);
            }
            this._embroiderysWhereThisIsCreatorLoaded = false;
            if (this.embroiderysWhereThisIsCreatorList != null)
            {
                this.embroiderysWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(EmbroiderysWhereThisIsCreatorList_OnBeforeRemove);
                this.embroiderysWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(EmbroiderysWhereThisIsCreatorList_OnAfterAdd);
            }
            this._embroiderysWhereThisIsModifierLoaded = false;
            if (this.embroiderysWhereThisIsModifierList != null)
            {
                this.embroiderysWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(EmbroiderysWhereThisIsModifierList_OnBeforeRemove);
                this.embroiderysWhereThisIsModifierList.OnAfterAdd -= new EventHandler(EmbroiderysWhereThisIsModifierList_OnAfterAdd);
            }
            this._indimanCostSheetRemarkssWhereThisIsModifierLoaded = false;
            if (this.indimanCostSheetRemarkssWhereThisIsModifierList != null)
            {
                this.indimanCostSheetRemarkssWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(IndimanCostSheetRemarkssWhereThisIsModifierList_OnBeforeRemove);
                this.indimanCostSheetRemarkssWhereThisIsModifierList.OnAfterAdd -= new EventHandler(IndimanCostSheetRemarkssWhereThisIsModifierList_OnAfterAdd);
            }
            this._invoicesWhereThisIsCreatorLoaded = false;
            if (this.invoicesWhereThisIsCreatorList != null)
            {
                this.invoicesWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(InvoicesWhereThisIsCreatorList_OnBeforeRemove);
                this.invoicesWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(InvoicesWhereThisIsCreatorList_OnAfterAdd);
            }
            this._invoicesWhereThisIsModifierLoaded = false;
            if (this.invoicesWhereThisIsModifierList != null)
            {
                this.invoicesWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(InvoicesWhereThisIsModifierList_OnBeforeRemove);
                this.invoicesWhereThisIsModifierList.OnAfterAdd -= new EventHandler(InvoicesWhereThisIsModifierList_OnAfterAdd);
            }
            this._jobNamesWhereThisIsCreatorLoaded = false;
            if (this.jobNamesWhereThisIsCreatorList != null)
            {
                this.jobNamesWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(JobNamesWhereThisIsCreatorList_OnBeforeRemove);
                this.jobNamesWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(JobNamesWhereThisIsCreatorList_OnAfterAdd);
            }
            this._jobNamesWhereThisIsModifierLoaded = false;
            if (this.jobNamesWhereThisIsModifierList != null)
            {
                this.jobNamesWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(JobNamesWhereThisIsModifierList_OnBeforeRemove);
                this.jobNamesWhereThisIsModifierList.OnAfterAdd -= new EventHandler(JobNamesWhereThisIsModifierList_OnAfterAdd);
            }
            this._labelPriceLevelCostsWhereThisIsModifierLoaded = false;
            if (this.labelPriceLevelCostsWhereThisIsModifierList != null)
            {
                this.labelPriceLevelCostsWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(LabelPriceLevelCostsWhereThisIsModifierList_OnBeforeRemove);
                this.labelPriceLevelCostsWhereThisIsModifierList.OnAfterAdd -= new EventHandler(LabelPriceLevelCostsWhereThisIsModifierList_OnAfterAdd);
            }
            this._labelPriceListDownloadssWhereThisIsCreatorLoaded = false;
            if (this.labelPriceListDownloadssWhereThisIsCreatorList != null)
            {
                this.labelPriceListDownloadssWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(LabelPriceListDownloadssWhereThisIsCreatorList_OnBeforeRemove);
                this.labelPriceListDownloadssWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(LabelPriceListDownloadssWhereThisIsCreatorList_OnAfterAdd);
            }
            this._ordersWhereThisIsCreatorLoaded = false;
            if (this.ordersWhereThisIsCreatorList != null)
            {
                this.ordersWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(OrdersWhereThisIsCreatorList_OnBeforeRemove);
                this.ordersWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(OrdersWhereThisIsCreatorList_OnAfterAdd);
            }
            this._ordersWhereThisIsModifierLoaded = false;
            if (this.ordersWhereThisIsModifierList != null)
            {
                this.ordersWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(OrdersWhereThisIsModifierList_OnBeforeRemove);
                this.ordersWhereThisIsModifierList.OnAfterAdd -= new EventHandler(OrdersWhereThisIsModifierList_OnAfterAdd);
            }
            this._packingListsWhereThisIsCreatorLoaded = false;
            if (this.packingListsWhereThisIsCreatorList != null)
            {
                this.packingListsWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(PackingListsWhereThisIsCreatorList_OnBeforeRemove);
                this.packingListsWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(PackingListsWhereThisIsCreatorList_OnAfterAdd);
            }
            this._packingListsWhereThisIsModifierLoaded = false;
            if (this.packingListsWhereThisIsModifierList != null)
            {
                this.packingListsWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(PackingListsWhereThisIsModifierList_OnBeforeRemove);
                this.packingListsWhereThisIsModifierList.OnAfterAdd -= new EventHandler(PackingListsWhereThisIsModifierList_OnAfterAdd);
            }
            this._patternsWhereThisIsCreatorLoaded = false;
            if (this.patternsWhereThisIsCreatorList != null)
            {
                this.patternsWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(PatternsWhereThisIsCreatorList_OnBeforeRemove);
                this.patternsWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(PatternsWhereThisIsCreatorList_OnAfterAdd);
            }
            this._patternsWhereThisIsModifierLoaded = false;
            if (this.patternsWhereThisIsModifierList != null)
            {
                this.patternsWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(PatternsWhereThisIsModifierList_OnBeforeRemove);
                this.patternsWhereThisIsModifierList.OnAfterAdd -= new EventHandler(PatternsWhereThisIsModifierList_OnAfterAdd);
            }
            this._patternHistorysWhereThisIsModifierLoaded = false;
            if (this.patternHistorysWhereThisIsModifierList != null)
            {
                this.patternHistorysWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(PatternHistorysWhereThisIsModifierList_OnBeforeRemove);
                this.patternHistorysWhereThisIsModifierList.OnAfterAdd -= new EventHandler(PatternHistorysWhereThisIsModifierList_OnAfterAdd);
            }
            this._patternSuppliersWhereThisIsCreatorLoaded = false;
            if (this.patternSuppliersWhereThisIsCreatorList != null)
            {
                this.patternSuppliersWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(PatternSuppliersWhereThisIsCreatorList_OnBeforeRemove);
                this.patternSuppliersWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(PatternSuppliersWhereThisIsCreatorList_OnAfterAdd);
            }
            this._patternSuppliersWhereThisIsModifierLoaded = false;
            if (this.patternSuppliersWhereThisIsModifierList != null)
            {
                this.patternSuppliersWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(PatternSuppliersWhereThisIsModifierList_OnBeforeRemove);
                this.patternSuppliersWhereThisIsModifierList.OnAfterAdd -= new EventHandler(PatternSuppliersWhereThisIsModifierList_OnAfterAdd);
            }
            this._pricesWhereThisIsCreatorLoaded = false;
            if (this.pricesWhereThisIsCreatorList != null)
            {
                this.pricesWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(PricesWhereThisIsCreatorList_OnBeforeRemove);
                this.pricesWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(PricesWhereThisIsCreatorList_OnAfterAdd);
            }
            this._pricesWhereThisIsModifierLoaded = false;
            if (this.pricesWhereThisIsModifierList != null)
            {
                this.pricesWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(PricesWhereThisIsModifierList_OnBeforeRemove);
                this.pricesWhereThisIsModifierList.OnAfterAdd -= new EventHandler(PricesWhereThisIsModifierList_OnAfterAdd);
            }
            this._priceChangeEmailListsWhereThisIsUserLoaded = false;
            if (this.priceChangeEmailListsWhereThisIsUserList != null)
            {
                this.priceChangeEmailListsWhereThisIsUserList.OnBeforeRemove -= new EventHandler(PriceChangeEmailListsWhereThisIsUserList_OnBeforeRemove);
                this.priceChangeEmailListsWhereThisIsUserList.OnAfterAdd -= new EventHandler(PriceChangeEmailListsWhereThisIsUserList_OnAfterAdd);
            }
            this._priceLevelCostsWhereThisIsCreatorLoaded = false;
            if (this.priceLevelCostsWhereThisIsCreatorList != null)
            {
                this.priceLevelCostsWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(PriceLevelCostsWhereThisIsCreatorList_OnBeforeRemove);
                this.priceLevelCostsWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(PriceLevelCostsWhereThisIsCreatorList_OnAfterAdd);
            }
            this._priceLevelCostsWhereThisIsModifierLoaded = false;
            if (this.priceLevelCostsWhereThisIsModifierList != null)
            {
                this.priceLevelCostsWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(PriceLevelCostsWhereThisIsModifierList_OnBeforeRemove);
                this.priceLevelCostsWhereThisIsModifierList.OnAfterAdd -= new EventHandler(PriceLevelCostsWhereThisIsModifierList_OnAfterAdd);
            }
            this._priceLevelNewsWhereThisIsLastModifierLoaded = false;
            if (this.priceLevelNewsWhereThisIsLastModifierList != null)
            {
                this.priceLevelNewsWhereThisIsLastModifierList.OnBeforeRemove -= new EventHandler(PriceLevelNewsWhereThisIsLastModifierList_OnBeforeRemove);
                this.priceLevelNewsWhereThisIsLastModifierList.OnAfterAdd -= new EventHandler(PriceLevelNewsWhereThisIsLastModifierList_OnAfterAdd);
            }
            this._priceListDownloadssWhereThisIsCreatorLoaded = false;
            if (this.priceListDownloadssWhereThisIsCreatorList != null)
            {
                this.priceListDownloadssWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(PriceListDownloadssWhereThisIsCreatorList_OnBeforeRemove);
                this.priceListDownloadssWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(PriceListDownloadssWhereThisIsCreatorList_OnAfterAdd);
            }
            this._quotesWhereThisIsCreatorLoaded = false;
            if (this.quotesWhereThisIsCreatorList != null)
            {
                this.quotesWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(QuotesWhereThisIsCreatorList_OnBeforeRemove);
                this.quotesWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(QuotesWhereThisIsCreatorList_OnAfterAdd);
            }
            this._quotesWhereThisIsModifierLoaded = false;
            if (this.quotesWhereThisIsModifierList != null)
            {
                this.quotesWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(QuotesWhereThisIsModifierList_OnBeforeRemove);
                this.quotesWhereThisIsModifierList.OnAfterAdd -= new EventHandler(QuotesWhereThisIsModifierList_OnAfterAdd);
            }
            this._quoteChangeEmailListsWhereThisIsUserLoaded = false;
            if (this.quoteChangeEmailListsWhereThisIsUserList != null)
            {
                this.quoteChangeEmailListsWhereThisIsUserList.OnBeforeRemove -= new EventHandler(QuoteChangeEmailListsWhereThisIsUserList_OnBeforeRemove);
                this.quoteChangeEmailListsWhereThisIsUserList.OnAfterAdd -= new EventHandler(QuoteChangeEmailListsWhereThisIsUserList_OnAfterAdd);
            }
            this._reservationsWhereThisIsCoordinatorLoaded = false;
            if (this.reservationsWhereThisIsCoordinatorList != null)
            {
                this.reservationsWhereThisIsCoordinatorList.OnBeforeRemove -= new EventHandler(ReservationsWhereThisIsCoordinatorList_OnBeforeRemove);
                this.reservationsWhereThisIsCoordinatorList.OnAfterAdd -= new EventHandler(ReservationsWhereThisIsCoordinatorList_OnAfterAdd);
            }
            this._reservationsWhereThisIsCreatorLoaded = false;
            if (this.reservationsWhereThisIsCreatorList != null)
            {
                this.reservationsWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(ReservationsWhereThisIsCreatorList_OnBeforeRemove);
                this.reservationsWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(ReservationsWhereThisIsCreatorList_OnAfterAdd);
            }
            this._reservationsWhereThisIsModifierLoaded = false;
            if (this.reservationsWhereThisIsModifierList != null)
            {
                this.reservationsWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(ReservationsWhereThisIsModifierList_OnBeforeRemove);
                this.reservationsWhereThisIsModifierList.OnAfterAdd -= new EventHandler(ReservationsWhereThisIsModifierList_OnAfterAdd);
            }
            this._suppliersWhereThisIsCreatorLoaded = false;
            if (this.suppliersWhereThisIsCreatorList != null)
            {
                this.suppliersWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(SuppliersWhereThisIsCreatorList_OnBeforeRemove);
                this.suppliersWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(SuppliersWhereThisIsCreatorList_OnAfterAdd);
            }
            this._suppliersWhereThisIsModifierLoaded = false;
            if (this.suppliersWhereThisIsModifierList != null)
            {
                this.suppliersWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(SuppliersWhereThisIsModifierList_OnBeforeRemove);
                this.suppliersWhereThisIsModifierList.OnAfterAdd -= new EventHandler(SuppliersWhereThisIsModifierList_OnAfterAdd);
            }
            this._usersWhereThisIsCreatorLoaded = false;
            if (this.usersWhereThisIsCreatorList != null)
            {
                this.usersWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(UsersWhereThisIsCreatorList_OnBeforeRemove);
                this.usersWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(UsersWhereThisIsCreatorList_OnAfterAdd);
            }
            this._usersWhereThisIsModifierLoaded = false;
            if (this.usersWhereThisIsModifierList != null)
            {
                this.usersWhereThisIsModifierList.OnBeforeRemove -= new EventHandler(UsersWhereThisIsModifierList_OnBeforeRemove);
                this.usersWhereThisIsModifierList.OnAfterAdd -= new EventHandler(UsersWhereThisIsModifierList_OnAfterAdd);
            }
            this._userHistorysWhereThisIsCreatorLoaded = false;
            if (this.userHistorysWhereThisIsCreatorList != null)
            {
                this.userHistorysWhereThisIsCreatorList.OnBeforeRemove -= new EventHandler(UserHistorysWhereThisIsCreatorList_OnBeforeRemove);
                this.userHistorysWhereThisIsCreatorList.OnAfterAdd -= new EventHandler(UserHistorysWhereThisIsCreatorList_OnAfterAdd);
            }
            this._userHistorysWhereThisIsUserLoaded = false;
            if (this.userHistorysWhereThisIsUserList != null)
            {
                this.userHistorysWhereThisIsUserList.OnBeforeRemove -= new EventHandler(UserHistorysWhereThisIsUserList_OnBeforeRemove);
                this.userHistorysWhereThisIsUserList.OnAfterAdd -= new EventHandler(UserHistorysWhereThisIsUserList_OnAfterAdd);
            }
            this._userLoginsWhereThisIsUserLoaded = false;
            if (this.userLoginsWhereThisIsUserList != null)
            {
                this.userLoginsWhereThisIsUserList.OnBeforeRemove -= new EventHandler(UserLoginsWhereThisIsUserList_OnBeforeRemove);
                this.userLoginsWhereThisIsUserList.OnAfterAdd -= new EventHandler(UserLoginsWhereThisIsUserList_OnAfterAdd);
            }
            this._userRolesWhereThisIsUserLoaded = false;
            if (this.userRolesWhereThisIsUserList != null)
            {
                this.userRolesWhereThisIsUserList.OnBeforeRemove -= new EventHandler(UserRolesWhereThisIsUserList_OnBeforeRemove);
                this.userRolesWhereThisIsUserList.OnAfterAdd -= new EventHandler(UserRolesWhereThisIsUserList_OnAfterAdd);
            }
        }
        
        void Context_OnSendAfterChanges(object sender, EventArgs e)
        {   
            if (this.ID > 0)
            {
                this.Cache();
            }
        }

        #endregion
    }
    
    #region UserBOComparer
    public class UserBOComparer : IComparer<Indico.BusinessObjects.UserBO>
    {
        private string propertyToCompareName;
        public UserBOComparer(string propertyToCompare)
        {
            PropertyInfo p = typeof(Indico.BusinessObjects.UserBO).GetProperty(propertyToCompare);
            if (p == null)
                throw new ArgumentException("is not a public property of Indico.BusinessObjects.UserBO", "propertyToCompare");
            this.propertyToCompareName = propertyToCompare;
        }
        
        public UserBOComparer()
        {
        
        }

        #region IComparer<Indico.BusinessObjects.UserBO> Members
        public int Compare(Indico.BusinessObjects.UserBO x, Indico.BusinessObjects.UserBO y)
        {
            if (propertyToCompareName != null)
            {
                PropertyInfo p = typeof(Indico.BusinessObjects.UserBO).GetProperty(propertyToCompareName);
                return compare(p, x, y);
            }
            else
            {
                PropertyInfo[] arrP = typeof(Indico.BusinessObjects.UserBO).GetProperties();
                foreach (PropertyInfo p in arrP)
                {
                    int v = compare(p, x, y);
                    if (v != 0)
                        return v;
                }
                return 0;
            }
        }

        private int compare(PropertyInfo p, Indico.BusinessObjects.UserBO x, Indico.BusinessObjects.UserBO y)
        {
            object xVal = p.GetValue(x, null);
            object yVal = p.GetValue(y, null);

            if (xVal == null)
            {
                if (yVal == null)
                    return 0;
                else
                    return -1; // x is null, y is not, y is greater
            }
            else
            {
                if (y == null)
                    return 1; // x non null, y is null, x is greater
                else if (xVal is string)
                {
                    return StringComparer.OrdinalIgnoreCase.Compare(xVal, yVal);
                }
                else if (xVal is IComparable)
                {
                    return ((IComparable)xVal).CompareTo((IComparable)yVal);
                }
                else
                    throw new ArgumentException
                        ("is not string or valuetype that implements IComparable", "propertyToCompare");

            }
        }

        #endregion
    }
    #endregion
}
